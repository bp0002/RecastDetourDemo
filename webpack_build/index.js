/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/buffer/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/buffer/index.js ***!
  \*********************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/node-libs-browser/node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/timers-browserify/main.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/timers-browserify/main.js ***!
  \*******************************************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/node-libs-browser/node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/BABYLON/Engines/performanceConfigurator.ts":
/*!********************************************************!*\
  !*** ./src/BABYLON/Engines/performanceConfigurator.ts ***!
  \********************************************************/
/*! exports provided: PerformanceConfigurator */
/*! exports used: PerformanceConfigurator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return PerformanceConfigurator; });\n/** @hidden */\r\nvar PerformanceConfigurator = /** @class */ (function () {\r\n    function PerformanceConfigurator() {\r\n    }\r\n    /** @hidden */\r\n    PerformanceConfigurator.SetMatrixPrecision = function (use64bits) {\r\n        PerformanceConfigurator.MatrixTrackPrecisionChange = false;\r\n        if (use64bits && !PerformanceConfigurator.MatrixUse64Bits) {\r\n            if (PerformanceConfigurator.MatrixTrackedMatrices) {\r\n                for (var m = 0; m < PerformanceConfigurator.MatrixTrackedMatrices.length; ++m) {\r\n                    var matrix = PerformanceConfigurator.MatrixTrackedMatrices[m];\r\n                    var values = matrix._m;\r\n                    matrix._m = new Array(16);\r\n                    for (var i = 0; i < 16; ++i) {\r\n                        matrix._m[i] = values[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        PerformanceConfigurator.MatrixUse64Bits = use64bits;\r\n        PerformanceConfigurator.MatrixCurrentType = PerformanceConfigurator.MatrixUse64Bits ? Array : Float32Array;\r\n        PerformanceConfigurator.MatrixTrackedMatrices = null; // reclaim some memory, as we don't need _TrackedMatrices anymore\r\n    };\r\n    /** @hidden */\r\n    PerformanceConfigurator.MatrixUse64Bits = false;\r\n    /** @hidden */\r\n    PerformanceConfigurator.MatrixTrackPrecisionChange = true;\r\n    /** @hidden */\r\n    PerformanceConfigurator.MatrixCurrentType = Float32Array;\r\n    /** @hidden */\r\n    PerformanceConfigurator.MatrixTrackedMatrices = [];\r\n    return PerformanceConfigurator;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Engines/performanceConfigurator.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.axis.ts":
/*!****************************************!*\
  !*** ./src/BABYLON/Maths/math.axis.ts ***!
  \****************************************/
/*! exports provided: Space, Axis, Coordinate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export Space */\n/* unused harmony export Axis */\n/* unused harmony export Coordinate */\n/* harmony import */ var _math_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.vector */ \"./src/BABYLON/Maths/math.vector.ts\");\n\r\n/** Defines supported spaces */\r\nvar Space;\r\n(function (Space) {\r\n    /** Local (object) space */\r\n    Space[Space[\"LOCAL\"] = 0] = \"LOCAL\";\r\n    /** World space */\r\n    Space[Space[\"WORLD\"] = 1] = \"WORLD\";\r\n    /** Bone space */\r\n    Space[Space[\"BONE\"] = 2] = \"BONE\";\r\n})(Space || (Space = {}));\r\n/** Defines the 3 main axes */\r\nvar Axis = /** @class */ (function () {\r\n    function Axis() {\r\n    }\r\n    /** X axis */\r\n    Axis.X = new _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"](1.0, 0.0, 0.0);\r\n    /** Y axis */\r\n    Axis.Y = new _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"](0.0, 1.0, 0.0);\r\n    /** Z axis */\r\n    Axis.Z = new _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"](0.0, 0.0, 1.0);\r\n    return Axis;\r\n}());\r\n\r\n/**\r\n * Defines cartesian components.\r\n */\r\nvar Coordinate;\r\n(function (Coordinate) {\r\n    /** X axis */\r\n    Coordinate[Coordinate[\"X\"] = 0] = \"X\";\r\n    /** Y axis */\r\n    Coordinate[Coordinate[\"Y\"] = 1] = \"Y\";\r\n    /** Z axis */\r\n    Coordinate[Coordinate[\"Z\"] = 2] = \"Z\";\r\n})(Coordinate || (Coordinate = {}));\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.axis.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.color.ts":
/*!*****************************************!*\
  !*** ./src/BABYLON/Maths/math.color.ts ***!
  \*****************************************/
/*! exports provided: Color3, Color4, TmpColors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export Color3 */\n/* unused harmony export Color4 */\n/* unused harmony export TmpColors */\n/* harmony import */ var _math_scalar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.scalar */ \"./src/BABYLON/Maths/math.scalar.ts\");\n/* harmony import */ var _math_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.constants */ \"./src/BABYLON/Maths/math.constants.ts\");\n/* harmony import */ var _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Misc/arrayTools */ \"./src/BABYLON/Misc/arrayTools.ts\");\n/* harmony import */ var _Misc_typeStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Misc/typeStore */ \"./src/BABYLON/Misc/typeStore.ts\");\n\r\n\r\n\r\n\r\n/**\r\n * Class used to hold a RBG color\r\n */\r\nvar Color3 = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Color3 object from red, green, blue values, all between 0 and 1\r\n     * @param r defines the red component (between 0 and 1, default is 0)\r\n     * @param g defines the green component (between 0 and 1, default is 0)\r\n     * @param b defines the blue component (between 0 and 1, default is 0)\r\n     */\r\n    function Color3(\r\n    /**\r\n     * Defines the red component (between 0 and 1, default is 0)\r\n     */\r\n    r, \r\n    /**\r\n     * Defines the green component (between 0 and 1, default is 0)\r\n     */\r\n    g, \r\n    /**\r\n     * Defines the blue component (between 0 and 1, default is 0)\r\n     */\r\n    b) {\r\n        if (r === void 0) { r = 0; }\r\n        if (g === void 0) { g = 0; }\r\n        if (b === void 0) { b = 0; }\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n    }\r\n    /**\r\n     * Creates a string with the Color3 current values\r\n     * @returns the string representation of the Color3 object\r\n     */\r\n    Color3.prototype.toString = function () {\r\n        return \"{R: \" + this.r + \" G:\" + this.g + \" B:\" + this.b + \"}\";\r\n    };\r\n    /**\r\n     * Returns the string \"Color3\"\r\n     * @returns \"Color3\"\r\n     */\r\n    Color3.prototype.getClassName = function () {\r\n        return \"Color3\";\r\n    };\r\n    /**\r\n     * Compute the Color3 hash code\r\n     * @returns an unique number that can be used to hash Color3 objects\r\n     */\r\n    Color3.prototype.getHashCode = function () {\r\n        var hash = (this.r * 255) | 0;\r\n        hash = (hash * 397) ^ ((this.g * 255) | 0);\r\n        hash = (hash * 397) ^ ((this.b * 255) | 0);\r\n        return hash;\r\n    };\r\n    // Operators\r\n    /**\r\n     * Stores in the given array from the given starting index the red, green, blue values as successive elements\r\n     * @param array defines the array where to store the r,g,b components\r\n     * @param index defines an optional index in the target array to define where to start storing values\r\n     * @returns the current Color3 object\r\n     */\r\n    Color3.prototype.toArray = function (array, index) {\r\n        if (index === void 0) { index = 0; }\r\n        array[index] = this.r;\r\n        array[index + 1] = this.g;\r\n        array[index + 2] = this.b;\r\n        return this;\r\n    };\r\n    /**\r\n     * Update the current color with values stored in an array from the starting index of the given array\r\n     * @param array defines the source array\r\n     * @param offset defines an offset in the source array\r\n     * @returns the current Color3 object\r\n     */\r\n    Color3.prototype.fromArray = function (array, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        Color3.FromArrayToRef(array, offset, this);\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Color4 object from the current Color3 and the given alpha\r\n     * @param alpha defines the alpha component on the new Color4 object (default is 1)\r\n     * @returns a new Color4 object\r\n     */\r\n    Color3.prototype.toColor4 = function (alpha) {\r\n        if (alpha === void 0) { alpha = 1; }\r\n        return new Color4(this.r, this.g, this.b, alpha);\r\n    };\r\n    /**\r\n     * Returns a new array populated with 3 numeric elements : red, green and blue values\r\n     * @returns the new array\r\n     */\r\n    Color3.prototype.asArray = function () {\r\n        var result = new Array();\r\n        this.toArray(result, 0);\r\n        return result;\r\n    };\r\n    /**\r\n     * Returns the luminance value\r\n     * @returns a float value\r\n     */\r\n    Color3.prototype.toLuminance = function () {\r\n        return this.r * 0.3 + this.g * 0.59 + this.b * 0.11;\r\n    };\r\n    /**\r\n     * Multiply each Color3 rgb values by the given Color3 rgb values in a new Color3 object\r\n     * @param otherColor defines the second operand\r\n     * @returns the new Color3 object\r\n     */\r\n    Color3.prototype.multiply = function (otherColor) {\r\n        return new Color3(this.r * otherColor.r, this.g * otherColor.g, this.b * otherColor.b);\r\n    };\r\n    /**\r\n     * Multiply the rgb values of the Color3 and the given Color3 and stores the result in the object \"result\"\r\n     * @param otherColor defines the second operand\r\n     * @param result defines the Color3 object where to store the result\r\n     * @returns the current Color3\r\n     */\r\n    Color3.prototype.multiplyToRef = function (otherColor, result) {\r\n        result.r = this.r * otherColor.r;\r\n        result.g = this.g * otherColor.g;\r\n        result.b = this.b * otherColor.b;\r\n        return this;\r\n    };\r\n    /**\r\n     * Determines equality between Color3 objects\r\n     * @param otherColor defines the second operand\r\n     * @returns true if the rgb values are equal to the given ones\r\n     */\r\n    Color3.prototype.equals = function (otherColor) {\r\n        return otherColor && this.r === otherColor.r && this.g === otherColor.g && this.b === otherColor.b;\r\n    };\r\n    /**\r\n     * Determines equality between the current Color3 object and a set of r,b,g values\r\n     * @param r defines the red component to check\r\n     * @param g defines the green component to check\r\n     * @param b defines the blue component to check\r\n     * @returns true if the rgb values are equal to the given ones\r\n     */\r\n    Color3.prototype.equalsFloats = function (r, g, b) {\r\n        return this.r === r && this.g === g && this.b === b;\r\n    };\r\n    /**\r\n     * Multiplies in place each rgb value by scale\r\n     * @param scale defines the scaling factor\r\n     * @returns the updated Color3\r\n     */\r\n    Color3.prototype.scale = function (scale) {\r\n        return new Color3(this.r * scale, this.g * scale, this.b * scale);\r\n    };\r\n    /**\r\n     * Multiplies the rgb values by scale and stores the result into \"result\"\r\n     * @param scale defines the scaling factor\r\n     * @param result defines the Color3 object where to store the result\r\n     * @returns the unmodified current Color3\r\n     */\r\n    Color3.prototype.scaleToRef = function (scale, result) {\r\n        result.r = this.r * scale;\r\n        result.g = this.g * scale;\r\n        result.b = this.b * scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Scale the current Color3 values by a factor and add the result to a given Color3\r\n     * @param scale defines the scale factor\r\n     * @param result defines color to store the result into\r\n     * @returns the unmodified current Color3\r\n     */\r\n    Color3.prototype.scaleAndAddToRef = function (scale, result) {\r\n        result.r += this.r * scale;\r\n        result.g += this.g * scale;\r\n        result.b += this.b * scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Clamps the rgb values by the min and max values and stores the result into \"result\"\r\n     * @param min defines minimum clamping value (default is 0)\r\n     * @param max defines maximum clamping value (default is 1)\r\n     * @param result defines color to store the result into\r\n     * @returns the original Color3\r\n     */\r\n    Color3.prototype.clampToRef = function (min, max, result) {\r\n        if (min === void 0) { min = 0; }\r\n        if (max === void 0) { max = 1; }\r\n        result.r = _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].Clamp(this.r, min, max);\r\n        result.g = _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].Clamp(this.g, min, max);\r\n        result.b = _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].Clamp(this.b, min, max);\r\n        return this;\r\n    };\r\n    /**\r\n     * Creates a new Color3 set with the added values of the current Color3 and of the given one\r\n     * @param otherColor defines the second operand\r\n     * @returns the new Color3\r\n     */\r\n    Color3.prototype.add = function (otherColor) {\r\n        return new Color3(this.r + otherColor.r, this.g + otherColor.g, this.b + otherColor.b);\r\n    };\r\n    /**\r\n     * Stores the result of the addition of the current Color3 and given one rgb values into \"result\"\r\n     * @param otherColor defines the second operand\r\n     * @param result defines Color3 object to store the result into\r\n     * @returns the unmodified current Color3\r\n     */\r\n    Color3.prototype.addToRef = function (otherColor, result) {\r\n        result.r = this.r + otherColor.r;\r\n        result.g = this.g + otherColor.g;\r\n        result.b = this.b + otherColor.b;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Color3 set with the subtracted values of the given one from the current Color3\r\n     * @param otherColor defines the second operand\r\n     * @returns the new Color3\r\n     */\r\n    Color3.prototype.subtract = function (otherColor) {\r\n        return new Color3(this.r - otherColor.r, this.g - otherColor.g, this.b - otherColor.b);\r\n    };\r\n    /**\r\n     * Stores the result of the subtraction of given one from the current Color3 rgb values into \"result\"\r\n     * @param otherColor defines the second operand\r\n     * @param result defines Color3 object to store the result into\r\n     * @returns the unmodified current Color3\r\n     */\r\n    Color3.prototype.subtractToRef = function (otherColor, result) {\r\n        result.r = this.r - otherColor.r;\r\n        result.g = this.g - otherColor.g;\r\n        result.b = this.b - otherColor.b;\r\n        return this;\r\n    };\r\n    /**\r\n     * Copy the current object\r\n     * @returns a new Color3 copied the current one\r\n     */\r\n    Color3.prototype.clone = function () {\r\n        return new Color3(this.r, this.g, this.b);\r\n    };\r\n    /**\r\n     * Copies the rgb values from the source in the current Color3\r\n     * @param source defines the source Color3 object\r\n     * @returns the updated Color3 object\r\n     */\r\n    Color3.prototype.copyFrom = function (source) {\r\n        this.r = source.r;\r\n        this.g = source.g;\r\n        this.b = source.b;\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates the Color3 rgb values from the given floats\r\n     * @param r defines the red component to read from\r\n     * @param g defines the green component to read from\r\n     * @param b defines the blue component to read from\r\n     * @returns the current Color3 object\r\n     */\r\n    Color3.prototype.copyFromFloats = function (r, g, b) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates the Color3 rgb values from the given floats\r\n     * @param r defines the red component to read from\r\n     * @param g defines the green component to read from\r\n     * @param b defines the blue component to read from\r\n     * @returns the current Color3 object\r\n     */\r\n    Color3.prototype.set = function (r, g, b) {\r\n        return this.copyFromFloats(r, g, b);\r\n    };\r\n    /**\r\n     * Compute the Color3 hexadecimal code as a string\r\n     * @returns a string containing the hexadecimal representation of the Color3 object\r\n     */\r\n    Color3.prototype.toHexString = function () {\r\n        var intR = (this.r * 255) | 0;\r\n        var intG = (this.g * 255) | 0;\r\n        var intB = (this.b * 255) | 0;\r\n        return \"#\" + _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].ToHex(intR) + _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].ToHex(intG) + _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].ToHex(intB);\r\n    };\r\n    /**\r\n     * Computes a new Color3 converted from the current one to linear space\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.prototype.toLinearSpace = function () {\r\n        var convertedColor = new Color3();\r\n        this.toLinearSpaceToRef(convertedColor);\r\n        return convertedColor;\r\n    };\r\n    /**\r\n     * Converts current color in rgb space to HSV values\r\n     * @returns a new color3 representing the HSV values\r\n     */\r\n    Color3.prototype.toHSV = function () {\r\n        var result = new Color3();\r\n        this.toHSVToRef(result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Converts current color in rgb space to HSV values\r\n     * @param result defines the Color3 where to store the HSV values\r\n     */\r\n    Color3.prototype.toHSVToRef = function (result) {\r\n        var r = this.r;\r\n        var g = this.g;\r\n        var b = this.b;\r\n        var max = Math.max(r, g, b);\r\n        var min = Math.min(r, g, b);\r\n        var h = 0;\r\n        var s = 0;\r\n        var v = max;\r\n        var dm = max - min;\r\n        if (max !== 0) {\r\n            s = dm / max;\r\n        }\r\n        if (max != min) {\r\n            if (max == r) {\r\n                h = (g - b) / dm;\r\n                if (g < b) {\r\n                    h += 6;\r\n                }\r\n            }\r\n            else if (max == g) {\r\n                h = (b - r) / dm + 2;\r\n            }\r\n            else if (max == b) {\r\n                h = (r - g) / dm + 4;\r\n            }\r\n            h *= 60;\r\n        }\r\n        result.r = h;\r\n        result.g = s;\r\n        result.b = v;\r\n    };\r\n    /**\r\n     * Converts the Color3 values to linear space and stores the result in \"convertedColor\"\r\n     * @param convertedColor defines the Color3 object where to store the linear space version\r\n     * @returns the unmodified Color3\r\n     */\r\n    Color3.prototype.toLinearSpaceToRef = function (convertedColor) {\r\n        convertedColor.r = Math.pow(this.r, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToLinearSpace */ \"c\"]);\r\n        convertedColor.g = Math.pow(this.g, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToLinearSpace */ \"c\"]);\r\n        convertedColor.b = Math.pow(this.b, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToLinearSpace */ \"c\"]);\r\n        return this;\r\n    };\r\n    /**\r\n     * Computes a new Color3 converted from the current one to gamma space\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.prototype.toGammaSpace = function () {\r\n        var convertedColor = new Color3();\r\n        this.toGammaSpaceToRef(convertedColor);\r\n        return convertedColor;\r\n    };\r\n    /**\r\n     * Converts the Color3 values to gamma space and stores the result in \"convertedColor\"\r\n     * @param convertedColor defines the Color3 object where to store the gamma space version\r\n     * @returns the unmodified Color3\r\n     */\r\n    Color3.prototype.toGammaSpaceToRef = function (convertedColor) {\r\n        convertedColor.r = Math.pow(this.r, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToGammaSpace */ \"b\"]);\r\n        convertedColor.g = Math.pow(this.g, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToGammaSpace */ \"b\"]);\r\n        convertedColor.b = Math.pow(this.b, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToGammaSpace */ \"b\"]);\r\n        return this;\r\n    };\r\n    /**\r\n     * Convert Hue, saturation and value to a Color3 (RGB)\r\n     * @param hue defines the hue\r\n     * @param saturation defines the saturation\r\n     * @param value defines the value\r\n     * @param result defines the Color3 where to store the RGB values\r\n     */\r\n    Color3.HSVtoRGBToRef = function (hue, saturation, value, result) {\r\n        var chroma = value * saturation;\r\n        var h = hue / 60;\r\n        var x = chroma * (1 - Math.abs((h % 2) - 1));\r\n        var r = 0;\r\n        var g = 0;\r\n        var b = 0;\r\n        if (h >= 0 && h <= 1) {\r\n            r = chroma;\r\n            g = x;\r\n        }\r\n        else if (h >= 1 && h <= 2) {\r\n            r = x;\r\n            g = chroma;\r\n        }\r\n        else if (h >= 2 && h <= 3) {\r\n            g = chroma;\r\n            b = x;\r\n        }\r\n        else if (h >= 3 && h <= 4) {\r\n            g = x;\r\n            b = chroma;\r\n        }\r\n        else if (h >= 4 && h <= 5) {\r\n            r = x;\r\n            b = chroma;\r\n        }\r\n        else if (h >= 5 && h <= 6) {\r\n            r = chroma;\r\n            b = x;\r\n        }\r\n        var m = value - chroma;\r\n        result.set((r + m), (g + m), (b + m));\r\n    };\r\n    /**\r\n     * Creates a new Color3 from the string containing valid hexadecimal values\r\n     * @param hex defines a string containing valid hexadecimal values\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.FromHexString = function (hex) {\r\n        if (hex.substring(0, 1) !== \"#\" || hex.length !== 7) {\r\n            return new Color3(0, 0, 0);\r\n        }\r\n        var r = parseInt(hex.substring(1, 3), 16);\r\n        var g = parseInt(hex.substring(3, 5), 16);\r\n        var b = parseInt(hex.substring(5, 7), 16);\r\n        return Color3.FromInts(r, g, b);\r\n    };\r\n    /**\r\n     * Creates a new Color3 from the starting index of the given array\r\n     * @param array defines the source array\r\n     * @param offset defines an offset in the source array\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.FromArray = function (array, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return new Color3(array[offset], array[offset + 1], array[offset + 2]);\r\n    };\r\n    /**\r\n     * Creates a new Color3 from the starting index element of the given array\r\n     * @param array defines the source array to read from\r\n     * @param offset defines the offset in the source array\r\n     * @param result defines the target Color3 object\r\n     */\r\n    Color3.FromArrayToRef = function (array, offset, result) {\r\n        if (offset === void 0) { offset = 0; }\r\n        result.r = array[offset];\r\n        result.g = array[offset + 1];\r\n        result.b = array[offset + 2];\r\n    };\r\n    /**\r\n     * Creates a new Color3 from integer values (< 256)\r\n     * @param r defines the red component to read from (value between 0 and 255)\r\n     * @param g defines the green component to read from (value between 0 and 255)\r\n     * @param b defines the blue component to read from (value between 0 and 255)\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.FromInts = function (r, g, b) {\r\n        return new Color3(r / 255.0, g / 255.0, b / 255.0);\r\n    };\r\n    /**\r\n     * Creates a new Color3 with values linearly interpolated of \"amount\" between the start Color3 and the end Color3\r\n     * @param start defines the start Color3 value\r\n     * @param end defines the end Color3 value\r\n     * @param amount defines the gradient value between start and end\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.Lerp = function (start, end, amount) {\r\n        var result = new Color3(0.0, 0.0, 0.0);\r\n        Color3.LerpToRef(start, end, amount, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new Color3 with values linearly interpolated of \"amount\" between the start Color3 and the end Color3\r\n     * @param left defines the start value\r\n     * @param right defines the end value\r\n     * @param amount defines the gradient factor\r\n     * @param result defines the Color3 object where to store the result\r\n     */\r\n    Color3.LerpToRef = function (left, right, amount, result) {\r\n        result.r = left.r + ((right.r - left.r) * amount);\r\n        result.g = left.g + ((right.g - left.g) * amount);\r\n        result.b = left.b + ((right.b - left.b) * amount);\r\n    };\r\n    /**\r\n     * Returns a Color3 value containing a red color\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.Red = function () { return new Color3(1, 0, 0); };\r\n    /**\r\n     * Returns a Color3 value containing a green color\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.Green = function () { return new Color3(0, 1, 0); };\r\n    /**\r\n     * Returns a Color3 value containing a blue color\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.Blue = function () { return new Color3(0, 0, 1); };\r\n    /**\r\n     * Returns a Color3 value containing a black color\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.Black = function () { return new Color3(0, 0, 0); };\r\n    Object.defineProperty(Color3, \"BlackReadOnly\", {\r\n        /**\r\n          * Gets a Color3 value containing a black color that must not be updated\r\n          */\r\n        get: function () {\r\n            return Color3._BlackReadOnly;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a Color3 value containing a white color\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.White = function () { return new Color3(1, 1, 1); };\r\n    /**\r\n     * Returns a Color3 value containing a purple color\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.Purple = function () { return new Color3(0.5, 0, 0.5); };\r\n    /**\r\n     * Returns a Color3 value containing a magenta color\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.Magenta = function () { return new Color3(1, 0, 1); };\r\n    /**\r\n     * Returns a Color3 value containing a yellow color\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.Yellow = function () { return new Color3(1, 1, 0); };\r\n    /**\r\n     * Returns a Color3 value containing a gray color\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.Gray = function () { return new Color3(0.5, 0.5, 0.5); };\r\n    /**\r\n     * Returns a Color3 value containing a teal color\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.Teal = function () { return new Color3(0, 1.0, 1.0); };\r\n    /**\r\n     * Returns a Color3 value containing a random color\r\n     * @returns a new Color3 object\r\n     */\r\n    Color3.Random = function () { return new Color3(Math.random(), Math.random(), Math.random()); };\r\n    // Statics\r\n    Color3._BlackReadOnly = Color3.Black();\r\n    return Color3;\r\n}());\r\n\r\n/**\r\n * Class used to hold a RBGA color\r\n */\r\nvar Color4 = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Color4 object from red, green, blue values, all between 0 and 1\r\n     * @param r defines the red component (between 0 and 1, default is 0)\r\n     * @param g defines the green component (between 0 and 1, default is 0)\r\n     * @param b defines the blue component (between 0 and 1, default is 0)\r\n     * @param a defines the alpha component (between 0 and 1, default is 1)\r\n     */\r\n    function Color4(\r\n    /**\r\n     * Defines the red component (between 0 and 1, default is 0)\r\n     */\r\n    r, \r\n    /**\r\n     * Defines the green component (between 0 and 1, default is 0)\r\n     */\r\n    g, \r\n    /**\r\n     * Defines the blue component (between 0 and 1, default is 0)\r\n     */\r\n    b, \r\n    /**\r\n     * Defines the alpha component (between 0 and 1, default is 1)\r\n     */\r\n    a) {\r\n        if (r === void 0) { r = 0; }\r\n        if (g === void 0) { g = 0; }\r\n        if (b === void 0) { b = 0; }\r\n        if (a === void 0) { a = 1; }\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n    // Operators\r\n    /**\r\n     * Adds in place the given Color4 values to the current Color4 object\r\n     * @param right defines the second operand\r\n     * @returns the current updated Color4 object\r\n     */\r\n    Color4.prototype.addInPlace = function (right) {\r\n        this.r += right.r;\r\n        this.g += right.g;\r\n        this.b += right.b;\r\n        this.a += right.a;\r\n        return this;\r\n    };\r\n    /**\r\n     * Creates a new array populated with 4 numeric elements : red, green, blue, alpha values\r\n     * @returns the new array\r\n     */\r\n    Color4.prototype.asArray = function () {\r\n        var result = new Array();\r\n        this.toArray(result, 0);\r\n        return result;\r\n    };\r\n    /**\r\n     * Stores from the starting index in the given array the Color4 successive values\r\n     * @param array defines the array where to store the r,g,b components\r\n     * @param index defines an optional index in the target array to define where to start storing values\r\n     * @returns the current Color4 object\r\n     */\r\n    Color4.prototype.toArray = function (array, index) {\r\n        if (index === void 0) { index = 0; }\r\n        array[index] = this.r;\r\n        array[index + 1] = this.g;\r\n        array[index + 2] = this.b;\r\n        array[index + 3] = this.a;\r\n        return this;\r\n    };\r\n    /**\r\n     * Update the current color with values stored in an array from the starting index of the given array\r\n     * @param array defines the source array\r\n     * @param offset defines an offset in the source array\r\n     * @returns the current Color4 object\r\n     */\r\n    Color4.prototype.fromArray = function (array, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        Color4.FromArrayToRef(array, offset, this);\r\n        return this;\r\n    };\r\n    /**\r\n     * Determines equality between Color4 objects\r\n     * @param otherColor defines the second operand\r\n     * @returns true if the rgba values are equal to the given ones\r\n     */\r\n    Color4.prototype.equals = function (otherColor) {\r\n        return otherColor && this.r === otherColor.r && this.g === otherColor.g && this.b === otherColor.b && this.a === otherColor.a;\r\n    };\r\n    /**\r\n     * Creates a new Color4 set with the added values of the current Color4 and of the given one\r\n     * @param right defines the second operand\r\n     * @returns a new Color4 object\r\n     */\r\n    Color4.prototype.add = function (right) {\r\n        return new Color4(this.r + right.r, this.g + right.g, this.b + right.b, this.a + right.a);\r\n    };\r\n    /**\r\n     * Creates a new Color4 set with the subtracted values of the given one from the current Color4\r\n     * @param right defines the second operand\r\n     * @returns a new Color4 object\r\n     */\r\n    Color4.prototype.subtract = function (right) {\r\n        return new Color4(this.r - right.r, this.g - right.g, this.b - right.b, this.a - right.a);\r\n    };\r\n    /**\r\n     * Subtracts the given ones from the current Color4 values and stores the results in \"result\"\r\n     * @param right defines the second operand\r\n     * @param result defines the Color4 object where to store the result\r\n     * @returns the current Color4 object\r\n     */\r\n    Color4.prototype.subtractToRef = function (right, result) {\r\n        result.r = this.r - right.r;\r\n        result.g = this.g - right.g;\r\n        result.b = this.b - right.b;\r\n        result.a = this.a - right.a;\r\n        return this;\r\n    };\r\n    /**\r\n     * Creates a new Color4 with the current Color4 values multiplied by scale\r\n     * @param scale defines the scaling factor to apply\r\n     * @returns a new Color4 object\r\n     */\r\n    Color4.prototype.scale = function (scale) {\r\n        return new Color4(this.r * scale, this.g * scale, this.b * scale, this.a * scale);\r\n    };\r\n    /**\r\n     * Multiplies the current Color4 values by scale and stores the result in \"result\"\r\n     * @param scale defines the scaling factor to apply\r\n     * @param result defines the Color4 object where to store the result\r\n     * @returns the current unmodified Color4\r\n     */\r\n    Color4.prototype.scaleToRef = function (scale, result) {\r\n        result.r = this.r * scale;\r\n        result.g = this.g * scale;\r\n        result.b = this.b * scale;\r\n        result.a = this.a * scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Scale the current Color4 values by a factor and add the result to a given Color4\r\n     * @param scale defines the scale factor\r\n     * @param result defines the Color4 object where to store the result\r\n     * @returns the unmodified current Color4\r\n     */\r\n    Color4.prototype.scaleAndAddToRef = function (scale, result) {\r\n        result.r += this.r * scale;\r\n        result.g += this.g * scale;\r\n        result.b += this.b * scale;\r\n        result.a += this.a * scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Clamps the rgb values by the min and max values and stores the result into \"result\"\r\n     * @param min defines minimum clamping value (default is 0)\r\n     * @param max defines maximum clamping value (default is 1)\r\n     * @param result defines color to store the result into.\r\n     * @returns the cuurent Color4\r\n     */\r\n    Color4.prototype.clampToRef = function (min, max, result) {\r\n        if (min === void 0) { min = 0; }\r\n        if (max === void 0) { max = 1; }\r\n        result.r = _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].Clamp(this.r, min, max);\r\n        result.g = _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].Clamp(this.g, min, max);\r\n        result.b = _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].Clamp(this.b, min, max);\r\n        result.a = _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].Clamp(this.a, min, max);\r\n        return this;\r\n    };\r\n    /**\r\n      * Multipy an Color4 value by another and return a new Color4 object\r\n      * @param color defines the Color4 value to multiply by\r\n      * @returns a new Color4 object\r\n      */\r\n    Color4.prototype.multiply = function (color) {\r\n        return new Color4(this.r * color.r, this.g * color.g, this.b * color.b, this.a * color.a);\r\n    };\r\n    /**\r\n     * Multipy a Color4 value by another and push the result in a reference value\r\n     * @param color defines the Color4 value to multiply by\r\n     * @param result defines the Color4 to fill the result in\r\n     * @returns the result Color4\r\n     */\r\n    Color4.prototype.multiplyToRef = function (color, result) {\r\n        result.r = this.r * color.r;\r\n        result.g = this.g * color.g;\r\n        result.b = this.b * color.b;\r\n        result.a = this.a * color.a;\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a string with the Color4 current values\r\n     * @returns the string representation of the Color4 object\r\n     */\r\n    Color4.prototype.toString = function () {\r\n        return \"{R: \" + this.r + \" G:\" + this.g + \" B:\" + this.b + \" A:\" + this.a + \"}\";\r\n    };\r\n    /**\r\n     * Returns the string \"Color4\"\r\n     * @returns \"Color4\"\r\n     */\r\n    Color4.prototype.getClassName = function () {\r\n        return \"Color4\";\r\n    };\r\n    /**\r\n     * Compute the Color4 hash code\r\n     * @returns an unique number that can be used to hash Color4 objects\r\n     */\r\n    Color4.prototype.getHashCode = function () {\r\n        var hash = (this.r * 255) | 0;\r\n        hash = (hash * 397) ^ ((this.g * 255) | 0);\r\n        hash = (hash * 397) ^ ((this.b * 255) | 0);\r\n        hash = (hash * 397) ^ ((this.a * 255) | 0);\r\n        return hash;\r\n    };\r\n    /**\r\n     * Creates a new Color4 copied from the current one\r\n     * @returns a new Color4 object\r\n     */\r\n    Color4.prototype.clone = function () {\r\n        return new Color4(this.r, this.g, this.b, this.a);\r\n    };\r\n    /**\r\n     * Copies the given Color4 values into the current one\r\n     * @param source defines the source Color4 object\r\n     * @returns the current updated Color4 object\r\n     */\r\n    Color4.prototype.copyFrom = function (source) {\r\n        this.r = source.r;\r\n        this.g = source.g;\r\n        this.b = source.b;\r\n        this.a = source.a;\r\n        return this;\r\n    };\r\n    /**\r\n     * Copies the given float values into the current one\r\n     * @param r defines the red component to read from\r\n     * @param g defines the green component to read from\r\n     * @param b defines the blue component to read from\r\n     * @param a defines the alpha component to read from\r\n     * @returns the current updated Color4 object\r\n     */\r\n    Color4.prototype.copyFromFloats = function (r, g, b, a) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n        return this;\r\n    };\r\n    /**\r\n     * Copies the given float values into the current one\r\n     * @param r defines the red component to read from\r\n     * @param g defines the green component to read from\r\n     * @param b defines the blue component to read from\r\n     * @param a defines the alpha component to read from\r\n     * @returns the current updated Color4 object\r\n     */\r\n    Color4.prototype.set = function (r, g, b, a) {\r\n        return this.copyFromFloats(r, g, b, a);\r\n    };\r\n    /**\r\n     * Compute the Color4 hexadecimal code as a string\r\n     * @param returnAsColor3 defines if the string should only contains RGB values (off by default)\r\n     * @returns a string containing the hexadecimal representation of the Color4 object\r\n     */\r\n    Color4.prototype.toHexString = function (returnAsColor3) {\r\n        if (returnAsColor3 === void 0) { returnAsColor3 = false; }\r\n        var intR = (this.r * 255) | 0;\r\n        var intG = (this.g * 255) | 0;\r\n        var intB = (this.b * 255) | 0;\r\n        if (returnAsColor3) {\r\n            return \"#\" + _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].ToHex(intR) + _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].ToHex(intG) + _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].ToHex(intB);\r\n        }\r\n        var intA = (this.a * 255) | 0;\r\n        return \"#\" + _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].ToHex(intR) + _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].ToHex(intG) + _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].ToHex(intB) + _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].ToHex(intA);\r\n    };\r\n    /**\r\n     * Computes a new Color4 converted from the current one to linear space\r\n     * @returns a new Color4 object\r\n     */\r\n    Color4.prototype.toLinearSpace = function () {\r\n        var convertedColor = new Color4();\r\n        this.toLinearSpaceToRef(convertedColor);\r\n        return convertedColor;\r\n    };\r\n    /**\r\n     * Converts the Color4 values to linear space and stores the result in \"convertedColor\"\r\n     * @param convertedColor defines the Color4 object where to store the linear space version\r\n     * @returns the unmodified Color4\r\n     */\r\n    Color4.prototype.toLinearSpaceToRef = function (convertedColor) {\r\n        convertedColor.r = Math.pow(this.r, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToLinearSpace */ \"c\"]);\r\n        convertedColor.g = Math.pow(this.g, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToLinearSpace */ \"c\"]);\r\n        convertedColor.b = Math.pow(this.b, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToLinearSpace */ \"c\"]);\r\n        convertedColor.a = this.a;\r\n        return this;\r\n    };\r\n    /**\r\n     * Computes a new Color4 converted from the current one to gamma space\r\n     * @returns a new Color4 object\r\n     */\r\n    Color4.prototype.toGammaSpace = function () {\r\n        var convertedColor = new Color4();\r\n        this.toGammaSpaceToRef(convertedColor);\r\n        return convertedColor;\r\n    };\r\n    /**\r\n     * Converts the Color4 values to gamma space and stores the result in \"convertedColor\"\r\n     * @param convertedColor defines the Color4 object where to store the gamma space version\r\n     * @returns the unmodified Color4\r\n     */\r\n    Color4.prototype.toGammaSpaceToRef = function (convertedColor) {\r\n        convertedColor.r = Math.pow(this.r, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToGammaSpace */ \"b\"]);\r\n        convertedColor.g = Math.pow(this.g, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToGammaSpace */ \"b\"]);\r\n        convertedColor.b = Math.pow(this.b, _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* ToGammaSpace */ \"b\"]);\r\n        convertedColor.a = this.a;\r\n        return this;\r\n    };\r\n    // Statics\r\n    /**\r\n     * Creates a new Color4 from the string containing valid hexadecimal values\r\n     * @param hex defines a string containing valid hexadecimal values\r\n     * @returns a new Color4 object\r\n     */\r\n    Color4.FromHexString = function (hex) {\r\n        if (hex.substring(0, 1) !== \"#\" || hex.length !== 9) {\r\n            return new Color4(0.0, 0.0, 0.0, 0.0);\r\n        }\r\n        var r = parseInt(hex.substring(1, 3), 16);\r\n        var g = parseInt(hex.substring(3, 5), 16);\r\n        var b = parseInt(hex.substring(5, 7), 16);\r\n        var a = parseInt(hex.substring(7, 9), 16);\r\n        return Color4.FromInts(r, g, b, a);\r\n    };\r\n    /**\r\n     * Creates a new Color4 object set with the linearly interpolated values of \"amount\" between the left Color4 object and the right Color4 object\r\n     * @param left defines the start value\r\n     * @param right defines the end value\r\n     * @param amount defines the gradient factor\r\n     * @returns a new Color4 object\r\n     */\r\n    Color4.Lerp = function (left, right, amount) {\r\n        var result = new Color4(0.0, 0.0, 0.0, 0.0);\r\n        Color4.LerpToRef(left, right, amount, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Set the given \"result\" with the linearly interpolated values of \"amount\" between the left Color4 object and the right Color4 object\r\n     * @param left defines the start value\r\n     * @param right defines the end value\r\n     * @param amount defines the gradient factor\r\n     * @param result defines the Color4 object where to store data\r\n     */\r\n    Color4.LerpToRef = function (left, right, amount, result) {\r\n        result.r = left.r + (right.r - left.r) * amount;\r\n        result.g = left.g + (right.g - left.g) * amount;\r\n        result.b = left.b + (right.b - left.b) * amount;\r\n        result.a = left.a + (right.a - left.a) * amount;\r\n    };\r\n    /**\r\n     * Creates a new Color4 from a Color3 and an alpha value\r\n     * @param color3 defines the source Color3 to read from\r\n     * @param alpha defines the alpha component (1.0 by default)\r\n     * @returns a new Color4 object\r\n     */\r\n    Color4.FromColor3 = function (color3, alpha) {\r\n        if (alpha === void 0) { alpha = 1.0; }\r\n        return new Color4(color3.r, color3.g, color3.b, alpha);\r\n    };\r\n    /**\r\n     * Creates a new Color4 from the starting index element of the given array\r\n     * @param array defines the source array to read from\r\n     * @param offset defines the offset in the source array\r\n     * @returns a new Color4 object\r\n     */\r\n    Color4.FromArray = function (array, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return new Color4(array[offset], array[offset + 1], array[offset + 2], array[offset + 3]);\r\n    };\r\n    /**\r\n     * Creates a new Color4 from the starting index element of the given array\r\n     * @param array defines the source array to read from\r\n     * @param offset defines the offset in the source array\r\n     * @param result defines the target Color4 object\r\n     */\r\n    Color4.FromArrayToRef = function (array, offset, result) {\r\n        if (offset === void 0) { offset = 0; }\r\n        result.r = array[offset];\r\n        result.g = array[offset + 1];\r\n        result.b = array[offset + 2];\r\n        result.a = array[offset + 3];\r\n    };\r\n    /**\r\n     * Creates a new Color3 from integer values (< 256)\r\n     * @param r defines the red component to read from (value between 0 and 255)\r\n     * @param g defines the green component to read from (value between 0 and 255)\r\n     * @param b defines the blue component to read from (value between 0 and 255)\r\n     * @param a defines the alpha component to read from (value between 0 and 255)\r\n     * @returns a new Color3 object\r\n     */\r\n    Color4.FromInts = function (r, g, b, a) {\r\n        return new Color4(r / 255.0, g / 255.0, b / 255.0, a / 255.0);\r\n    };\r\n    /**\r\n     * Check the content of a given array and convert it to an array containing RGBA data\r\n     * If the original array was already containing count * 4 values then it is returned directly\r\n     * @param colors defines the array to check\r\n     * @param count defines the number of RGBA data to expect\r\n     * @returns an array containing count * 4 values (RGBA)\r\n     */\r\n    Color4.CheckColors4 = function (colors, count) {\r\n        // Check if color3 was used\r\n        if (colors.length === count * 3) {\r\n            var colors4 = [];\r\n            for (var index = 0; index < colors.length; index += 3) {\r\n                var newIndex = (index / 3) * 4;\r\n                colors4[newIndex] = colors[index];\r\n                colors4[newIndex + 1] = colors[index + 1];\r\n                colors4[newIndex + 2] = colors[index + 2];\r\n                colors4[newIndex + 3] = 1.0;\r\n            }\r\n            return colors4;\r\n        }\r\n        return colors;\r\n    };\r\n    return Color4;\r\n}());\r\n\r\n/**\r\n * @hidden\r\n */\r\nvar TmpColors = /** @class */ (function () {\r\n    function TmpColors() {\r\n    }\r\n    TmpColors.Color3 = _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__[/* ArrayTools */ \"a\"].BuildArray(3, Color3.Black);\r\n    TmpColors.Color4 = _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__[/* ArrayTools */ \"a\"].BuildArray(3, function () { return new Color4(0, 0, 0, 0); });\r\n    return TmpColors;\r\n}());\r\n\r\n_Misc_typeStore__WEBPACK_IMPORTED_MODULE_3__[/* _TypeStore */ \"a\"].RegisteredTypes[\"BABYLON.Color3\"] = Color3;\r\n_Misc_typeStore__WEBPACK_IMPORTED_MODULE_3__[/* _TypeStore */ \"a\"].RegisteredTypes[\"BABYLON.Color4\"] = Color4;\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.color.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.constants.ts":
/*!*********************************************!*\
  !*** ./src/BABYLON/Maths/math.constants.ts ***!
  \*********************************************/
/*! exports provided: ToGammaSpace, ToLinearSpace, Epsilon */
/*! exports used: Epsilon, ToGammaSpace, ToLinearSpace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ToGammaSpace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return ToLinearSpace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Epsilon; });\n/**\r\n * Constant used to convert a value to gamma space\r\n * @ignorenaming\r\n */\r\nvar ToGammaSpace = 1 / 2.2;\r\n/**\r\n * Constant used to convert a value to linear space\r\n * @ignorenaming\r\n */\r\nvar ToLinearSpace = 2.2;\r\n/**\r\n * Constant used to define the minimal number value in Babylon.js\r\n * @ignorenaming\r\n */\r\nvar Epsilon = 0.001;\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.constants.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.frustum.ts":
/*!*******************************************!*\
  !*** ./src/BABYLON/Maths/math.frustum.ts ***!
  \*******************************************/
/*! exports provided: Frustum */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export Frustum */\n/* harmony import */ var _math_plane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.plane */ \"./src/BABYLON/Maths/math.plane.ts\");\n\r\n/**\r\n * Represents a camera frustum\r\n */\r\nvar Frustum = /** @class */ (function () {\r\n    function Frustum() {\r\n    }\r\n    /**\r\n     * Gets the planes representing the frustum\r\n     * @param transform matrix to be applied to the returned planes\r\n     * @returns a new array of 6 Frustum planes computed by the given transformation matrix.\r\n     */\r\n    Frustum.GetPlanes = function (transform) {\r\n        var frustumPlanes = [];\r\n        for (var index = 0; index < 6; index++) {\r\n            frustumPlanes.push(new _math_plane__WEBPACK_IMPORTED_MODULE_0__[/* Plane */ \"a\"](0.0, 0.0, 0.0, 0.0));\r\n        }\r\n        Frustum.GetPlanesToRef(transform, frustumPlanes);\r\n        return frustumPlanes;\r\n    };\r\n    /**\r\n     * Gets the near frustum plane transformed by the transform matrix\r\n     * @param transform transformation matrix to be applied to the resulting frustum plane\r\n     * @param frustumPlane the resuling frustum plane\r\n     */\r\n    Frustum.GetNearPlaneToRef = function (transform, frustumPlane) {\r\n        var m = transform.m;\r\n        frustumPlane.normal.x = m[3] + m[2];\r\n        frustumPlane.normal.y = m[7] + m[6];\r\n        frustumPlane.normal.z = m[11] + m[10];\r\n        frustumPlane.d = m[15] + m[14];\r\n        frustumPlane.normalize();\r\n    };\r\n    /**\r\n     * Gets the far frustum plane transformed by the transform matrix\r\n     * @param transform transformation matrix to be applied to the resulting frustum plane\r\n     * @param frustumPlane the resuling frustum plane\r\n     */\r\n    Frustum.GetFarPlaneToRef = function (transform, frustumPlane) {\r\n        var m = transform.m;\r\n        frustumPlane.normal.x = m[3] - m[2];\r\n        frustumPlane.normal.y = m[7] - m[6];\r\n        frustumPlane.normal.z = m[11] - m[10];\r\n        frustumPlane.d = m[15] - m[14];\r\n        frustumPlane.normalize();\r\n    };\r\n    /**\r\n     * Gets the left frustum plane transformed by the transform matrix\r\n     * @param transform transformation matrix to be applied to the resulting frustum plane\r\n     * @param frustumPlane the resuling frustum plane\r\n     */\r\n    Frustum.GetLeftPlaneToRef = function (transform, frustumPlane) {\r\n        var m = transform.m;\r\n        frustumPlane.normal.x = m[3] + m[0];\r\n        frustumPlane.normal.y = m[7] + m[4];\r\n        frustumPlane.normal.z = m[11] + m[8];\r\n        frustumPlane.d = m[15] + m[12];\r\n        frustumPlane.normalize();\r\n    };\r\n    /**\r\n     * Gets the right frustum plane transformed by the transform matrix\r\n     * @param transform transformation matrix to be applied to the resulting frustum plane\r\n     * @param frustumPlane the resuling frustum plane\r\n     */\r\n    Frustum.GetRightPlaneToRef = function (transform, frustumPlane) {\r\n        var m = transform.m;\r\n        frustumPlane.normal.x = m[3] - m[0];\r\n        frustumPlane.normal.y = m[7] - m[4];\r\n        frustumPlane.normal.z = m[11] - m[8];\r\n        frustumPlane.d = m[15] - m[12];\r\n        frustumPlane.normalize();\r\n    };\r\n    /**\r\n     * Gets the top frustum plane transformed by the transform matrix\r\n     * @param transform transformation matrix to be applied to the resulting frustum plane\r\n     * @param frustumPlane the resuling frustum plane\r\n     */\r\n    Frustum.GetTopPlaneToRef = function (transform, frustumPlane) {\r\n        var m = transform.m;\r\n        frustumPlane.normal.x = m[3] - m[1];\r\n        frustumPlane.normal.y = m[7] - m[5];\r\n        frustumPlane.normal.z = m[11] - m[9];\r\n        frustumPlane.d = m[15] - m[13];\r\n        frustumPlane.normalize();\r\n    };\r\n    /**\r\n     * Gets the bottom frustum plane transformed by the transform matrix\r\n     * @param transform transformation matrix to be applied to the resulting frustum plane\r\n     * @param frustumPlane the resuling frustum plane\r\n     */\r\n    Frustum.GetBottomPlaneToRef = function (transform, frustumPlane) {\r\n        var m = transform.m;\r\n        frustumPlane.normal.x = m[3] + m[1];\r\n        frustumPlane.normal.y = m[7] + m[5];\r\n        frustumPlane.normal.z = m[11] + m[9];\r\n        frustumPlane.d = m[15] + m[13];\r\n        frustumPlane.normalize();\r\n    };\r\n    /**\r\n     * Sets the given array \"frustumPlanes\" with the 6 Frustum planes computed by the given transformation matrix.\r\n     * @param transform transformation matrix to be applied to the resulting frustum planes\r\n     * @param frustumPlanes the resuling frustum planes\r\n     */\r\n    Frustum.GetPlanesToRef = function (transform, frustumPlanes) {\r\n        // Near\r\n        Frustum.GetNearPlaneToRef(transform, frustumPlanes[0]);\r\n        // Far\r\n        Frustum.GetFarPlaneToRef(transform, frustumPlanes[1]);\r\n        // Left\r\n        Frustum.GetLeftPlaneToRef(transform, frustumPlanes[2]);\r\n        // Right\r\n        Frustum.GetRightPlaneToRef(transform, frustumPlanes[3]);\r\n        // Top\r\n        Frustum.GetTopPlaneToRef(transform, frustumPlanes[4]);\r\n        // Bottom\r\n        Frustum.GetBottomPlaneToRef(transform, frustumPlanes[5]);\r\n    };\r\n    return Frustum;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.frustum.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.path.ts":
/*!****************************************!*\
  !*** ./src/BABYLON/Maths/math.path.ts ***!
  \****************************************/
/*! exports provided: Orientation, BezierCurve, Angle, Arc2, Path2, Path3D, Curve3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export Orientation */\n/* unused harmony export BezierCurve */\n/* unused harmony export Angle */\n/* unused harmony export Arc2 */\n/* unused harmony export Path2 */\n/* unused harmony export Path3D */\n/* unused harmony export Curve3 */\n/* harmony import */ var _math_scalar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.scalar */ \"./src/BABYLON/Maths/math.scalar.ts\");\n/* harmony import */ var _math_vector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.vector */ \"./src/BABYLON/Maths/math.vector.ts\");\n/* harmony import */ var _math_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.constants */ \"./src/BABYLON/Maths/math.constants.ts\");\n\r\n\r\n\r\n/**\r\n * Defines potential orientation for back face culling\r\n */\r\nvar Orientation;\r\n(function (Orientation) {\r\n    /**\r\n     * Clockwise\r\n     */\r\n    Orientation[Orientation[\"CW\"] = 0] = \"CW\";\r\n    /** Counter clockwise */\r\n    Orientation[Orientation[\"CCW\"] = 1] = \"CCW\";\r\n})(Orientation || (Orientation = {}));\r\n/** Class used to represent a Bezier curve */\r\nvar BezierCurve = /** @class */ (function () {\r\n    function BezierCurve() {\r\n    }\r\n    /**\r\n     * Returns the cubic Bezier interpolated value (float) at \"t\" (float) from the given x1, y1, x2, y2 floats\r\n     * @param t defines the time\r\n     * @param x1 defines the left coordinate on X axis\r\n     * @param y1 defines the left coordinate on Y axis\r\n     * @param x2 defines the right coordinate on X axis\r\n     * @param y2 defines the right coordinate on Y axis\r\n     * @returns the interpolated value\r\n     */\r\n    BezierCurve.Interpolate = function (t, x1, y1, x2, y2) {\r\n        // Extract X (which is equal to time here)\r\n        var f0 = 1 - 3 * x2 + 3 * x1;\r\n        var f1 = 3 * x2 - 6 * x1;\r\n        var f2 = 3 * x1;\r\n        var refinedT = t;\r\n        for (var i = 0; i < 5; i++) {\r\n            var refinedT2 = refinedT * refinedT;\r\n            var refinedT3 = refinedT2 * refinedT;\r\n            var x = f0 * refinedT3 + f1 * refinedT2 + f2 * refinedT;\r\n            var slope = 1.0 / (3.0 * f0 * refinedT2 + 2.0 * f1 * refinedT + f2);\r\n            refinedT -= (x - t) * slope;\r\n            refinedT = Math.min(1, Math.max(0, refinedT));\r\n        }\r\n        // Resolve cubic bezier for the given x\r\n        return 3 * Math.pow(1 - refinedT, 2) * refinedT * y1 + 3 * (1 - refinedT) * Math.pow(refinedT, 2) * y2 + Math.pow(refinedT, 3);\r\n    };\r\n    return BezierCurve;\r\n}());\r\n\r\n/**\r\n * Defines angle representation\r\n */\r\nvar Angle = /** @class */ (function () {\r\n    /**\r\n     * Creates an Angle object of \"radians\" radians (float).\r\n     * @param radians the angle in radians\r\n     */\r\n    function Angle(radians) {\r\n        this._radians = radians;\r\n        if (this._radians < 0.0) {\r\n            this._radians += 2.0 * Math.PI;\r\n        }\r\n    }\r\n    /**\r\n     * Get value in degrees\r\n     * @returns the Angle value in degrees (float)\r\n     */\r\n    Angle.prototype.degrees = function () {\r\n        return (this._radians * 180.0) / Math.PI;\r\n    };\r\n    /**\r\n     * Get value in radians\r\n     * @returns the Angle value in radians (float)\r\n     */\r\n    Angle.prototype.radians = function () {\r\n        return this._radians;\r\n    };\r\n    /**\r\n     * Gets a new Angle object valued with the gradient angle, in radians, of the line joining two points\r\n     * @param a defines first point as the origin\r\n     * @param b defines point\r\n     * @returns a new Angle\r\n     */\r\n    Angle.BetweenTwoPoints = function (a, b) {\r\n        var delta = b.subtract(a);\r\n        var theta = Math.atan2(delta.y, delta.x);\r\n        return new Angle(theta);\r\n    };\r\n    /**\r\n     * Gets a new Angle object from the given float in radians\r\n     * @param radians defines the angle value in radians\r\n     * @returns a new Angle\r\n     */\r\n    Angle.FromRadians = function (radians) {\r\n        return new Angle(radians);\r\n    };\r\n    /**\r\n     * Gets a new Angle object from the given float in degrees\r\n     * @param degrees defines the angle value in degrees\r\n     * @returns a new Angle\r\n     */\r\n    Angle.FromDegrees = function (degrees) {\r\n        return new Angle((degrees * Math.PI) / 180.0);\r\n    };\r\n    return Angle;\r\n}());\r\n\r\n/**\r\n * This represents an arc in a 2d space.\r\n */\r\nvar Arc2 = /** @class */ (function () {\r\n    /**\r\n     * Creates an Arc object from the three given points : start, middle and end.\r\n     * @param startPoint Defines the start point of the arc\r\n     * @param midPoint Defines the midlle point of the arc\r\n     * @param endPoint Defines the end point of the arc\r\n     */\r\n    function Arc2(\r\n    /** Defines the start point of the arc */\r\n    startPoint, \r\n    /** Defines the mid point of the arc */\r\n    midPoint, \r\n    /** Defines the end point of the arc */\r\n    endPoint) {\r\n        this.startPoint = startPoint;\r\n        this.midPoint = midPoint;\r\n        this.endPoint = endPoint;\r\n        var temp = Math.pow(midPoint.x, 2) + Math.pow(midPoint.y, 2);\r\n        var startToMid = (Math.pow(startPoint.x, 2) + Math.pow(startPoint.y, 2) - temp) / 2;\r\n        var midToEnd = (temp - Math.pow(endPoint.x, 2) - Math.pow(endPoint.y, 2)) / 2;\r\n        var det = (startPoint.x - midPoint.x) * (midPoint.y - endPoint.y) - (midPoint.x - endPoint.x) * (startPoint.y - midPoint.y);\r\n        this.centerPoint = new _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector2 */ \"c\"]((startToMid * (midPoint.y - endPoint.y) - midToEnd * (startPoint.y - midPoint.y)) / det, ((startPoint.x - midPoint.x) * midToEnd - (midPoint.x - endPoint.x) * startToMid) / det);\r\n        this.radius = this.centerPoint.subtract(this.startPoint).length();\r\n        this.startAngle = Angle.BetweenTwoPoints(this.centerPoint, this.startPoint);\r\n        var a1 = this.startAngle.degrees();\r\n        var a2 = Angle.BetweenTwoPoints(this.centerPoint, this.midPoint).degrees();\r\n        var a3 = Angle.BetweenTwoPoints(this.centerPoint, this.endPoint).degrees();\r\n        // angles correction\r\n        if (a2 - a1 > +180.0) {\r\n            a2 -= 360.0;\r\n        }\r\n        if (a2 - a1 < -180.0) {\r\n            a2 += 360.0;\r\n        }\r\n        if (a3 - a2 > +180.0) {\r\n            a3 -= 360.0;\r\n        }\r\n        if (a3 - a2 < -180.0) {\r\n            a3 += 360.0;\r\n        }\r\n        this.orientation = a2 - a1 < 0 ? Orientation.CW : Orientation.CCW;\r\n        this.angle = Angle.FromDegrees(this.orientation === Orientation.CW ? a1 - a3 : a3 - a1);\r\n    }\r\n    return Arc2;\r\n}());\r\n\r\n/**\r\n * Represents a 2D path made up of multiple 2D points\r\n */\r\nvar Path2 = /** @class */ (function () {\r\n    /**\r\n     * Creates a Path2 object from the starting 2D coordinates x and y.\r\n     * @param x the starting points x value\r\n     * @param y the starting points y value\r\n     */\r\n    function Path2(x, y) {\r\n        this._points = new Array();\r\n        this._length = 0.0;\r\n        /**\r\n         * If the path start and end point are the same\r\n         */\r\n        this.closed = false;\r\n        this._points.push(new _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector2 */ \"c\"](x, y));\r\n    }\r\n    /**\r\n     * Adds a new segment until the given coordinates (x, y) to the current Path2.\r\n     * @param x the added points x value\r\n     * @param y the added points y value\r\n     * @returns the updated Path2.\r\n     */\r\n    Path2.prototype.addLineTo = function (x, y) {\r\n        if (this.closed) {\r\n            return this;\r\n        }\r\n        var newPoint = new _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector2 */ \"c\"](x, y);\r\n        var previousPoint = this._points[this._points.length - 1];\r\n        this._points.push(newPoint);\r\n        this._length += newPoint.subtract(previousPoint).length();\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds _numberOfSegments_ segments according to the arc definition (middle point coordinates, end point coordinates, the arc start point being the current Path2 last point) to the current Path2.\r\n     * @param midX middle point x value\r\n     * @param midY middle point y value\r\n     * @param endX end point x value\r\n     * @param endY end point y value\r\n     * @param numberOfSegments (default: 36)\r\n     * @returns the updated Path2.\r\n     */\r\n    Path2.prototype.addArcTo = function (midX, midY, endX, endY, numberOfSegments) {\r\n        if (numberOfSegments === void 0) { numberOfSegments = 36; }\r\n        if (this.closed) {\r\n            return this;\r\n        }\r\n        var startPoint = this._points[this._points.length - 1];\r\n        var midPoint = new _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector2 */ \"c\"](midX, midY);\r\n        var endPoint = new _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector2 */ \"c\"](endX, endY);\r\n        var arc = new Arc2(startPoint, midPoint, endPoint);\r\n        var increment = arc.angle.radians() / numberOfSegments;\r\n        if (arc.orientation === Orientation.CW) {\r\n            increment *= -1;\r\n        }\r\n        var currentAngle = arc.startAngle.radians() + increment;\r\n        for (var i = 0; i < numberOfSegments; i++) {\r\n            var x = Math.cos(currentAngle) * arc.radius + arc.centerPoint.x;\r\n            var y = Math.sin(currentAngle) * arc.radius + arc.centerPoint.y;\r\n            this.addLineTo(x, y);\r\n            currentAngle += increment;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Closes the Path2.\r\n     * @returns the Path2.\r\n     */\r\n    Path2.prototype.close = function () {\r\n        this.closed = true;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the sum of the distance between each sequential point in the path\r\n     * @returns the Path2 total length (float).\r\n     */\r\n    Path2.prototype.length = function () {\r\n        var result = this._length;\r\n        if (this.closed) {\r\n            var lastPoint = this._points[this._points.length - 1];\r\n            var firstPoint = this._points[0];\r\n            result += firstPoint.subtract(lastPoint).length();\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Gets the points which construct the path\r\n     * @returns the Path2 internal array of points.\r\n     */\r\n    Path2.prototype.getPoints = function () {\r\n        return this._points;\r\n    };\r\n    /**\r\n     * Retreives the point at the distance aways from the starting point\r\n     * @param normalizedLengthPosition the length along the path to retreive the point from\r\n     * @returns a new Vector2 located at a percentage of the Path2 total length on this path.\r\n     */\r\n    Path2.prototype.getPointAtLengthPosition = function (normalizedLengthPosition) {\r\n        if (normalizedLengthPosition < 0 || normalizedLengthPosition > 1) {\r\n            return _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector2 */ \"c\"].Zero();\r\n        }\r\n        var lengthPosition = normalizedLengthPosition * this.length();\r\n        var previousOffset = 0;\r\n        for (var i = 0; i < this._points.length; i++) {\r\n            var j = (i + 1) % this._points.length;\r\n            var a = this._points[i];\r\n            var b = this._points[j];\r\n            var bToA = b.subtract(a);\r\n            var nextOffset = bToA.length() + previousOffset;\r\n            if (lengthPosition >= previousOffset && lengthPosition <= nextOffset) {\r\n                var dir = bToA.normalize();\r\n                var localOffset = lengthPosition - previousOffset;\r\n                return new _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector2 */ \"c\"](a.x + dir.x * localOffset, a.y + dir.y * localOffset);\r\n            }\r\n            previousOffset = nextOffset;\r\n        }\r\n        return _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector2 */ \"c\"].Zero();\r\n    };\r\n    /**\r\n     * Creates a new path starting from an x and y position\r\n     * @param x starting x value\r\n     * @param y starting y value\r\n     * @returns a new Path2 starting at the coordinates (x, y).\r\n     */\r\n    Path2.StartingAt = function (x, y) {\r\n        return new Path2(x, y);\r\n    };\r\n    return Path2;\r\n}());\r\n\r\n/**\r\n * Represents a 3D path made up of multiple 3D points\r\n */\r\nvar Path3D = /** @class */ (function () {\r\n    /**\r\n     * new Path3D(path, normal, raw)\r\n     * Creates a Path3D. A Path3D is a logical math object, so not a mesh.\r\n     * please read the description in the tutorial : https://doc.babylonjs.com/how_to/how_to_use_path3d\r\n     * @param path an array of Vector3, the curve axis of the Path3D\r\n     * @param firstNormal (options) Vector3, the first wanted normal to the curve. Ex (0, 1, 0) for a vertical normal.\r\n     * @param raw (optional, default false) : boolean, if true the returned Path3D isn't normalized. Useful to depict path acceleration or speed.\r\n     * @param alignTangentsWithPath (optional, default false) : boolean, if true the tangents will be aligned with the path.\r\n     */\r\n    function Path3D(\r\n    /**\r\n     * an array of Vector3, the curve axis of the Path3D\r\n     */\r\n    path, firstNormal, raw, alignTangentsWithPath) {\r\n        if (firstNormal === void 0) { firstNormal = null; }\r\n        if (alignTangentsWithPath === void 0) { alignTangentsWithPath = false; }\r\n        this.path = path;\r\n        this._curve = new Array();\r\n        this._distances = new Array();\r\n        this._tangents = new Array();\r\n        this._normals = new Array();\r\n        this._binormals = new Array();\r\n        // holds interpolated point data\r\n        this._pointAtData = {\r\n            id: 0,\r\n            point: _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Zero(),\r\n            previousPointArrayIndex: 0,\r\n            position: 0,\r\n            subPosition: 0,\r\n            interpolateReady: false,\r\n            interpolationMatrix: _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Matrix */ \"a\"].Identity(),\r\n        };\r\n        for (var p = 0; p < path.length; p++) {\r\n            this._curve[p] = path[p].clone(); // hard copy\r\n        }\r\n        this._raw = raw || false;\r\n        this._alignTangentsWithPath = alignTangentsWithPath;\r\n        this._compute(firstNormal, alignTangentsWithPath);\r\n    }\r\n    /**\r\n     * Returns the Path3D array of successive Vector3 designing its curve.\r\n     * @returns the Path3D array of successive Vector3 designing its curve.\r\n     */\r\n    Path3D.prototype.getCurve = function () {\r\n        return this._curve;\r\n    };\r\n    /**\r\n     * Returns the Path3D array of successive Vector3 designing its curve.\r\n     * @returns the Path3D array of successive Vector3 designing its curve.\r\n     */\r\n    Path3D.prototype.getPoints = function () {\r\n        return this._curve;\r\n    };\r\n    /**\r\n     * @returns the computed length (float) of the path.\r\n     */\r\n    Path3D.prototype.length = function () {\r\n        return this._distances[this._distances.length - 1];\r\n    };\r\n    /**\r\n     * Returns an array populated with tangent vectors on each Path3D curve point.\r\n     * @returns an array populated with tangent vectors on each Path3D curve point.\r\n     */\r\n    Path3D.prototype.getTangents = function () {\r\n        return this._tangents;\r\n    };\r\n    /**\r\n     * Returns an array populated with normal vectors on each Path3D curve point.\r\n     * @returns an array populated with normal vectors on each Path3D curve point.\r\n     */\r\n    Path3D.prototype.getNormals = function () {\r\n        return this._normals;\r\n    };\r\n    /**\r\n     * Returns an array populated with binormal vectors on each Path3D curve point.\r\n     * @returns an array populated with binormal vectors on each Path3D curve point.\r\n     */\r\n    Path3D.prototype.getBinormals = function () {\r\n        return this._binormals;\r\n    };\r\n    /**\r\n     * Returns an array populated with distances (float) of the i-th point from the first curve point.\r\n     * @returns an array populated with distances (float) of the i-th point from the first curve point.\r\n     */\r\n    Path3D.prototype.getDistances = function () {\r\n        return this._distances;\r\n    };\r\n    /**\r\n     * Returns an interpolated point along this path\r\n     * @param position the position of the point along this path, from 0.0 to 1.0\r\n     * @returns a new Vector3 as the point\r\n     */\r\n    Path3D.prototype.getPointAt = function (position) {\r\n        return this._updatePointAtData(position).point;\r\n    };\r\n    /**\r\n     * Returns the tangent vector of an interpolated Path3D curve point at the specified position along this path.\r\n     * @param position the position of the point along this path, from 0.0 to 1.0\r\n     * @param interpolated (optional, default false) : boolean, if true returns an interpolated tangent instead of the tangent of the previous path point.\r\n     * @returns a tangent vector corresponding to the interpolated Path3D curve point, if not interpolated, the tangent is taken from the precomputed tangents array.\r\n     */\r\n    Path3D.prototype.getTangentAt = function (position, interpolated) {\r\n        if (interpolated === void 0) { interpolated = false; }\r\n        this._updatePointAtData(position, interpolated);\r\n        return interpolated ? _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].TransformCoordinates(_math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Forward(), this._pointAtData.interpolationMatrix) : this._tangents[this._pointAtData.previousPointArrayIndex];\r\n    };\r\n    /**\r\n     * Returns the tangent vector of an interpolated Path3D curve point at the specified position along this path.\r\n     * @param position the position of the point along this path, from 0.0 to 1.0\r\n     * @param interpolated (optional, default false) : boolean, if true returns an interpolated normal instead of the normal of the previous path point.\r\n     * @returns a normal vector corresponding to the interpolated Path3D curve point, if not interpolated, the normal is taken from the precomputed normals array.\r\n     */\r\n    Path3D.prototype.getNormalAt = function (position, interpolated) {\r\n        if (interpolated === void 0) { interpolated = false; }\r\n        this._updatePointAtData(position, interpolated);\r\n        return interpolated ? _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].TransformCoordinates(_math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Right(), this._pointAtData.interpolationMatrix) : this._normals[this._pointAtData.previousPointArrayIndex];\r\n    };\r\n    /**\r\n     * Returns the binormal vector of an interpolated Path3D curve point at the specified position along this path.\r\n     * @param position the position of the point along this path, from 0.0 to 1.0\r\n     * @param interpolated (optional, default false) : boolean, if true returns an interpolated binormal instead of the binormal of the previous path point.\r\n     * @returns a binormal vector corresponding to the interpolated Path3D curve point, if not interpolated, the binormal is taken from the precomputed binormals array.\r\n     */\r\n    Path3D.prototype.getBinormalAt = function (position, interpolated) {\r\n        if (interpolated === void 0) { interpolated = false; }\r\n        this._updatePointAtData(position, interpolated);\r\n        return interpolated ? _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].TransformCoordinates(_math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].UpReadOnly, this._pointAtData.interpolationMatrix) : this._binormals[this._pointAtData.previousPointArrayIndex];\r\n    };\r\n    /**\r\n     * Returns the distance (float) of an interpolated Path3D curve point at the specified position along this path.\r\n     * @param position the position of the point along this path, from 0.0 to 1.0\r\n     * @returns the distance of the interpolated Path3D curve point at the specified position along this path.\r\n     */\r\n    Path3D.prototype.getDistanceAt = function (position) {\r\n        return this.length() * position;\r\n    };\r\n    /**\r\n     * Returns the array index of the previous point of an interpolated point along this path\r\n     * @param position the position of the point to interpolate along this path, from 0.0 to 1.0\r\n     * @returns the array index\r\n     */\r\n    Path3D.prototype.getPreviousPointIndexAt = function (position) {\r\n        this._updatePointAtData(position);\r\n        return this._pointAtData.previousPointArrayIndex;\r\n    };\r\n    /**\r\n     * Returns the position of an interpolated point relative to the two path points it lies between, from 0.0 (point A) to 1.0 (point B)\r\n     * @param position the position of the point to interpolate along this path, from 0.0 to 1.0\r\n     * @returns the sub position\r\n     */\r\n    Path3D.prototype.getSubPositionAt = function (position) {\r\n        this._updatePointAtData(position);\r\n        return this._pointAtData.subPosition;\r\n    };\r\n    /**\r\n     * Returns the position of the closest virtual point on this path to an arbitrary Vector3, from 0.0 to 1.0\r\n     * @param target the vector of which to get the closest position to\r\n     * @returns the position of the closest virtual point on this path to the target vector\r\n     */\r\n    Path3D.prototype.getClosestPositionTo = function (target) {\r\n        var smallestDistance = Number.MAX_VALUE;\r\n        var closestPosition = 0.0;\r\n        for (var i = 0; i < this._curve.length - 1; i++) {\r\n            var point = this._curve[i + 0];\r\n            var tangent = this._curve[i + 1].subtract(point).normalize();\r\n            var subLength = this._distances[i + 1] - this._distances[i + 0];\r\n            var subPosition = Math.min((Math.max(_math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Dot(tangent, target.subtract(point).normalize()), 0.0) * _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Distance(point, target)) / subLength, 1.0);\r\n            var distance = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Distance(point.add(tangent.scale(subPosition * subLength)), target);\r\n            if (distance < smallestDistance) {\r\n                smallestDistance = distance;\r\n                closestPosition = (this._distances[i + 0] + subLength * subPosition) / this.length();\r\n            }\r\n        }\r\n        return closestPosition;\r\n    };\r\n    /**\r\n     * Returns a sub path (slice) of this path\r\n     * @param start the position of the fist path point, from 0.0 to 1.0, or a negative value, which will get wrapped around from the end of the path to 0.0 to 1.0 values\r\n     * @param end the position of the last path point, from 0.0 to 1.0, or a negative value, which will get wrapped around from the end of the path to 0.0 to 1.0 values\r\n     * @returns a sub path (slice) of this path\r\n     */\r\n    Path3D.prototype.slice = function (start, end) {\r\n        if (start === void 0) { start = 0.0; }\r\n        if (end === void 0) { end = 1.0; }\r\n        if (start < 0.0) {\r\n            start = 1 - ((start * -1.0) % 1.0);\r\n        }\r\n        if (end < 0.0) {\r\n            end = 1 - ((end * -1.0) % 1.0);\r\n        }\r\n        if (start > end) {\r\n            var _start = start;\r\n            start = end;\r\n            end = _start;\r\n        }\r\n        var curvePoints = this.getCurve();\r\n        var startPoint = this.getPointAt(start);\r\n        var startIndex = this.getPreviousPointIndexAt(start);\r\n        var endPoint = this.getPointAt(end);\r\n        var endIndex = this.getPreviousPointIndexAt(end) + 1;\r\n        var slicePoints = [];\r\n        if (start !== 0.0) {\r\n            startIndex++;\r\n            slicePoints.push(startPoint);\r\n        }\r\n        slicePoints.push.apply(slicePoints, curvePoints.slice(startIndex, endIndex));\r\n        if (end !== 1.0 || start === 1.0) {\r\n            slicePoints.push(endPoint);\r\n        }\r\n        return new Path3D(slicePoints, this.getNormalAt(start), this._raw, this._alignTangentsWithPath);\r\n    };\r\n    /**\r\n     * Forces the Path3D tangent, normal, binormal and distance recomputation.\r\n     * @param path path which all values are copied into the curves points\r\n     * @param firstNormal which should be projected onto the curve\r\n     * @param alignTangentsWithPath (optional, default false) : boolean, if true the tangents will be aligned with the path\r\n     * @returns the same object updated.\r\n     */\r\n    Path3D.prototype.update = function (path, firstNormal, alignTangentsWithPath) {\r\n        if (firstNormal === void 0) { firstNormal = null; }\r\n        if (alignTangentsWithPath === void 0) { alignTangentsWithPath = false; }\r\n        for (var p = 0; p < path.length; p++) {\r\n            this._curve[p].x = path[p].x;\r\n            this._curve[p].y = path[p].y;\r\n            this._curve[p].z = path[p].z;\r\n        }\r\n        this._compute(firstNormal, alignTangentsWithPath);\r\n        return this;\r\n    };\r\n    // private function compute() : computes tangents, normals and binormals\r\n    Path3D.prototype._compute = function (firstNormal, alignTangentsWithPath) {\r\n        if (alignTangentsWithPath === void 0) { alignTangentsWithPath = false; }\r\n        var l = this._curve.length;\r\n        if (l < 2) {\r\n            return;\r\n        }\r\n        // first and last tangents\r\n        this._tangents[0] = this._getFirstNonNullVector(0);\r\n        if (!this._raw) {\r\n            this._tangents[0].normalize();\r\n        }\r\n        this._tangents[l - 1] = this._curve[l - 1].subtract(this._curve[l - 2]);\r\n        if (!this._raw) {\r\n            this._tangents[l - 1].normalize();\r\n        }\r\n        // normals and binormals at first point : arbitrary vector with _normalVector()\r\n        var tg0 = this._tangents[0];\r\n        var pp0 = this._normalVector(tg0, firstNormal);\r\n        this._normals[0] = pp0;\r\n        if (!this._raw) {\r\n            this._normals[0].normalize();\r\n        }\r\n        this._binormals[0] = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Cross(tg0, this._normals[0]);\r\n        if (!this._raw) {\r\n            this._binormals[0].normalize();\r\n        }\r\n        this._distances[0] = 0.0;\r\n        // normals and binormals : next points\r\n        var prev; // previous vector (segment)\r\n        var cur; // current vector (segment)\r\n        var curTang; // current tangent\r\n        // previous normal\r\n        var prevNor; // previous normal\r\n        var prevBinor; // previous binormal\r\n        for (var i = 1; i < l; i++) {\r\n            // tangents\r\n            prev = this._getLastNonNullVector(i);\r\n            if (i < l - 1) {\r\n                cur = this._getFirstNonNullVector(i);\r\n                this._tangents[i] = alignTangentsWithPath ? cur : prev.add(cur);\r\n                this._tangents[i].normalize();\r\n            }\r\n            this._distances[i] = this._distances[i - 1] + this._curve[i].subtract(this._curve[i - 1]).length();\r\n            // normals and binormals\r\n            // http://www.cs.cmu.edu/afs/andrew/scs/cs/15-462/web/old/asst2camera.html\r\n            curTang = this._tangents[i];\r\n            prevBinor = this._binormals[i - 1];\r\n            this._normals[i] = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Cross(prevBinor, curTang);\r\n            if (!this._raw) {\r\n                if (this._normals[i].length() === 0) {\r\n                    prevNor = this._normals[i - 1];\r\n                    this._normals[i] = prevNor.clone();\r\n                }\r\n                else {\r\n                    this._normals[i].normalize();\r\n                }\r\n            }\r\n            this._binormals[i] = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Cross(curTang, this._normals[i]);\r\n            if (!this._raw) {\r\n                this._binormals[i].normalize();\r\n            }\r\n        }\r\n        this._pointAtData.id = NaN;\r\n    };\r\n    // private function getFirstNonNullVector(index)\r\n    // returns the first non null vector from index : curve[index + N].subtract(curve[index])\r\n    Path3D.prototype._getFirstNonNullVector = function (index) {\r\n        var i = 1;\r\n        var nNVector = this._curve[index + i].subtract(this._curve[index]);\r\n        while (nNVector.length() === 0 && index + i + 1 < this._curve.length) {\r\n            i++;\r\n            nNVector = this._curve[index + i].subtract(this._curve[index]);\r\n        }\r\n        return nNVector;\r\n    };\r\n    // private function getLastNonNullVector(index)\r\n    // returns the last non null vector from index : curve[index].subtract(curve[index - N])\r\n    Path3D.prototype._getLastNonNullVector = function (index) {\r\n        var i = 1;\r\n        var nLVector = this._curve[index].subtract(this._curve[index - i]);\r\n        while (nLVector.length() === 0 && index > i + 1) {\r\n            i++;\r\n            nLVector = this._curve[index].subtract(this._curve[index - i]);\r\n        }\r\n        return nLVector;\r\n    };\r\n    // private function normalVector(v0, vt, va) :\r\n    // returns an arbitrary point in the plane defined by the point v0 and the vector vt orthogonal to this plane\r\n    // if va is passed, it returns the va projection on the plane orthogonal to vt at the point v0\r\n    Path3D.prototype._normalVector = function (vt, va) {\r\n        var normal0;\r\n        var tgl = vt.length();\r\n        if (tgl === 0.0) {\r\n            tgl = 1.0;\r\n        }\r\n        if (va === undefined || va === null) {\r\n            var point;\r\n            if (!_math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(Math.abs(vt.y) / tgl, 1.0, _math_constants__WEBPACK_IMPORTED_MODULE_2__[/* Epsilon */ \"a\"])) {\r\n                // search for a point in the plane\r\n                point = new _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"](0.0, -1.0, 0.0);\r\n            }\r\n            else if (!_math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(Math.abs(vt.x) / tgl, 1.0, _math_constants__WEBPACK_IMPORTED_MODULE_2__[/* Epsilon */ \"a\"])) {\r\n                point = new _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"](1.0, 0.0, 0.0);\r\n            }\r\n            else if (!_math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(Math.abs(vt.z) / tgl, 1.0, _math_constants__WEBPACK_IMPORTED_MODULE_2__[/* Epsilon */ \"a\"])) {\r\n                point = new _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"](0.0, 0.0, 1.0);\r\n            }\r\n            else {\r\n                point = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Zero();\r\n            }\r\n            normal0 = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Cross(vt, point);\r\n        }\r\n        else {\r\n            normal0 = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Cross(vt, va);\r\n            _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].CrossToRef(normal0, vt, normal0);\r\n        }\r\n        normal0.normalize();\r\n        return normal0;\r\n    };\r\n    /**\r\n     * Updates the point at data for an interpolated point along this curve\r\n     * @param position the position of the point along this curve, from 0.0 to 1.0\r\n     * @interpolateTNB wether to compute the interpolated tangent, normal and binormal\r\n     * @returns the (updated) point at data\r\n     */\r\n    Path3D.prototype._updatePointAtData = function (position, interpolateTNB) {\r\n        if (interpolateTNB === void 0) { interpolateTNB = false; }\r\n        // set an id for caching the result\r\n        if (this._pointAtData.id === position) {\r\n            if (!this._pointAtData.interpolateReady) {\r\n                this._updateInterpolationMatrix();\r\n            }\r\n            return this._pointAtData;\r\n        }\r\n        else {\r\n            this._pointAtData.id = position;\r\n        }\r\n        var curvePoints = this.getPoints();\r\n        // clamp position between 0.0 and 1.0\r\n        if (position <= 0.0) {\r\n            return this._setPointAtData(0.0, 0.0, curvePoints[0], 0, interpolateTNB);\r\n        }\r\n        else if (position >= 1.0) {\r\n            return this._setPointAtData(1.0, 1.0, curvePoints[curvePoints.length - 1], curvePoints.length - 1, interpolateTNB);\r\n        }\r\n        var previousPoint = curvePoints[0];\r\n        var currentPoint;\r\n        var currentLength = 0.0;\r\n        var targetLength = position * this.length();\r\n        for (var i = 1; i < curvePoints.length; i++) {\r\n            currentPoint = curvePoints[i];\r\n            var distance = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Distance(previousPoint, currentPoint);\r\n            currentLength += distance;\r\n            if (currentLength === targetLength) {\r\n                return this._setPointAtData(position, 1.0, currentPoint, i, interpolateTNB);\r\n            }\r\n            else if (currentLength > targetLength) {\r\n                var toLength = currentLength - targetLength;\r\n                var diff = toLength / distance;\r\n                var dir = previousPoint.subtract(currentPoint);\r\n                var point = currentPoint.add(dir.scaleInPlace(diff));\r\n                return this._setPointAtData(position, 1 - diff, point, i - 1, interpolateTNB);\r\n            }\r\n            previousPoint = currentPoint;\r\n        }\r\n        return this._pointAtData;\r\n    };\r\n    /**\r\n     * Updates the point at data from the specified parameters\r\n     * @param position where along the path the interpolated point is, from 0.0 to 1.0\r\n     * @param point the interpolated point\r\n     * @param parentIndex the index of an existing curve point that is on, or else positionally the first behind, the interpolated point\r\n     */\r\n    Path3D.prototype._setPointAtData = function (position, subPosition, point, parentIndex, interpolateTNB) {\r\n        this._pointAtData.point = point;\r\n        this._pointAtData.position = position;\r\n        this._pointAtData.subPosition = subPosition;\r\n        this._pointAtData.previousPointArrayIndex = parentIndex;\r\n        this._pointAtData.interpolateReady = interpolateTNB;\r\n        if (interpolateTNB) {\r\n            this._updateInterpolationMatrix();\r\n        }\r\n        return this._pointAtData;\r\n    };\r\n    /**\r\n     * Updates the point at interpolation matrix for the tangents, normals and binormals\r\n     */\r\n    Path3D.prototype._updateInterpolationMatrix = function () {\r\n        this._pointAtData.interpolationMatrix = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Matrix */ \"a\"].Identity();\r\n        var parentIndex = this._pointAtData.previousPointArrayIndex;\r\n        if (parentIndex !== this._tangents.length - 1) {\r\n            var index = parentIndex + 1;\r\n            var tangentFrom = this._tangents[parentIndex].clone();\r\n            var normalFrom = this._normals[parentIndex].clone();\r\n            var binormalFrom = this._binormals[parentIndex].clone();\r\n            var tangentTo = this._tangents[index].clone();\r\n            var normalTo = this._normals[index].clone();\r\n            var binormalTo = this._binormals[index].clone();\r\n            var quatFrom = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Quaternion */ \"b\"].RotationQuaternionFromAxis(normalFrom, binormalFrom, tangentFrom);\r\n            var quatTo = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Quaternion */ \"b\"].RotationQuaternionFromAxis(normalTo, binormalTo, tangentTo);\r\n            var quatAt = _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Quaternion */ \"b\"].Slerp(quatFrom, quatTo, this._pointAtData.subPosition);\r\n            quatAt.toRotationMatrix(this._pointAtData.interpolationMatrix);\r\n        }\r\n    };\r\n    return Path3D;\r\n}());\r\n\r\n/**\r\n * A Curve3 object is a logical object, so not a mesh, to handle curves in the 3D geometric space.\r\n * A Curve3 is designed from a series of successive Vector3.\r\n * @see https://doc.babylonjs.com/how_to/how_to_use_curve3\r\n */\r\nvar Curve3 = /** @class */ (function () {\r\n    /**\r\n     * A Curve3 object is a logical object, so not a mesh, to handle curves in the 3D geometric space.\r\n     * A Curve3 is designed from a series of successive Vector3.\r\n     * Tuto : https://doc.babylonjs.com/how_to/how_to_use_curve3#curve3-object\r\n     * @param points points which make up the curve\r\n     */\r\n    function Curve3(points) {\r\n        this._length = 0.0;\r\n        this._points = points;\r\n        this._length = this._computeLength(points);\r\n    }\r\n    /**\r\n     * Returns a Curve3 object along a Quadratic Bezier curve : https://doc.babylonjs.com/how_to/how_to_use_curve3#quadratic-bezier-curve\r\n     * @param v0 (Vector3) the origin point of the Quadratic Bezier\r\n     * @param v1 (Vector3) the control point\r\n     * @param v2 (Vector3) the end point of the Quadratic Bezier\r\n     * @param nbPoints (integer) the wanted number of points in the curve\r\n     * @returns the created Curve3\r\n     */\r\n    Curve3.CreateQuadraticBezier = function (v0, v1, v2, nbPoints) {\r\n        nbPoints = nbPoints > 2 ? nbPoints : 3;\r\n        var bez = new Array();\r\n        var equation = function (t, val0, val1, val2) {\r\n            var res = (1.0 - t) * (1.0 - t) * val0 + 2.0 * t * (1.0 - t) * val1 + t * t * val2;\r\n            return res;\r\n        };\r\n        for (var i = 0; i <= nbPoints; i++) {\r\n            bez.push(new _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"](equation(i / nbPoints, v0.x, v1.x, v2.x), equation(i / nbPoints, v0.y, v1.y, v2.y), equation(i / nbPoints, v0.z, v1.z, v2.z)));\r\n        }\r\n        return new Curve3(bez);\r\n    };\r\n    /**\r\n     * Returns a Curve3 object along a Cubic Bezier curve : https://doc.babylonjs.com/how_to/how_to_use_curve3#cubic-bezier-curve\r\n     * @param v0 (Vector3) the origin point of the Cubic Bezier\r\n     * @param v1 (Vector3) the first control point\r\n     * @param v2 (Vector3) the second control point\r\n     * @param v3 (Vector3) the end point of the Cubic Bezier\r\n     * @param nbPoints (integer) the wanted number of points in the curve\r\n     * @returns the created Curve3\r\n     */\r\n    Curve3.CreateCubicBezier = function (v0, v1, v2, v3, nbPoints) {\r\n        nbPoints = nbPoints > 3 ? nbPoints : 4;\r\n        var bez = new Array();\r\n        var equation = function (t, val0, val1, val2, val3) {\r\n            var res = (1.0 - t) * (1.0 - t) * (1.0 - t) * val0 + 3.0 * t * (1.0 - t) * (1.0 - t) * val1 + 3.0 * t * t * (1.0 - t) * val2 + t * t * t * val3;\r\n            return res;\r\n        };\r\n        for (var i = 0; i <= nbPoints; i++) {\r\n            bez.push(new _math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"](equation(i / nbPoints, v0.x, v1.x, v2.x, v3.x), equation(i / nbPoints, v0.y, v1.y, v2.y, v3.y), equation(i / nbPoints, v0.z, v1.z, v2.z, v3.z)));\r\n        }\r\n        return new Curve3(bez);\r\n    };\r\n    /**\r\n     * Returns a Curve3 object along a Hermite Spline curve : https://doc.babylonjs.com/how_to/how_to_use_curve3#hermite-spline\r\n     * @param p1 (Vector3) the origin point of the Hermite Spline\r\n     * @param t1 (Vector3) the tangent vector at the origin point\r\n     * @param p2 (Vector3) the end point of the Hermite Spline\r\n     * @param t2 (Vector3) the tangent vector at the end point\r\n     * @param nbPoints (integer) the wanted number of points in the curve\r\n     * @returns the created Curve3\r\n     */\r\n    Curve3.CreateHermiteSpline = function (p1, t1, p2, t2, nbPoints) {\r\n        var hermite = new Array();\r\n        var step = 1.0 / nbPoints;\r\n        for (var i = 0; i <= nbPoints; i++) {\r\n            hermite.push(_math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].Hermite(p1, t1, p2, t2, i * step));\r\n        }\r\n        return new Curve3(hermite);\r\n    };\r\n    /**\r\n     * Returns a Curve3 object along a CatmullRom Spline curve :\r\n     * @param points (array of Vector3) the points the spline must pass through. At least, four points required\r\n     * @param nbPoints (integer) the wanted number of points between each curve control points\r\n     * @param closed (boolean) optional with default false, when true forms a closed loop from the points\r\n     * @returns the created Curve3\r\n     */\r\n    Curve3.CreateCatmullRomSpline = function (points, nbPoints, closed) {\r\n        var catmullRom = new Array();\r\n        var step = 1.0 / nbPoints;\r\n        var amount = 0.0;\r\n        if (closed) {\r\n            var pointsCount = points.length;\r\n            for (var i = 0; i < pointsCount; i++) {\r\n                amount = 0;\r\n                for (var c = 0; c < nbPoints; c++) {\r\n                    catmullRom.push(_math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].CatmullRom(points[i % pointsCount], points[(i + 1) % pointsCount], points[(i + 2) % pointsCount], points[(i + 3) % pointsCount], amount));\r\n                    amount += step;\r\n                }\r\n            }\r\n            catmullRom.push(catmullRom[0]);\r\n        }\r\n        else {\r\n            var totalPoints = new Array();\r\n            totalPoints.push(points[0].clone());\r\n            Array.prototype.push.apply(totalPoints, points);\r\n            totalPoints.push(points[points.length - 1].clone());\r\n            for (var i = 0; i < totalPoints.length - 3; i++) {\r\n                amount = 0;\r\n                for (var c = 0; c < nbPoints; c++) {\r\n                    catmullRom.push(_math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].CatmullRom(totalPoints[i], totalPoints[i + 1], totalPoints[i + 2], totalPoints[i + 3], amount));\r\n                    amount += step;\r\n                }\r\n            }\r\n            i--;\r\n            catmullRom.push(_math_vector__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"d\"].CatmullRom(totalPoints[i], totalPoints[i + 1], totalPoints[i + 2], totalPoints[i + 3], amount));\r\n        }\r\n        return new Curve3(catmullRom);\r\n    };\r\n    /**\r\n     * @returns the Curve3 stored array of successive Vector3\r\n     */\r\n    Curve3.prototype.getPoints = function () {\r\n        return this._points;\r\n    };\r\n    /**\r\n     * @returns the computed length (float) of the curve.\r\n     */\r\n    Curve3.prototype.length = function () {\r\n        return this._length;\r\n    };\r\n    /**\r\n     * Returns a new instance of Curve3 object : var curve = curveA.continue(curveB);\r\n     * This new Curve3 is built by translating and sticking the curveB at the end of the curveA.\r\n     * curveA and curveB keep unchanged.\r\n     * @param curve the curve to continue from this curve\r\n     * @returns the newly constructed curve\r\n     */\r\n    Curve3.prototype.continue = function (curve) {\r\n        var lastPoint = this._points[this._points.length - 1];\r\n        var continuedPoints = this._points.slice();\r\n        var curvePoints = curve.getPoints();\r\n        for (var i = 1; i < curvePoints.length; i++) {\r\n            continuedPoints.push(curvePoints[i].subtract(curvePoints[0]).add(lastPoint));\r\n        }\r\n        var continuedCurve = new Curve3(continuedPoints);\r\n        return continuedCurve;\r\n    };\r\n    Curve3.prototype._computeLength = function (path) {\r\n        var l = 0;\r\n        for (var i = 1; i < path.length; i++) {\r\n            l += path[i].subtract(path[i - 1]).length();\r\n        }\r\n        return l;\r\n    };\r\n    return Curve3;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.path.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.plane.ts":
/*!*****************************************!*\
  !*** ./src/BABYLON/Maths/math.plane.ts ***!
  \*****************************************/
/*! exports provided: Plane */
/*! exports used: Plane */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Plane; });\n/* harmony import */ var _math_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.vector */ \"./src/BABYLON/Maths/math.vector.ts\");\n\r\n/**\r\n * Represents a plane by the equation ax + by + cz + d = 0\r\n */\r\nvar Plane = /** @class */ (function () {\r\n    /**\r\n     * Creates a Plane object according to the given floats a, b, c, d and the plane equation : ax + by + cz + d = 0\r\n     * @param a a component of the plane\r\n     * @param b b component of the plane\r\n     * @param c c component of the plane\r\n     * @param d d component of the plane\r\n     */\r\n    function Plane(a, b, c, d) {\r\n        this.normal = new _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"](a, b, c);\r\n        this.d = d;\r\n    }\r\n    /**\r\n     * @returns the plane coordinates as a new array of 4 elements [a, b, c, d].\r\n     */\r\n    Plane.prototype.asArray = function () {\r\n        return [this.normal.x, this.normal.y, this.normal.z, this.d];\r\n    };\r\n    // Methods\r\n    /**\r\n     * @returns a new plane copied from the current Plane.\r\n     */\r\n    Plane.prototype.clone = function () {\r\n        return new Plane(this.normal.x, this.normal.y, this.normal.z, this.d);\r\n    };\r\n    /**\r\n     * @returns the string \"Plane\".\r\n     */\r\n    Plane.prototype.getClassName = function () {\r\n        return \"Plane\";\r\n    };\r\n    /**\r\n     * @returns the Plane hash code.\r\n     */\r\n    Plane.prototype.getHashCode = function () {\r\n        var hash = this.normal.getHashCode();\r\n        hash = (hash * 397) ^ (this.d | 0);\r\n        return hash;\r\n    };\r\n    /**\r\n     * Normalize the current Plane in place.\r\n     * @returns the updated Plane.\r\n     */\r\n    Plane.prototype.normalize = function () {\r\n        var norm = (Math.sqrt((this.normal.x * this.normal.x) + (this.normal.y * this.normal.y) + (this.normal.z * this.normal.z)));\r\n        var magnitude = 0.0;\r\n        if (norm !== 0) {\r\n            magnitude = 1.0 / norm;\r\n        }\r\n        this.normal.x *= magnitude;\r\n        this.normal.y *= magnitude;\r\n        this.normal.z *= magnitude;\r\n        this.d *= magnitude;\r\n        return this;\r\n    };\r\n    /**\r\n     * Applies a transformation the plane and returns the result\r\n     * @param transformation the transformation matrix to be applied to the plane\r\n     * @returns a new Plane as the result of the transformation of the current Plane by the given matrix.\r\n     */\r\n    Plane.prototype.transform = function (transformation) {\r\n        var invertedMatrix = Plane._TmpMatrix;\r\n        transformation.invertToRef(invertedMatrix);\r\n        var m = invertedMatrix.m;\r\n        var x = this.normal.x;\r\n        var y = this.normal.y;\r\n        var z = this.normal.z;\r\n        var d = this.d;\r\n        var normalX = x * m[0] + y * m[1] + z * m[2] + d * m[3];\r\n        var normalY = x * m[4] + y * m[5] + z * m[6] + d * m[7];\r\n        var normalZ = x * m[8] + y * m[9] + z * m[10] + d * m[11];\r\n        var finalD = x * m[12] + y * m[13] + z * m[14] + d * m[15];\r\n        return new Plane(normalX, normalY, normalZ, finalD);\r\n    };\r\n    /**\r\n     * Compute the dot product between the point and the plane normal\r\n     * @param point point to calculate the dot product with\r\n     * @returns the dot product (float) of the point coordinates and the plane normal.\r\n     */\r\n    Plane.prototype.dotCoordinate = function (point) {\r\n        return ((((this.normal.x * point.x) + (this.normal.y * point.y)) + (this.normal.z * point.z)) + this.d);\r\n    };\r\n    /**\r\n     * Updates the current Plane from the plane defined by the three given points.\r\n     * @param point1 one of the points used to contruct the plane\r\n     * @param point2 one of the points used to contruct the plane\r\n     * @param point3 one of the points used to contruct the plane\r\n     * @returns the updated Plane.\r\n     */\r\n    Plane.prototype.copyFromPoints = function (point1, point2, point3) {\r\n        var x1 = point2.x - point1.x;\r\n        var y1 = point2.y - point1.y;\r\n        var z1 = point2.z - point1.z;\r\n        var x2 = point3.x - point1.x;\r\n        var y2 = point3.y - point1.y;\r\n        var z2 = point3.z - point1.z;\r\n        var yz = (y1 * z2) - (z1 * y2);\r\n        var xz = (z1 * x2) - (x1 * z2);\r\n        var xy = (x1 * y2) - (y1 * x2);\r\n        var pyth = (Math.sqrt((yz * yz) + (xz * xz) + (xy * xy)));\r\n        var invPyth;\r\n        if (pyth !== 0) {\r\n            invPyth = 1.0 / pyth;\r\n        }\r\n        else {\r\n            invPyth = 0.0;\r\n        }\r\n        this.normal.x = yz * invPyth;\r\n        this.normal.y = xz * invPyth;\r\n        this.normal.z = xy * invPyth;\r\n        this.d = -((this.normal.x * point1.x) + (this.normal.y * point1.y) + (this.normal.z * point1.z));\r\n        return this;\r\n    };\r\n    /**\r\n     * Checks if the plane is facing a given direction (meaning if the plane's normal is pointing in the opposite direction of the given vector).\r\n     * Note that for this function to work as expected you should make sure that:\r\n     *   - direction and the plane normal are normalized\r\n     *   - epsilon is a number just bigger than -1, something like -0.99 for eg\r\n     * @param direction the direction to check if the plane is facing\r\n     * @param epsilon value the dot product is compared against (returns true if dot <= epsilon)\r\n     * @returns True if the plane is facing the given direction\r\n     */\r\n    Plane.prototype.isFrontFacingTo = function (direction, epsilon) {\r\n        var dot = _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"].Dot(this.normal, direction);\r\n        return (dot <= epsilon);\r\n    };\r\n    /**\r\n     * Calculates the distance to a point\r\n     * @param point point to calculate distance to\r\n     * @returns the signed distance (float) from the given point to the Plane.\r\n     */\r\n    Plane.prototype.signedDistanceTo = function (point) {\r\n        return _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"].Dot(point, this.normal) + this.d;\r\n    };\r\n    // Statics\r\n    /**\r\n     * Creates a plane from an  array\r\n     * @param array the array to create a plane from\r\n     * @returns a new Plane from the given array.\r\n     */\r\n    Plane.FromArray = function (array) {\r\n        return new Plane(array[0], array[1], array[2], array[3]);\r\n    };\r\n    /**\r\n     * Creates a plane from three points\r\n     * @param point1 point used to create the plane\r\n     * @param point2 point used to create the plane\r\n     * @param point3 point used to create the plane\r\n     * @returns a new Plane defined by the three given points.\r\n     */\r\n    Plane.FromPoints = function (point1, point2, point3) {\r\n        var result = new Plane(0.0, 0.0, 0.0, 0.0);\r\n        result.copyFromPoints(point1, point2, point3);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a plane from an origin point and a normal\r\n     * @param origin origin of the plane to be constructed\r\n     * @param normal normal of the plane to be constructed\r\n     * @returns a new Plane the normal vector to this plane at the given origin point.\r\n     * Note : the vector \"normal\" is updated because normalized.\r\n     */\r\n    Plane.FromPositionAndNormal = function (origin, normal) {\r\n        var result = new Plane(0.0, 0.0, 0.0, 0.0);\r\n        normal.normalize();\r\n        result.normal = normal;\r\n        result.d = -(normal.x * origin.x + normal.y * origin.y + normal.z * origin.z);\r\n        return result;\r\n    };\r\n    /**\r\n     * Calculates the distance from a plane and a point\r\n     * @param origin origin of the plane to be constructed\r\n     * @param normal normal of the plane to be constructed\r\n     * @param point point to calculate distance to\r\n     * @returns the signed distance between the plane defined by the normal vector at the \"origin\"\" point and the given other point.\r\n     */\r\n    Plane.SignedDistanceToPlaneFromPositionAndNormal = function (origin, normal, point) {\r\n        var d = -(normal.x * origin.x + normal.y * origin.y + normal.z * origin.z);\r\n        return _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"].Dot(point, normal) + d;\r\n    };\r\n    Plane._TmpMatrix = _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Matrix */ \"a\"].Identity();\r\n    return Plane;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.plane.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.scalar.ts":
/*!******************************************!*\
  !*** ./src/BABYLON/Maths/math.scalar.ts ***!
  \******************************************/
/*! exports provided: Scalar */
/*! exports used: Scalar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Scalar; });\n/**\r\n * Scalar computation library\r\n */\r\nvar Scalar = /** @class */ (function () {\r\n    function Scalar() {\r\n    }\r\n    /**\r\n     * Boolean : true if the absolute difference between a and b is lower than epsilon (default = 1.401298E-45)\r\n     * @param a number\r\n     * @param b number\r\n     * @param epsilon (default = 1.401298E-45)\r\n     * @returns true if the absolute difference between a and b is lower than epsilon (default = 1.401298E-45)\r\n     */\r\n    Scalar.WithinEpsilon = function (a, b, epsilon) {\r\n        if (epsilon === void 0) { epsilon = 1.401298E-45; }\r\n        var num = a - b;\r\n        return -epsilon <= num && num <= epsilon;\r\n    };\r\n    /**\r\n     * Returns a string : the upper case translation of the number i to hexadecimal.\r\n     * @param i number\r\n     * @returns the upper case translation of the number i to hexadecimal.\r\n     */\r\n    Scalar.ToHex = function (i) {\r\n        var str = i.toString(16);\r\n        if (i <= 15) {\r\n            return (\"0\" + str).toUpperCase();\r\n        }\r\n        return str.toUpperCase();\r\n    };\r\n    /**\r\n     * Returns -1 if value is negative and +1 is value is positive.\r\n     * @param value the value\r\n     * @returns the value itself if it's equal to zero.\r\n     */\r\n    Scalar.Sign = function (value) {\r\n        value = +value; // convert to a number\r\n        if (value === 0 || isNaN(value)) {\r\n            return value;\r\n        }\r\n        return value > 0 ? 1 : -1;\r\n    };\r\n    /**\r\n     * Returns the value itself if it's between min and max.\r\n     * Returns min if the value is lower than min.\r\n     * Returns max if the value is greater than max.\r\n     * @param value the value to clmap\r\n     * @param min the min value to clamp to (default: 0)\r\n     * @param max the max value to clamp to (default: 1)\r\n     * @returns the clamped value\r\n     */\r\n    Scalar.Clamp = function (value, min, max) {\r\n        if (min === void 0) { min = 0; }\r\n        if (max === void 0) { max = 1; }\r\n        return Math.min(max, Math.max(min, value));\r\n    };\r\n    /**\r\n     * the log2 of value.\r\n     * @param value the value to compute log2 of\r\n     * @returns the log2 of value.\r\n     */\r\n    Scalar.Log2 = function (value) {\r\n        return Math.log(value) * Math.LOG2E;\r\n    };\r\n    /**\r\n    * Loops the value, so that it is never larger than length and never smaller than 0.\r\n    *\r\n    * This is similar to the modulo operator but it works with floating point numbers.\r\n    * For example, using 3.0 for t and 2.5 for length, the result would be 0.5.\r\n    * With t = 5 and length = 2.5, the result would be 0.0.\r\n    * Note, however, that the behaviour is not defined for negative numbers as it is for the modulo operator\r\n    * @param value the value\r\n    * @param length the length\r\n    * @returns the looped value\r\n    */\r\n    Scalar.Repeat = function (value, length) {\r\n        return value - Math.floor(value / length) * length;\r\n    };\r\n    /**\r\n     * Normalize the value between 0.0 and 1.0 using min and max values\r\n     * @param value value to normalize\r\n     * @param min max to normalize between\r\n     * @param max min to normalize between\r\n     * @returns the normalized value\r\n     */\r\n    Scalar.Normalize = function (value, min, max) {\r\n        return (value - min) / (max - min);\r\n    };\r\n    /**\r\n    * Denormalize the value from 0.0 and 1.0 using min and max values\r\n    * @param normalized value to denormalize\r\n    * @param min max to denormalize between\r\n    * @param max min to denormalize between\r\n    * @returns the denormalized value\r\n    */\r\n    Scalar.Denormalize = function (normalized, min, max) {\r\n        return (normalized * (max - min) + min);\r\n    };\r\n    /**\r\n    * Calculates the shortest difference between two given angles given in degrees.\r\n    * @param current current angle in degrees\r\n    * @param target target angle in degrees\r\n    * @returns the delta\r\n    */\r\n    Scalar.DeltaAngle = function (current, target) {\r\n        var num = Scalar.Repeat(target - current, 360.0);\r\n        if (num > 180.0) {\r\n            num -= 360.0;\r\n        }\r\n        return num;\r\n    };\r\n    /**\r\n    * PingPongs the value t, so that it is never larger than length and never smaller than 0.\r\n    * @param tx value\r\n    * @param length length\r\n    * @returns The returned value will move back and forth between 0 and length\r\n    */\r\n    Scalar.PingPong = function (tx, length) {\r\n        var t = Scalar.Repeat(tx, length * 2.0);\r\n        return length - Math.abs(t - length);\r\n    };\r\n    /**\r\n    * Interpolates between min and max with smoothing at the limits.\r\n    *\r\n    * This function interpolates between min and max in a similar way to Lerp. However, the interpolation will gradually speed up\r\n    * from the start and slow down toward the end. This is useful for creating natural-looking animation, fading and other transitions.\r\n    * @param from from\r\n    * @param to to\r\n    * @param tx value\r\n    * @returns the smooth stepped value\r\n    */\r\n    Scalar.SmoothStep = function (from, to, tx) {\r\n        var t = Scalar.Clamp(tx);\r\n        t = -2.0 * t * t * t + 3.0 * t * t;\r\n        return to * t + from * (1.0 - t);\r\n    };\r\n    /**\r\n    * Moves a value current towards target.\r\n    *\r\n    * This is essentially the same as Mathf.Lerp but instead the function will ensure that the speed never exceeds maxDelta.\r\n    * Negative values of maxDelta pushes the value away from target.\r\n    * @param current current value\r\n    * @param target target value\r\n    * @param maxDelta max distance to move\r\n    * @returns resulting value\r\n    */\r\n    Scalar.MoveTowards = function (current, target, maxDelta) {\r\n        var result = 0;\r\n        if (Math.abs(target - current) <= maxDelta) {\r\n            result = target;\r\n        }\r\n        else {\r\n            result = current + Scalar.Sign(target - current) * maxDelta;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n    * Same as MoveTowards but makes sure the values interpolate correctly when they wrap around 360 degrees.\r\n    *\r\n    * Variables current and target are assumed to be in degrees. For optimization reasons, negative values of maxDelta\r\n    *  are not supported and may cause oscillation. To push current away from a target angle, add 180 to that angle instead.\r\n    * @param current current value\r\n    * @param target target value\r\n    * @param maxDelta max distance to move\r\n    * @returns resulting angle\r\n    */\r\n    Scalar.MoveTowardsAngle = function (current, target, maxDelta) {\r\n        var num = Scalar.DeltaAngle(current, target);\r\n        var result = 0;\r\n        if (-maxDelta < num && num < maxDelta) {\r\n            result = target;\r\n        }\r\n        else {\r\n            target = current + num;\r\n            result = Scalar.MoveTowards(current, target, maxDelta);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new scalar with values linearly interpolated of \"amount\" between the start scalar and the end scalar.\r\n     * @param start start value\r\n     * @param end target value\r\n     * @param amount amount to lerp between\r\n     * @returns the lerped value\r\n     */\r\n    Scalar.Lerp = function (start, end, amount) {\r\n        return start + ((end - start) * amount);\r\n    };\r\n    /**\r\n    * Same as Lerp but makes sure the values interpolate correctly when they wrap around 360 degrees.\r\n    * The parameter t is clamped to the range [0, 1]. Variables a and b are assumed to be in degrees.\r\n    * @param start start value\r\n    * @param end target value\r\n    * @param amount amount to lerp between\r\n    * @returns the lerped value\r\n    */\r\n    Scalar.LerpAngle = function (start, end, amount) {\r\n        var num = Scalar.Repeat(end - start, 360.0);\r\n        if (num > 180.0) {\r\n            num -= 360.0;\r\n        }\r\n        return start + num * Scalar.Clamp(amount);\r\n    };\r\n    /**\r\n    * Calculates the linear parameter t that produces the interpolant value within the range [a, b].\r\n    * @param a start value\r\n    * @param b target value\r\n    * @param value value between a and b\r\n    * @returns the inverseLerp value\r\n    */\r\n    Scalar.InverseLerp = function (a, b, value) {\r\n        var result = 0;\r\n        if (a != b) {\r\n            result = Scalar.Clamp((value - a) / (b - a));\r\n        }\r\n        else {\r\n            result = 0.0;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Returns a new scalar located for \"amount\" (float) on the Hermite spline defined by the scalars \"value1\", \"value3\", \"tangent1\", \"tangent2\".\r\n     * @see http://mathworld.wolfram.com/HermitePolynomial.html\r\n     * @param value1 spline value\r\n     * @param tangent1 spline value\r\n     * @param value2 spline value\r\n     * @param tangent2 spline value\r\n     * @param amount input value\r\n     * @returns hermite result\r\n     */\r\n    Scalar.Hermite = function (value1, tangent1, value2, tangent2, amount) {\r\n        var squared = amount * amount;\r\n        var cubed = amount * squared;\r\n        var part1 = ((2.0 * cubed) - (3.0 * squared)) + 1.0;\r\n        var part2 = (-2.0 * cubed) + (3.0 * squared);\r\n        var part3 = (cubed - (2.0 * squared)) + amount;\r\n        var part4 = cubed - squared;\r\n        return (((value1 * part1) + (value2 * part2)) + (tangent1 * part3)) + (tangent2 * part4);\r\n    };\r\n    /**\r\n    * Returns a random float number between and min and max values\r\n    * @param min min value of random\r\n    * @param max max value of random\r\n    * @returns random value\r\n    */\r\n    Scalar.RandomRange = function (min, max) {\r\n        if (min === max) {\r\n            return min;\r\n        }\r\n        return ((Math.random() * (max - min)) + min);\r\n    };\r\n    /**\r\n    * This function returns percentage of a number in a given range.\r\n    *\r\n    * RangeToPercent(40,20,60) will return 0.5 (50%)\r\n    * RangeToPercent(34,0,100) will return 0.34 (34%)\r\n    * @param number to convert to percentage\r\n    * @param min min range\r\n    * @param max max range\r\n    * @returns the percentage\r\n    */\r\n    Scalar.RangeToPercent = function (number, min, max) {\r\n        return ((number - min) / (max - min));\r\n    };\r\n    /**\r\n    * This function returns number that corresponds to the percentage in a given range.\r\n    *\r\n    * PercentToRange(0.34,0,100) will return 34.\r\n    * @param percent to convert to number\r\n    * @param min min range\r\n    * @param max max range\r\n    * @returns the number\r\n    */\r\n    Scalar.PercentToRange = function (percent, min, max) {\r\n        return ((max - min) * percent + min);\r\n    };\r\n    /**\r\n     * Returns the angle converted to equivalent value between -Math.PI and Math.PI radians.\r\n     * @param angle The angle to normalize in radian.\r\n     * @return The converted angle.\r\n     */\r\n    Scalar.NormalizeRadians = function (angle) {\r\n        // More precise but slower version kept for reference.\r\n        // angle = angle % Tools.TwoPi;\r\n        // angle = (angle + Tools.TwoPi) % Tools.TwoPi;\r\n        //if (angle > Math.PI) {\r\n        //\tangle -= Tools.TwoPi;\r\n        //}\r\n        angle -= (Scalar.TwoPi * Math.floor((angle + Math.PI) / Scalar.TwoPi));\r\n        return angle;\r\n    };\r\n    /**\r\n     * Two pi constants convenient for computation.\r\n     */\r\n    Scalar.TwoPi = Math.PI * 2;\r\n    return Scalar;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.scalar.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.size.ts":
/*!****************************************!*\
  !*** ./src/BABYLON/Maths/math.size.ts ***!
  \****************************************/
/*! exports provided: Size */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export Size */\n/**\r\n * Size containing widht and height\r\n */\r\nvar Size = /** @class */ (function () {\r\n    /**\r\n     * Creates a Size object from the given width and height (floats).\r\n     * @param width width of the new size\r\n     * @param height height of the new size\r\n     */\r\n    function Size(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    /**\r\n     * Returns a string with the Size width and height\r\n     * @returns a string with the Size width and height\r\n     */\r\n    Size.prototype.toString = function () {\r\n        return \"{W: \" + this.width + \", H: \" + this.height + \"}\";\r\n    };\r\n    /**\r\n     * \"Size\"\r\n     * @returns the string \"Size\"\r\n     */\r\n    Size.prototype.getClassName = function () {\r\n        return \"Size\";\r\n    };\r\n    /**\r\n     * Returns the Size hash code.\r\n     * @returns a hash code for a unique width and height\r\n     */\r\n    Size.prototype.getHashCode = function () {\r\n        var hash = this.width | 0;\r\n        hash = (hash * 397) ^ (this.height | 0);\r\n        return hash;\r\n    };\r\n    /**\r\n     * Updates the current size from the given one.\r\n     * @param src the given size\r\n     */\r\n    Size.prototype.copyFrom = function (src) {\r\n        this.width = src.width;\r\n        this.height = src.height;\r\n    };\r\n    /**\r\n     * Updates in place the current Size from the given floats.\r\n     * @param width width of the new size\r\n     * @param height height of the new size\r\n     * @returns the updated Size.\r\n     */\r\n    Size.prototype.copyFromFloats = function (width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates in place the current Size from the given floats.\r\n     * @param width width to set\r\n     * @param height height to set\r\n     * @returns the updated Size.\r\n     */\r\n    Size.prototype.set = function (width, height) {\r\n        return this.copyFromFloats(width, height);\r\n    };\r\n    /**\r\n     * Multiplies the width and height by numbers\r\n     * @param w factor to multiple the width by\r\n     * @param h factor to multiple the height by\r\n     * @returns a new Size set with the multiplication result of the current Size and the given floats.\r\n     */\r\n    Size.prototype.multiplyByFloats = function (w, h) {\r\n        return new Size(this.width * w, this.height * h);\r\n    };\r\n    /**\r\n     * Clones the size\r\n     * @returns a new Size copied from the given one.\r\n     */\r\n    Size.prototype.clone = function () {\r\n        return new Size(this.width, this.height);\r\n    };\r\n    /**\r\n     * True if the current Size and the given one width and height are strictly equal.\r\n     * @param other the other size to compare against\r\n     * @returns True if the current Size and the given one width and height are strictly equal.\r\n     */\r\n    Size.prototype.equals = function (other) {\r\n        if (!other) {\r\n            return false;\r\n        }\r\n        return (this.width === other.width) && (this.height === other.height);\r\n    };\r\n    Object.defineProperty(Size.prototype, \"surface\", {\r\n        /**\r\n         * The surface of the Size : width * height (float).\r\n         */\r\n        get: function () {\r\n            return this.width * this.height;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Create a new size of zero\r\n     * @returns a new Size set to (0.0, 0.0)\r\n     */\r\n    Size.Zero = function () {\r\n        return new Size(0.0, 0.0);\r\n    };\r\n    /**\r\n     * Sums the width and height of two sizes\r\n     * @param otherSize size to add to this size\r\n     * @returns a new Size set as the addition result of the current Size and the given one.\r\n     */\r\n    Size.prototype.add = function (otherSize) {\r\n        var r = new Size(this.width + otherSize.width, this.height + otherSize.height);\r\n        return r;\r\n    };\r\n    /**\r\n     * Subtracts the width and height of two\r\n     * @param otherSize size to subtract to this size\r\n     * @returns a new Size set as the subtraction result of  the given one from the current Size.\r\n     */\r\n    Size.prototype.subtract = function (otherSize) {\r\n        var r = new Size(this.width - otherSize.width, this.height - otherSize.height);\r\n        return r;\r\n    };\r\n    /**\r\n     * Creates a new Size set at the linear interpolation \"amount\" between \"start\" and \"end\"\r\n     * @param start starting size to lerp between\r\n     * @param end end size to lerp between\r\n     * @param amount amount to lerp between the start and end values\r\n     * @returns a new Size set at the linear interpolation \"amount\" between \"start\" and \"end\"\r\n     */\r\n    Size.Lerp = function (start, end, amount) {\r\n        var w = start.width + ((end.width - start.width) * amount);\r\n        var h = start.height + ((end.height - start.height) * amount);\r\n        return new Size(w, h);\r\n    };\r\n    return Size;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.size.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.ts":
/*!***********************************!*\
  !*** ./src/BABYLON/Maths/math.ts ***!
  \***********************************/
/*! exports provided: Space, Axis, Coordinate, Color3, Color4, TmpColors, ToGammaSpace, ToLinearSpace, Epsilon, Frustum, Orientation, BezierCurve, Angle, Arc2, Path2, Path3D, Curve3, Plane, Size, Vector2, Vector3, Vector4, Quaternion, Matrix, TmpVectors, PositionNormalVertex, PositionNormalTextureVertex, Viewport */
/*! exports used: Epsilon, Vector3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var _math_axis__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.axis */ \"./src/BABYLON/Maths/math.axis.ts\");\n/* harmony import */ var _math_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.color */ \"./src/BABYLON/Maths/math.color.ts\");\n/* harmony import */ var _math_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.constants */ \"./src/BABYLON/Maths/math.constants.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return _math_constants__WEBPACK_IMPORTED_MODULE_2__[\"a\"]; });\n\n/* harmony import */ var _math_frustum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math.frustum */ \"./src/BABYLON/Maths/math.frustum.ts\");\n/* harmony import */ var _math_path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./math.path */ \"./src/BABYLON/Maths/math.path.ts\");\n/* harmony import */ var _math_plane__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./math.plane */ \"./src/BABYLON/Maths/math.plane.ts\");\n/* harmony import */ var _math_size__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./math.size */ \"./src/BABYLON/Maths/math.size.ts\");\n/* harmony import */ var _math_vector__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./math.vector */ \"./src/BABYLON/Maths/math.vector.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return _math_vector__WEBPACK_IMPORTED_MODULE_7__[\"d\"]; });\n\n/* harmony import */ var _math_vertexFormat__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./math.vertexFormat */ \"./src/BABYLON/Maths/math.vertexFormat.ts\");\n/* harmony import */ var _math_viewport__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./math.viewport */ \"./src/BABYLON/Maths/math.viewport.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.vector.ts":
/*!******************************************!*\
  !*** ./src/BABYLON/Maths/math.vector.ts ***!
  \******************************************/
/*! exports provided: Vector2, Vector3, Vector4, Quaternion, Matrix, TmpVectors */
/*! exports used: Matrix, Quaternion, Vector2, Vector3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return Vector2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return Vector3; });\n/* unused harmony export Vector4 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Quaternion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Matrix; });\n/* unused harmony export TmpVectors */\n/* harmony import */ var _math_scalar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.scalar */ \"./src/BABYLON/Maths/math.scalar.ts\");\n/* harmony import */ var _math_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.constants */ \"./src/BABYLON/Maths/math.constants.ts\");\n/* harmony import */ var _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Misc/arrayTools */ \"./src/BABYLON/Misc/arrayTools.ts\");\n/* harmony import */ var _Misc_typeStore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Misc/typeStore */ \"./src/BABYLON/Misc/typeStore.ts\");\n/* harmony import */ var _Engines_performanceConfigurator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Engines/performanceConfigurator */ \"./src/BABYLON/Engines/performanceConfigurator.ts\");\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Class representing a vector containing 2 coordinates\r\n */\r\nvar Vector2 = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Vector2 from the given x and y coordinates\r\n     * @param x defines the first coordinate\r\n     * @param y defines the second coordinate\r\n     */\r\n    function Vector2(\r\n    /** defines the first coordinate */\r\n    x, \r\n    /** defines the second coordinate */\r\n    y) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    /**\r\n     * Gets a string with the Vector2 coordinates\r\n     * @returns a string with the Vector2 coordinates\r\n     */\r\n    Vector2.prototype.toString = function () {\r\n        return \"{X: \" + this.x + \" Y: \" + this.y + \"}\";\r\n    };\r\n    /**\r\n     * Gets class name\r\n     * @returns the string \"Vector2\"\r\n     */\r\n    Vector2.prototype.getClassName = function () {\r\n        return \"Vector2\";\r\n    };\r\n    /**\r\n     * Gets current vector hash code\r\n     * @returns the Vector2 hash code as a number\r\n     */\r\n    Vector2.prototype.getHashCode = function () {\r\n        var hash = this.x | 0;\r\n        hash = (hash * 397) ^ (this.y | 0);\r\n        return hash;\r\n    };\r\n    // Operators\r\n    /**\r\n     * Sets the Vector2 coordinates in the given array or Float32Array from the given index.\r\n     * @param array defines the source array\r\n     * @param index defines the offset in source array\r\n     * @returns the current Vector2\r\n     */\r\n    Vector2.prototype.toArray = function (array, index) {\r\n        if (index === void 0) { index = 0; }\r\n        array[index] = this.x;\r\n        array[index + 1] = this.y;\r\n        return this;\r\n    };\r\n    /**\r\n     * Update the current vector from an array\r\n     * @param array defines the destination array\r\n     * @param index defines the offset in the destination array\r\n     * @returns the current Vector3\r\n     */\r\n    Vector2.prototype.fromArray = function (array, index) {\r\n        if (index === void 0) { index = 0; }\r\n        Vector2.FromArrayToRef(array, index, this);\r\n        return this;\r\n    };\r\n    /**\r\n     * Copy the current vector to an array\r\n     * @returns a new array with 2 elements: the Vector2 coordinates.\r\n     */\r\n    Vector2.prototype.asArray = function () {\r\n        var result = new Array();\r\n        this.toArray(result, 0);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the Vector2 coordinates with the given Vector2 coordinates\r\n     * @param source defines the source Vector2\r\n     * @returns the current updated Vector2\r\n     */\r\n    Vector2.prototype.copyFrom = function (source) {\r\n        this.x = source.x;\r\n        this.y = source.y;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the Vector2 coordinates with the given floats\r\n     * @param x defines the first coordinate\r\n     * @param y defines the second coordinate\r\n     * @returns the current updated Vector2\r\n     */\r\n    Vector2.prototype.copyFromFloats = function (x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the Vector2 coordinates with the given floats\r\n     * @param x defines the first coordinate\r\n     * @param y defines the second coordinate\r\n     * @returns the current updated Vector2\r\n     */\r\n    Vector2.prototype.set = function (x, y) {\r\n        return this.copyFromFloats(x, y);\r\n    };\r\n    /**\r\n     * Add another vector with the current one\r\n     * @param otherVector defines the other vector\r\n     * @returns a new Vector2 set with the addition of the current Vector2 and the given one coordinates\r\n     */\r\n    Vector2.prototype.add = function (otherVector) {\r\n        return new Vector2(this.x + otherVector.x, this.y + otherVector.y);\r\n    };\r\n    /**\r\n     * Sets the \"result\" coordinates with the addition of the current Vector2 and the given one coordinates\r\n     * @param otherVector defines the other vector\r\n     * @param result defines the target vector\r\n     * @returns the unmodified current Vector2\r\n     */\r\n    Vector2.prototype.addToRef = function (otherVector, result) {\r\n        result.x = this.x + otherVector.x;\r\n        result.y = this.y + otherVector.y;\r\n        return this;\r\n    };\r\n    /**\r\n     * Set the Vector2 coordinates by adding the given Vector2 coordinates\r\n     * @param otherVector defines the other vector\r\n     * @returns the current updated Vector2\r\n     */\r\n    Vector2.prototype.addInPlace = function (otherVector) {\r\n        this.x += otherVector.x;\r\n        this.y += otherVector.y;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a new Vector2 by adding the current Vector2 coordinates to the given Vector3 x, y coordinates\r\n     * @param otherVector defines the other vector\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.prototype.addVector3 = function (otherVector) {\r\n        return new Vector2(this.x + otherVector.x, this.y + otherVector.y);\r\n    };\r\n    /**\r\n     * Gets a new Vector2 set with the subtracted coordinates of the given one from the current Vector2\r\n     * @param otherVector defines the other vector\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.prototype.subtract = function (otherVector) {\r\n        return new Vector2(this.x - otherVector.x, this.y - otherVector.y);\r\n    };\r\n    /**\r\n     * Sets the \"result\" coordinates with the subtraction of the given one from the current Vector2 coordinates.\r\n     * @param otherVector defines the other vector\r\n     * @param result defines the target vector\r\n     * @returns the unmodified current Vector2\r\n     */\r\n    Vector2.prototype.subtractToRef = function (otherVector, result) {\r\n        result.x = this.x - otherVector.x;\r\n        result.y = this.y - otherVector.y;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the current Vector2 coordinates by subtracting from it the given one coordinates\r\n     * @param otherVector defines the other vector\r\n     * @returns the current updated Vector2\r\n     */\r\n    Vector2.prototype.subtractInPlace = function (otherVector) {\r\n        this.x -= otherVector.x;\r\n        this.y -= otherVector.y;\r\n        return this;\r\n    };\r\n    /**\r\n     * Multiplies in place the current Vector2 coordinates by the given ones\r\n     * @param otherVector defines the other vector\r\n     * @returns the current updated Vector2\r\n     */\r\n    Vector2.prototype.multiplyInPlace = function (otherVector) {\r\n        this.x *= otherVector.x;\r\n        this.y *= otherVector.y;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector2 set with the multiplication of the current Vector2 and the given one coordinates\r\n     * @param otherVector defines the other vector\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.prototype.multiply = function (otherVector) {\r\n        return new Vector2(this.x * otherVector.x, this.y * otherVector.y);\r\n    };\r\n    /**\r\n     * Sets \"result\" coordinates with the multiplication of the current Vector2 and the given one coordinates\r\n     * @param otherVector defines the other vector\r\n     * @param result defines the target vector\r\n     * @returns the unmodified current Vector2\r\n     */\r\n    Vector2.prototype.multiplyToRef = function (otherVector, result) {\r\n        result.x = this.x * otherVector.x;\r\n        result.y = this.y * otherVector.y;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a new Vector2 set with the Vector2 coordinates multiplied by the given floats\r\n     * @param x defines the first coordinate\r\n     * @param y defines the second coordinate\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.prototype.multiplyByFloats = function (x, y) {\r\n        return new Vector2(this.x * x, this.y * y);\r\n    };\r\n    /**\r\n     * Returns a new Vector2 set with the Vector2 coordinates divided by the given one coordinates\r\n     * @param otherVector defines the other vector\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.prototype.divide = function (otherVector) {\r\n        return new Vector2(this.x / otherVector.x, this.y / otherVector.y);\r\n    };\r\n    /**\r\n     * Sets the \"result\" coordinates with the Vector2 divided by the given one coordinates\r\n     * @param otherVector defines the other vector\r\n     * @param result defines the target vector\r\n     * @returns the unmodified current Vector2\r\n     */\r\n    Vector2.prototype.divideToRef = function (otherVector, result) {\r\n        result.x = this.x / otherVector.x;\r\n        result.y = this.y / otherVector.y;\r\n        return this;\r\n    };\r\n    /**\r\n     * Divides the current Vector2 coordinates by the given ones\r\n     * @param otherVector defines the other vector\r\n     * @returns the current updated Vector2\r\n     */\r\n    Vector2.prototype.divideInPlace = function (otherVector) {\r\n        return this.divideToRef(otherVector, this);\r\n    };\r\n    /**\r\n     * Gets a new Vector2 with current Vector2 negated coordinates\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.prototype.negate = function () {\r\n        return new Vector2(-this.x, -this.y);\r\n    };\r\n    /**\r\n     * Negate this vector in place\r\n     * @returns this\r\n     */\r\n    Vector2.prototype.negateInPlace = function () {\r\n        this.x *= -1;\r\n        this.y *= -1;\r\n        return this;\r\n    };\r\n    /**\r\n     * Negate the current Vector2 and stores the result in the given vector \"result\" coordinates\r\n     * @param result defines the Vector3 object where to store the result\r\n     * @returns the current Vector2\r\n     */\r\n    Vector2.prototype.negateToRef = function (result) {\r\n        return result.copyFromFloats(this.x * -1, this.y * -1);\r\n    };\r\n    /**\r\n     * Multiply the Vector2 coordinates by scale\r\n     * @param scale defines the scaling factor\r\n     * @returns the current updated Vector2\r\n     */\r\n    Vector2.prototype.scaleInPlace = function (scale) {\r\n        this.x *= scale;\r\n        this.y *= scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector2 scaled by \"scale\" from the current Vector2\r\n     * @param scale defines the scaling factor\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.prototype.scale = function (scale) {\r\n        var result = new Vector2(0, 0);\r\n        this.scaleToRef(scale, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Scale the current Vector2 values by a factor to a given Vector2\r\n     * @param scale defines the scale factor\r\n     * @param result defines the Vector2 object where to store the result\r\n     * @returns the unmodified current Vector2\r\n     */\r\n    Vector2.prototype.scaleToRef = function (scale, result) {\r\n        result.x = this.x * scale;\r\n        result.y = this.y * scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Scale the current Vector2 values by a factor and add the result to a given Vector2\r\n     * @param scale defines the scale factor\r\n     * @param result defines the Vector2 object where to store the result\r\n     * @returns the unmodified current Vector2\r\n     */\r\n    Vector2.prototype.scaleAndAddToRef = function (scale, result) {\r\n        result.x += this.x * scale;\r\n        result.y += this.y * scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a boolean if two vectors are equals\r\n     * @param otherVector defines the other vector\r\n     * @returns true if the given vector coordinates strictly equal the current Vector2 ones\r\n     */\r\n    Vector2.prototype.equals = function (otherVector) {\r\n        return otherVector && this.x === otherVector.x && this.y === otherVector.y;\r\n    };\r\n    /**\r\n     * Gets a boolean if two vectors are equals (using an epsilon value)\r\n     * @param otherVector defines the other vector\r\n     * @param epsilon defines the minimal distance to consider equality\r\n     * @returns true if the given vector coordinates are close to the current ones by a distance of epsilon.\r\n     */\r\n    Vector2.prototype.equalsWithEpsilon = function (otherVector, epsilon) {\r\n        if (epsilon === void 0) { epsilon = _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* Epsilon */ \"a\"]; }\r\n        return otherVector && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this.x, otherVector.x, epsilon) && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this.y, otherVector.y, epsilon);\r\n    };\r\n    /**\r\n     * Gets a new Vector2 from current Vector2 floored values\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.prototype.floor = function () {\r\n        return new Vector2(Math.floor(this.x), Math.floor(this.y));\r\n    };\r\n    /**\r\n     * Gets a new Vector2 from current Vector2 floored values\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.prototype.fract = function () {\r\n        return new Vector2(this.x - Math.floor(this.x), this.y - Math.floor(this.y));\r\n    };\r\n    // Properties\r\n    /**\r\n     * Gets the length of the vector\r\n     * @returns the vector length (float)\r\n     */\r\n    Vector2.prototype.length = function () {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    };\r\n    /**\r\n     * Gets the vector squared length\r\n     * @returns the vector squared length (float)\r\n     */\r\n    Vector2.prototype.lengthSquared = function () {\r\n        return (this.x * this.x + this.y * this.y);\r\n    };\r\n    // Methods\r\n    /**\r\n     * Normalize the vector\r\n     * @returns the current updated Vector2\r\n     */\r\n    Vector2.prototype.normalize = function () {\r\n        var len = this.length();\r\n        if (len === 0) {\r\n            return this;\r\n        }\r\n        this.x /= len;\r\n        this.y /= len;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a new Vector2 copied from the Vector2\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.prototype.clone = function () {\r\n        return new Vector2(this.x, this.y);\r\n    };\r\n    // Statics\r\n    /**\r\n     * Gets a new Vector2(0, 0)\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.Zero = function () {\r\n        return new Vector2(0, 0);\r\n    };\r\n    /**\r\n     * Gets a new Vector2(1, 1)\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.One = function () {\r\n        return new Vector2(1, 1);\r\n    };\r\n    /**\r\n     * Gets a new Vector2 set from the given index element of the given array\r\n     * @param array defines the data source\r\n     * @param offset defines the offset in the data source\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.FromArray = function (array, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return new Vector2(array[offset], array[offset + 1]);\r\n    };\r\n    /**\r\n     * Sets \"result\" from the given index element of the given array\r\n     * @param array defines the data source\r\n     * @param offset defines the offset in the data source\r\n     * @param result defines the target vector\r\n     */\r\n    Vector2.FromArrayToRef = function (array, offset, result) {\r\n        result.x = array[offset];\r\n        result.y = array[offset + 1];\r\n    };\r\n    /**\r\n     * Gets a new Vector2 located for \"amount\" (float) on the CatmullRom spline defined by the given four Vector2\r\n     * @param value1 defines 1st point of control\r\n     * @param value2 defines 2nd point of control\r\n     * @param value3 defines 3rd point of control\r\n     * @param value4 defines 4th point of control\r\n     * @param amount defines the interpolation factor\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.CatmullRom = function (value1, value2, value3, value4, amount) {\r\n        var squared = amount * amount;\r\n        var cubed = amount * squared;\r\n        var x = 0.5 * ((((2.0 * value2.x) + ((-value1.x + value3.x) * amount)) +\r\n            (((((2.0 * value1.x) - (5.0 * value2.x)) + (4.0 * value3.x)) - value4.x) * squared)) +\r\n            ((((-value1.x + (3.0 * value2.x)) - (3.0 * value3.x)) + value4.x) * cubed));\r\n        var y = 0.5 * ((((2.0 * value2.y) + ((-value1.y + value3.y) * amount)) +\r\n            (((((2.0 * value1.y) - (5.0 * value2.y)) + (4.0 * value3.y)) - value4.y) * squared)) +\r\n            ((((-value1.y + (3.0 * value2.y)) - (3.0 * value3.y)) + value4.y) * cubed));\r\n        return new Vector2(x, y);\r\n    };\r\n    /**\r\n     * Returns a new Vector2 set with same the coordinates than \"value\" ones if the vector \"value\" is in the square defined by \"min\" and \"max\".\r\n     * If a coordinate of \"value\" is lower than \"min\" coordinates, the returned Vector2 is given this \"min\" coordinate.\r\n     * If a coordinate of \"value\" is greater than \"max\" coordinates, the returned Vector2 is given this \"max\" coordinate\r\n     * @param value defines the value to clamp\r\n     * @param min defines the lower limit\r\n     * @param max defines the upper limit\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.Clamp = function (value, min, max) {\r\n        var x = value.x;\r\n        x = (x > max.x) ? max.x : x;\r\n        x = (x < min.x) ? min.x : x;\r\n        var y = value.y;\r\n        y = (y > max.y) ? max.y : y;\r\n        y = (y < min.y) ? min.y : y;\r\n        return new Vector2(x, y);\r\n    };\r\n    /**\r\n     * Returns a new Vector2 located for \"amount\" (float) on the Hermite spline defined by the vectors \"value1\", \"value3\", \"tangent1\", \"tangent2\"\r\n     * @param value1 defines the 1st control point\r\n     * @param tangent1 defines the outgoing tangent\r\n     * @param value2 defines the 2nd control point\r\n     * @param tangent2 defines the incoming tangent\r\n     * @param amount defines the interpolation factor\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.Hermite = function (value1, tangent1, value2, tangent2, amount) {\r\n        var squared = amount * amount;\r\n        var cubed = amount * squared;\r\n        var part1 = ((2.0 * cubed) - (3.0 * squared)) + 1.0;\r\n        var part2 = (-2.0 * cubed) + (3.0 * squared);\r\n        var part3 = (cubed - (2.0 * squared)) + amount;\r\n        var part4 = cubed - squared;\r\n        var x = (((value1.x * part1) + (value2.x * part2)) + (tangent1.x * part3)) + (tangent2.x * part4);\r\n        var y = (((value1.y * part1) + (value2.y * part2)) + (tangent1.y * part3)) + (tangent2.y * part4);\r\n        return new Vector2(x, y);\r\n    };\r\n    /**\r\n     * Returns a new Vector2 located for \"amount\" (float) on the linear interpolation between the vector \"start\" adn the vector \"end\".\r\n     * @param start defines the start vector\r\n     * @param end defines the end vector\r\n     * @param amount defines the interpolation factor\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.Lerp = function (start, end, amount) {\r\n        var x = start.x + ((end.x - start.x) * amount);\r\n        var y = start.y + ((end.y - start.y) * amount);\r\n        return new Vector2(x, y);\r\n    };\r\n    /**\r\n     * Gets the dot product of the vector \"left\" and the vector \"right\"\r\n     * @param left defines first vector\r\n     * @param right defines second vector\r\n     * @returns the dot product (float)\r\n     */\r\n    Vector2.Dot = function (left, right) {\r\n        return left.x * right.x + left.y * right.y;\r\n    };\r\n    /**\r\n     * Returns a new Vector2 equal to the normalized given vector\r\n     * @param vector defines the vector to normalize\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.Normalize = function (vector) {\r\n        var newVector = vector.clone();\r\n        newVector.normalize();\r\n        return newVector;\r\n    };\r\n    /**\r\n     * Gets a new Vector2 set with the minimal coordinate values from the \"left\" and \"right\" vectors\r\n     * @param left defines 1st vector\r\n     * @param right defines 2nd vector\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.Minimize = function (left, right) {\r\n        var x = (left.x < right.x) ? left.x : right.x;\r\n        var y = (left.y < right.y) ? left.y : right.y;\r\n        return new Vector2(x, y);\r\n    };\r\n    /**\r\n     * Gets a new Vecto2 set with the maximal coordinate values from the \"left\" and \"right\" vectors\r\n     * @param left defines 1st vector\r\n     * @param right defines 2nd vector\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.Maximize = function (left, right) {\r\n        var x = (left.x > right.x) ? left.x : right.x;\r\n        var y = (left.y > right.y) ? left.y : right.y;\r\n        return new Vector2(x, y);\r\n    };\r\n    /**\r\n     * Gets a new Vector2 set with the transformed coordinates of the given vector by the given transformation matrix\r\n     * @param vector defines the vector to transform\r\n     * @param transformation defines the matrix to apply\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.Transform = function (vector, transformation) {\r\n        var r = Vector2.Zero();\r\n        Vector2.TransformToRef(vector, transformation, r);\r\n        return r;\r\n    };\r\n    /**\r\n     * Transforms the given vector coordinates by the given transformation matrix and stores the result in the vector \"result\" coordinates\r\n     * @param vector defines the vector to transform\r\n     * @param transformation defines the matrix to apply\r\n     * @param result defines the target vector\r\n     */\r\n    Vector2.TransformToRef = function (vector, transformation, result) {\r\n        var m = transformation.m;\r\n        var x = (vector.x * m[0]) + (vector.y * m[4]) + m[12];\r\n        var y = (vector.x * m[1]) + (vector.y * m[5]) + m[13];\r\n        result.x = x;\r\n        result.y = y;\r\n    };\r\n    /**\r\n     * Determines if a given vector is included in a triangle\r\n     * @param p defines the vector to test\r\n     * @param p0 defines 1st triangle point\r\n     * @param p1 defines 2nd triangle point\r\n     * @param p2 defines 3rd triangle point\r\n     * @returns true if the point \"p\" is in the triangle defined by the vertors \"p0\", \"p1\", \"p2\"\r\n     */\r\n    Vector2.PointInTriangle = function (p, p0, p1, p2) {\r\n        var a = 1 / 2 * (-p1.y * p2.x + p0.y * (-p1.x + p2.x) + p0.x * (p1.y - p2.y) + p1.x * p2.y);\r\n        var sign = a < 0 ? -1 : 1;\r\n        var s = (p0.y * p2.x - p0.x * p2.y + (p2.y - p0.y) * p.x + (p0.x - p2.x) * p.y) * sign;\r\n        var t = (p0.x * p1.y - p0.y * p1.x + (p0.y - p1.y) * p.x + (p1.x - p0.x) * p.y) * sign;\r\n        return s > 0 && t > 0 && (s + t) < 2 * a * sign;\r\n    };\r\n    /**\r\n     * Gets the distance between the vectors \"value1\" and \"value2\"\r\n     * @param value1 defines first vector\r\n     * @param value2 defines second vector\r\n     * @returns the distance between vectors\r\n     */\r\n    Vector2.Distance = function (value1, value2) {\r\n        return Math.sqrt(Vector2.DistanceSquared(value1, value2));\r\n    };\r\n    /**\r\n     * Returns the squared distance between the vectors \"value1\" and \"value2\"\r\n     * @param value1 defines first vector\r\n     * @param value2 defines second vector\r\n     * @returns the squared distance between vectors\r\n     */\r\n    Vector2.DistanceSquared = function (value1, value2) {\r\n        var x = value1.x - value2.x;\r\n        var y = value1.y - value2.y;\r\n        return (x * x) + (y * y);\r\n    };\r\n    /**\r\n     * Gets a new Vector2 located at the center of the vectors \"value1\" and \"value2\"\r\n     * @param value1 defines first vector\r\n     * @param value2 defines second vector\r\n     * @returns a new Vector2\r\n     */\r\n    Vector2.Center = function (value1, value2) {\r\n        var center = value1.add(value2);\r\n        center.scaleInPlace(0.5);\r\n        return center;\r\n    };\r\n    /**\r\n     * Gets the shortest distance (float) between the point \"p\" and the segment defined by the two points \"segA\" and \"segB\".\r\n     * @param p defines the middle point\r\n     * @param segA defines one point of the segment\r\n     * @param segB defines the other point of the segment\r\n     * @returns the shortest distance\r\n     */\r\n    Vector2.DistanceOfPointFromSegment = function (p, segA, segB) {\r\n        var l2 = Vector2.DistanceSquared(segA, segB);\r\n        if (l2 === 0.0) {\r\n            return Vector2.Distance(p, segA);\r\n        }\r\n        var v = segB.subtract(segA);\r\n        var t = Math.max(0, Math.min(1, Vector2.Dot(p.subtract(segA), v) / l2));\r\n        var proj = segA.add(v.multiplyByFloats(t, t));\r\n        return Vector2.Distance(p, proj);\r\n    };\r\n    return Vector2;\r\n}());\r\n\r\n/**\r\n * Class used to store (x,y,z) vector representation\r\n * A Vector3 is the main object used in 3D geometry\r\n * It can represent etiher the coordinates of a point the space, either a direction\r\n * Reminder: js uses a left handed forward facing system\r\n */\r\nvar Vector3 = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Vector3 object from the given x, y, z (floats) coordinates.\r\n     * @param x defines the first coordinates (on X axis)\r\n     * @param y defines the second coordinates (on Y axis)\r\n     * @param z defines the third coordinates (on Z axis)\r\n     */\r\n    function Vector3(x, y, z) {\r\n        if (x === void 0) { x = 0; }\r\n        if (y === void 0) { y = 0; }\r\n        if (z === void 0) { z = 0; }\r\n        /** @hidden */\r\n        this._isDirty = true;\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n    }\r\n    Object.defineProperty(Vector3.prototype, \"x\", {\r\n        /** Gets or sets the x coordinate */\r\n        get: function () {\r\n            return this._x;\r\n        },\r\n        set: function (value) {\r\n            this._x = value;\r\n            this._isDirty = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector3.prototype, \"y\", {\r\n        /** Gets or sets the y coordinate */\r\n        get: function () {\r\n            return this._y;\r\n        },\r\n        set: function (value) {\r\n            this._y = value;\r\n            this._isDirty = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector3.prototype, \"z\", {\r\n        /** Gets or sets the z coordinate */\r\n        get: function () {\r\n            return this._z;\r\n        },\r\n        set: function (value) {\r\n            this._z = value;\r\n            this._isDirty = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a string representation of the Vector3\r\n     * @returns a string with the Vector3 coordinates.\r\n     */\r\n    Vector3.prototype.toString = function () {\r\n        return \"{X: \" + this._x + \" Y:\" + this._y + \" Z:\" + this._z + \"}\";\r\n    };\r\n    /**\r\n     * Gets the class name\r\n     * @returns the string \"Vector3\"\r\n     */\r\n    Vector3.prototype.getClassName = function () {\r\n        return \"Vector3\";\r\n    };\r\n    /**\r\n     * Creates the Vector3 hash code\r\n     * @returns a number which tends to be unique between Vector3 instances\r\n     */\r\n    Vector3.prototype.getHashCode = function () {\r\n        var hash = this._x | 0;\r\n        hash = (hash * 397) ^ (this._y | 0);\r\n        hash = (hash * 397) ^ (this._z | 0);\r\n        return hash;\r\n    };\r\n    // Operators\r\n    /**\r\n     * Creates an array containing three elements : the coordinates of the Vector3\r\n     * @returns a new array of numbers\r\n     */\r\n    Vector3.prototype.asArray = function () {\r\n        var result = [];\r\n        this.toArray(result, 0);\r\n        return result;\r\n    };\r\n    /**\r\n     * Populates the given array or Float32Array from the given index with the successive coordinates of the Vector3\r\n     * @param array defines the destination array\r\n     * @param index defines the offset in the destination array\r\n     * @returns the current Vector3\r\n     */\r\n    Vector3.prototype.toArray = function (array, index) {\r\n        if (index === void 0) { index = 0; }\r\n        array[index] = this._x;\r\n        array[index + 1] = this._y;\r\n        array[index + 2] = this._z;\r\n        return this;\r\n    };\r\n    /**\r\n     * Update the current vector from an array\r\n     * @param array defines the destination array\r\n     * @param index defines the offset in the destination array\r\n     * @returns the current Vector3\r\n     */\r\n    Vector3.prototype.fromArray = function (array, index) {\r\n        if (index === void 0) { index = 0; }\r\n        Vector3.FromArrayToRef(array, index, this);\r\n        return this;\r\n    };\r\n    /**\r\n     * Converts the current Vector3 into a quaternion (considering that the Vector3 contains Euler angles representation of a rotation)\r\n     * @returns a new Quaternion object, computed from the Vector3 coordinates\r\n     */\r\n    Vector3.prototype.toQuaternion = function () {\r\n        return Quaternion.RotationYawPitchRoll(this._y, this._x, this._z);\r\n    };\r\n    /**\r\n     * Adds the given vector to the current Vector3\r\n     * @param otherVector defines the second operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.addInPlace = function (otherVector) {\r\n        return this.addInPlaceFromFloats(otherVector._x, otherVector._y, otherVector._z);\r\n    };\r\n    /**\r\n     * Adds the given coordinates to the current Vector3\r\n     * @param x defines the x coordinate of the operand\r\n     * @param y defines the y coordinate of the operand\r\n     * @param z defines the z coordinate of the operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.addInPlaceFromFloats = function (x, y, z) {\r\n        this.x += x;\r\n        this.y += y;\r\n        this.z += z;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a new Vector3, result of the addition the current Vector3 and the given vector\r\n     * @param otherVector defines the second operand\r\n     * @returns the resulting Vector3\r\n     */\r\n    Vector3.prototype.add = function (otherVector) {\r\n        return new Vector3(this._x + otherVector._x, this._y + otherVector._y, this._z + otherVector._z);\r\n    };\r\n    /**\r\n     * Adds the current Vector3 to the given one and stores the result in the vector \"result\"\r\n     * @param otherVector defines the second operand\r\n     * @param result defines the Vector3 object where to store the result\r\n     * @returns the current Vector3\r\n     */\r\n    Vector3.prototype.addToRef = function (otherVector, result) {\r\n        return result.copyFromFloats(this._x + otherVector._x, this._y + otherVector._y, this._z + otherVector._z);\r\n    };\r\n    /**\r\n     * Subtract the given vector from the current Vector3\r\n     * @param otherVector defines the second operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.subtractInPlace = function (otherVector) {\r\n        this.x -= otherVector._x;\r\n        this.y -= otherVector._y;\r\n        this.z -= otherVector._z;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector3, result of the subtraction of the given vector from the current Vector3\r\n     * @param otherVector defines the second operand\r\n     * @returns the resulting Vector3\r\n     */\r\n    Vector3.prototype.subtract = function (otherVector) {\r\n        return new Vector3(this._x - otherVector._x, this._y - otherVector._y, this._z - otherVector._z);\r\n    };\r\n    /**\r\n     * Subtracts the given vector from the current Vector3 and stores the result in the vector \"result\".\r\n     * @param otherVector defines the second operand\r\n     * @param result defines the Vector3 object where to store the result\r\n     * @returns the current Vector3\r\n     */\r\n    Vector3.prototype.subtractToRef = function (otherVector, result) {\r\n        return this.subtractFromFloatsToRef(otherVector._x, otherVector._y, otherVector._z, result);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set with the subtraction of the given floats from the current Vector3 coordinates\r\n     * @param x defines the x coordinate of the operand\r\n     * @param y defines the y coordinate of the operand\r\n     * @param z defines the z coordinate of the operand\r\n     * @returns the resulting Vector3\r\n     */\r\n    Vector3.prototype.subtractFromFloats = function (x, y, z) {\r\n        return new Vector3(this._x - x, this._y - y, this._z - z);\r\n    };\r\n    /**\r\n     * Subtracts the given floats from the current Vector3 coordinates and set the given vector \"result\" with this result\r\n     * @param x defines the x coordinate of the operand\r\n     * @param y defines the y coordinate of the operand\r\n     * @param z defines the z coordinate of the operand\r\n     * @param result defines the Vector3 object where to store the result\r\n     * @returns the current Vector3\r\n     */\r\n    Vector3.prototype.subtractFromFloatsToRef = function (x, y, z, result) {\r\n        return result.copyFromFloats(this._x - x, this._y - y, this._z - z);\r\n    };\r\n    /**\r\n     * Gets a new Vector3 set with the current Vector3 negated coordinates\r\n     * @returns a new Vector3\r\n     */\r\n    Vector3.prototype.negate = function () {\r\n        return new Vector3(-this._x, -this._y, -this._z);\r\n    };\r\n    /**\r\n     * Negate this vector in place\r\n     * @returns this\r\n     */\r\n    Vector3.prototype.negateInPlace = function () {\r\n        this.x *= -1;\r\n        this.y *= -1;\r\n        this.z *= -1;\r\n        return this;\r\n    };\r\n    /**\r\n     * Negate the current Vector3 and stores the result in the given vector \"result\" coordinates\r\n     * @param result defines the Vector3 object where to store the result\r\n     * @returns the current Vector3\r\n     */\r\n    Vector3.prototype.negateToRef = function (result) {\r\n        return result.copyFromFloats(this._x * -1, this._y * -1, this._z * -1);\r\n    };\r\n    /**\r\n     * Multiplies the Vector3 coordinates by the float \"scale\"\r\n     * @param scale defines the multiplier factor\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.scaleInPlace = function (scale) {\r\n        this.x *= scale;\r\n        this.y *= scale;\r\n        this.z *= scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set with the current Vector3 coordinates multiplied by the float \"scale\"\r\n     * @param scale defines the multiplier factor\r\n     * @returns a new Vector3\r\n     */\r\n    Vector3.prototype.scale = function (scale) {\r\n        return new Vector3(this._x * scale, this._y * scale, this._z * scale);\r\n    };\r\n    /**\r\n     * Multiplies the current Vector3 coordinates by the float \"scale\" and stores the result in the given vector \"result\" coordinates\r\n     * @param scale defines the multiplier factor\r\n     * @param result defines the Vector3 object where to store the result\r\n     * @returns the current Vector3\r\n     */\r\n    Vector3.prototype.scaleToRef = function (scale, result) {\r\n        return result.copyFromFloats(this._x * scale, this._y * scale, this._z * scale);\r\n    };\r\n    /**\r\n     * Scale the current Vector3 values by a factor and add the result to a given Vector3\r\n     * @param scale defines the scale factor\r\n     * @param result defines the Vector3 object where to store the result\r\n     * @returns the unmodified current Vector3\r\n     */\r\n    Vector3.prototype.scaleAndAddToRef = function (scale, result) {\r\n        return result.addInPlaceFromFloats(this._x * scale, this._y * scale, this._z * scale);\r\n    };\r\n    /**\r\n     * Projects the current vector3 to a plane along a ray starting from a specified origin and directed towards the point.\r\n     * @param origin defines the origin of the projection ray\r\n     * @param plane defines the plane to project to\r\n     * @returns the projected vector3\r\n     */\r\n    Vector3.prototype.projectOnPlane = function (plane, origin) {\r\n        var result = Vector3.Zero();\r\n        this.projectOnPlaneToRef(plane, origin, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Projects the current vector3 to a plane along a ray starting from a specified origin and directed towards the point.\r\n     * @param origin defines the origin of the projection ray\r\n     * @param plane defines the plane to project to\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.prototype.projectOnPlaneToRef = function (plane, origin, result) {\r\n        var n = plane.normal;\r\n        var d = plane.d;\r\n        var V = MathTmp.Vector3[0];\r\n        // ray direction\r\n        this.subtractToRef(origin, V);\r\n        V.normalize();\r\n        var denom = Vector3.Dot(V, n);\r\n        var t = -(Vector3.Dot(origin, n) + d) / denom;\r\n        // P = P0 + t*V\r\n        var scaledV = V.scaleInPlace(t);\r\n        origin.addToRef(scaledV, result);\r\n    };\r\n    /**\r\n     * Returns true if the current Vector3 and the given vector coordinates are strictly equal\r\n     * @param otherVector defines the second operand\r\n     * @returns true if both vectors are equals\r\n     */\r\n    Vector3.prototype.equals = function (otherVector) {\r\n        return otherVector && this._x === otherVector._x && this._y === otherVector._y && this._z === otherVector._z;\r\n    };\r\n    /**\r\n     * Returns true if the current Vector3 and the given vector coordinates are distant less than epsilon\r\n     * @param otherVector defines the second operand\r\n     * @param epsilon defines the minimal distance to define values as equals\r\n     * @returns true if both vectors are distant less than epsilon\r\n     */\r\n    Vector3.prototype.equalsWithEpsilon = function (otherVector, epsilon) {\r\n        if (epsilon === void 0) { epsilon = _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* Epsilon */ \"a\"]; }\r\n        return otherVector && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this._x, otherVector._x, epsilon) && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this._y, otherVector._y, epsilon) && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this._z, otherVector._z, epsilon);\r\n    };\r\n    /**\r\n     * Returns true if the current Vector3 coordinates equals the given floats\r\n     * @param x defines the x coordinate of the operand\r\n     * @param y defines the y coordinate of the operand\r\n     * @param z defines the z coordinate of the operand\r\n     * @returns true if both vectors are equals\r\n     */\r\n    Vector3.prototype.equalsToFloats = function (x, y, z) {\r\n        return this._x === x && this._y === y && this._z === z;\r\n    };\r\n    /**\r\n     * Multiplies the current Vector3 coordinates by the given ones\r\n     * @param otherVector defines the second operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.multiplyInPlace = function (otherVector) {\r\n        this.x *= otherVector._x;\r\n        this.y *= otherVector._y;\r\n        this.z *= otherVector._z;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector3, result of the multiplication of the current Vector3 by the given vector\r\n     * @param otherVector defines the second operand\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.prototype.multiply = function (otherVector) {\r\n        return this.multiplyByFloats(otherVector._x, otherVector._y, otherVector._z);\r\n    };\r\n    /**\r\n     * Multiplies the current Vector3 by the given one and stores the result in the given vector \"result\"\r\n     * @param otherVector defines the second operand\r\n     * @param result defines the Vector3 object where to store the result\r\n     * @returns the current Vector3\r\n     */\r\n    Vector3.prototype.multiplyToRef = function (otherVector, result) {\r\n        return result.copyFromFloats(this._x * otherVector._x, this._y * otherVector._y, this._z * otherVector._z);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set with the result of the mulliplication of the current Vector3 coordinates by the given floats\r\n     * @param x defines the x coordinate of the operand\r\n     * @param y defines the y coordinate of the operand\r\n     * @param z defines the z coordinate of the operand\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.prototype.multiplyByFloats = function (x, y, z) {\r\n        return new Vector3(this._x * x, this._y * y, this._z * z);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set with the result of the division of the current Vector3 coordinates by the given ones\r\n     * @param otherVector defines the second operand\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.prototype.divide = function (otherVector) {\r\n        return new Vector3(this._x / otherVector._x, this._y / otherVector._y, this._z / otherVector._z);\r\n    };\r\n    /**\r\n     * Divides the current Vector3 coordinates by the given ones and stores the result in the given vector \"result\"\r\n     * @param otherVector defines the second operand\r\n     * @param result defines the Vector3 object where to store the result\r\n     * @returns the current Vector3\r\n     */\r\n    Vector3.prototype.divideToRef = function (otherVector, result) {\r\n        return result.copyFromFloats(this._x / otherVector._x, this._y / otherVector._y, this._z / otherVector._z);\r\n    };\r\n    /**\r\n     * Divides the current Vector3 coordinates by the given ones.\r\n     * @param otherVector defines the second operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.divideInPlace = function (otherVector) {\r\n        return this.divideToRef(otherVector, this);\r\n    };\r\n    /**\r\n     * Updates the current Vector3 with the minimal coordinate values between its and the given vector ones\r\n     * @param other defines the second operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.minimizeInPlace = function (other) {\r\n        return this.minimizeInPlaceFromFloats(other._x, other._y, other._z);\r\n    };\r\n    /**\r\n     * Updates the current Vector3 with the maximal coordinate values between its and the given vector ones.\r\n     * @param other defines the second operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.maximizeInPlace = function (other) {\r\n        return this.maximizeInPlaceFromFloats(other._x, other._y, other._z);\r\n    };\r\n    /**\r\n     * Updates the current Vector3 with the minimal coordinate values between its and the given coordinates\r\n     * @param x defines the x coordinate of the operand\r\n     * @param y defines the y coordinate of the operand\r\n     * @param z defines the z coordinate of the operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.minimizeInPlaceFromFloats = function (x, y, z) {\r\n        if (x < this._x) {\r\n            this.x = x;\r\n        }\r\n        if (y < this._y) {\r\n            this.y = y;\r\n        }\r\n        if (z < this._z) {\r\n            this.z = z;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates the current Vector3 with the maximal coordinate values between its and the given coordinates.\r\n     * @param x defines the x coordinate of the operand\r\n     * @param y defines the y coordinate of the operand\r\n     * @param z defines the z coordinate of the operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.maximizeInPlaceFromFloats = function (x, y, z) {\r\n        if (x > this._x) {\r\n            this.x = x;\r\n        }\r\n        if (y > this._y) {\r\n            this.y = y;\r\n        }\r\n        if (z > this._z) {\r\n            this.z = z;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Due to float precision, scale of a mesh could be uniform but float values are off by a small fraction\r\n     * Check if is non uniform within a certain amount of decimal places to account for this\r\n     * @param epsilon the amount the values can differ\r\n     * @returns if the the vector is non uniform to a certain number of decimal places\r\n     */\r\n    Vector3.prototype.isNonUniformWithinEpsilon = function (epsilon) {\r\n        var absX = Math.abs(this._x);\r\n        var absY = Math.abs(this._y);\r\n        if (!_math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(absX, absY, epsilon)) {\r\n            return true;\r\n        }\r\n        var absZ = Math.abs(this._z);\r\n        if (!_math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(absX, absZ, epsilon)) {\r\n            return true;\r\n        }\r\n        if (!_math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(absY, absZ, epsilon)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(Vector3.prototype, \"isNonUniform\", {\r\n        /**\r\n         * Gets a boolean indicating that the vector is non uniform meaning x, y or z are not all the same\r\n         */\r\n        get: function () {\r\n            var absX = Math.abs(this._x);\r\n            var absY = Math.abs(this._y);\r\n            if (absX !== absY) {\r\n                return true;\r\n            }\r\n            var absZ = Math.abs(this._z);\r\n            if (absX !== absZ) {\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a new Vector3 from current Vector3 floored values\r\n     * @returns a new Vector3\r\n     */\r\n    Vector3.prototype.floor = function () {\r\n        return new Vector3(Math.floor(this._x), Math.floor(this._y), Math.floor(this._z));\r\n    };\r\n    /**\r\n     * Gets a new Vector3 from current Vector3 floored values\r\n     * @returns a new Vector3\r\n     */\r\n    Vector3.prototype.fract = function () {\r\n        return new Vector3(this._x - Math.floor(this._x), this._y - Math.floor(this._y), this._z - Math.floor(this._z));\r\n    };\r\n    // Properties\r\n    /**\r\n     * Gets the length of the Vector3\r\n     * @returns the length of the Vector3\r\n     */\r\n    Vector3.prototype.length = function () {\r\n        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z);\r\n    };\r\n    /**\r\n     * Gets the squared length of the Vector3\r\n     * @returns squared length of the Vector3\r\n     */\r\n    Vector3.prototype.lengthSquared = function () {\r\n        return (this._x * this._x + this._y * this._y + this._z * this._z);\r\n    };\r\n    /**\r\n     * Normalize the current Vector3.\r\n     * Please note that this is an in place operation.\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.normalize = function () {\r\n        return this.normalizeFromLength(this.length());\r\n    };\r\n    /**\r\n     * Reorders the x y z properties of the vector in place\r\n     * @param order new ordering of the properties (eg. for vector 1,2,3 with \"ZYX\" will produce 3,2,1)\r\n     * @returns the current updated vector\r\n     */\r\n    Vector3.prototype.reorderInPlace = function (order) {\r\n        var _this = this;\r\n        order = order.toLowerCase();\r\n        if (order === \"xyz\") {\r\n            return this;\r\n        }\r\n        MathTmp.Vector3[0].copyFrom(this);\r\n        [\"x\", \"y\", \"z\"].forEach(function (val, i) {\r\n            _this[val] = MathTmp.Vector3[0][order[i]];\r\n        });\r\n        return this;\r\n    };\r\n    /**\r\n     * Rotates the vector around 0,0,0 by a quaternion\r\n     * @param quaternion the rotation quaternion\r\n     * @param result vector to store the result\r\n     * @returns the resulting vector\r\n     */\r\n    Vector3.prototype.rotateByQuaternionToRef = function (quaternion, result) {\r\n        quaternion.toRotationMatrix(MathTmp.Matrix[0]);\r\n        Vector3.TransformCoordinatesToRef(this, MathTmp.Matrix[0], result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Rotates a vector around a given point\r\n     * @param quaternion the rotation quaternion\r\n     * @param point the point to rotate around\r\n     * @param result vector to store the result\r\n     * @returns the resulting vector\r\n     */\r\n    Vector3.prototype.rotateByQuaternionAroundPointToRef = function (quaternion, point, result) {\r\n        this.subtractToRef(point, MathTmp.Vector3[0]);\r\n        MathTmp.Vector3[0].rotateByQuaternionToRef(quaternion, MathTmp.Vector3[0]);\r\n        point.addToRef(MathTmp.Vector3[0], result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Returns a new Vector3 as the cross product of the current vector and the \"other\" one\r\n     * The cross product is then orthogonal to both current and \"other\"\r\n     * @param other defines the right operand\r\n     * @returns the cross product\r\n     */\r\n    Vector3.prototype.cross = function (other) {\r\n        return Vector3.Cross(this, other);\r\n    };\r\n    /**\r\n     * Normalize the current Vector3 with the given input length.\r\n     * Please note that this is an in place operation.\r\n     * @param len the length of the vector\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.normalizeFromLength = function (len) {\r\n        if (len === 0 || len === 1.0) {\r\n            return this;\r\n        }\r\n        return this.scaleInPlace(1.0 / len);\r\n    };\r\n    /**\r\n     * Normalize the current Vector3 to a new vector\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.prototype.normalizeToNew = function () {\r\n        var normalized = new Vector3(0, 0, 0);\r\n        this.normalizeToRef(normalized);\r\n        return normalized;\r\n    };\r\n    /**\r\n     * Normalize the current Vector3 to the reference\r\n     * @param reference define the Vector3 to update\r\n     * @returns the updated Vector3\r\n     */\r\n    Vector3.prototype.normalizeToRef = function (reference) {\r\n        var len = this.length();\r\n        if (len === 0 || len === 1.0) {\r\n            return reference.copyFromFloats(this._x, this._y, this._z);\r\n        }\r\n        return this.scaleToRef(1.0 / len, reference);\r\n    };\r\n    /**\r\n     * Creates a new Vector3 copied from the current Vector3\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.prototype.clone = function () {\r\n        return new Vector3(this._x, this._y, this._z);\r\n    };\r\n    /**\r\n     * Copies the given vector coordinates to the current Vector3 ones\r\n     * @param source defines the source Vector3\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.copyFrom = function (source) {\r\n        return this.copyFromFloats(source._x, source._y, source._z);\r\n    };\r\n    /**\r\n     * Copies the given floats to the current Vector3 coordinates\r\n     * @param x defines the x coordinate of the operand\r\n     * @param y defines the y coordinate of the operand\r\n     * @param z defines the z coordinate of the operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.copyFromFloats = function (x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    };\r\n    /**\r\n     * Copies the given floats to the current Vector3 coordinates\r\n     * @param x defines the x coordinate of the operand\r\n     * @param y defines the y coordinate of the operand\r\n     * @param z defines the z coordinate of the operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.set = function (x, y, z) {\r\n        return this.copyFromFloats(x, y, z);\r\n    };\r\n    /**\r\n     * Copies the given float to the current Vector3 coordinates\r\n     * @param v defines the x, y and z coordinates of the operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector3.prototype.setAll = function (v) {\r\n        this.x = this.y = this.z = v;\r\n        return this;\r\n    };\r\n    // Statics\r\n    /**\r\n     * Get the clip factor between two vectors\r\n     * @param vector0 defines the first operand\r\n     * @param vector1 defines the second operand\r\n     * @param axis defines the axis to use\r\n     * @param size defines the size along the axis\r\n     * @returns the clip factor\r\n     */\r\n    Vector3.GetClipFactor = function (vector0, vector1, axis, size) {\r\n        var d0 = Vector3.Dot(vector0, axis) - size;\r\n        var d1 = Vector3.Dot(vector1, axis) - size;\r\n        var s = d0 / (d0 - d1);\r\n        return s;\r\n    };\r\n    /**\r\n     * Get angle between two vectors\r\n     * @param vector0 angle between vector0 and vector1\r\n     * @param vector1 angle between vector0 and vector1\r\n     * @param normal direction of the normal\r\n     * @return the angle between vector0 and vector1\r\n     */\r\n    Vector3.GetAngleBetweenVectors = function (vector0, vector1, normal) {\r\n        var v0 = vector0.normalizeToRef(MathTmp.Vector3[1]);\r\n        var v1 = vector1.normalizeToRef(MathTmp.Vector3[2]);\r\n        var dot = Vector3.Dot(v0, v1);\r\n        var n = MathTmp.Vector3[3];\r\n        Vector3.CrossToRef(v0, v1, n);\r\n        if (Vector3.Dot(n, normal) > 0) {\r\n            return Math.acos(dot);\r\n        }\r\n        return -Math.acos(dot);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set from the index \"offset\" of the given array\r\n     * @param array defines the source array\r\n     * @param offset defines the offset in the source array\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.FromArray = function (array, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        return new Vector3(array[offset], array[offset + 1], array[offset + 2]);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set from the index \"offset\" of the given Float32Array\r\n     * @param array defines the source array\r\n     * @param offset defines the offset in the source array\r\n     * @returns the new Vector3\r\n     * @deprecated Please use FromArray instead.\r\n     */\r\n    Vector3.FromFloatArray = function (array, offset) {\r\n        return Vector3.FromArray(array, offset);\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the element values from the index \"offset\" of the given array\r\n     * @param array defines the source array\r\n     * @param offset defines the offset in the source array\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.FromArrayToRef = function (array, offset, result) {\r\n        result.x = array[offset];\r\n        result.y = array[offset + 1];\r\n        result.z = array[offset + 2];\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the element values from the index \"offset\" of the given Float32Array\r\n     * @param array defines the source array\r\n     * @param offset defines the offset in the source array\r\n     * @param result defines the Vector3 where to store the result\r\n     * @deprecated Please use FromArrayToRef instead.\r\n     */\r\n    Vector3.FromFloatArrayToRef = function (array, offset, result) {\r\n        return Vector3.FromArrayToRef(array, offset, result);\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the given floats.\r\n     * @param x defines the x coordinate of the source\r\n     * @param y defines the y coordinate of the source\r\n     * @param z defines the z coordinate of the source\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.FromFloatsToRef = function (x, y, z, result) {\r\n        result.copyFromFloats(x, y, z);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set to (0.0, 0.0, 0.0)\r\n     * @returns a new empty Vector3\r\n     */\r\n    Vector3.Zero = function () {\r\n        return new Vector3(0.0, 0.0, 0.0);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set to (1.0, 1.0, 1.0)\r\n     * @returns a new unit Vector3\r\n     */\r\n    Vector3.One = function () {\r\n        return new Vector3(1.0, 1.0, 1.0);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set to (0.0, 1.0, 0.0)\r\n     * @returns a new up Vector3\r\n     */\r\n    Vector3.Up = function () {\r\n        return new Vector3(0.0, 1.0, 0.0);\r\n    };\r\n    Object.defineProperty(Vector3, \"UpReadOnly\", {\r\n        /**\r\n         * Gets a up Vector3 that must not be updated\r\n         */\r\n        get: function () {\r\n            return Vector3._UpReadOnly;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector3, \"ZeroReadOnly\", {\r\n        /**\r\n         * Gets a zero Vector3 that must not be updated\r\n         */\r\n        get: function () {\r\n            return Vector3._ZeroReadOnly;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new Vector3 set to (0.0, -1.0, 0.0)\r\n     * @returns a new down Vector3\r\n     */\r\n    Vector3.Down = function () {\r\n        return new Vector3(0.0, -1.0, 0.0);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set to (0.0, 0.0, 1.0)\r\n     * @param rightHandedSystem is the scene right-handed (negative z)\r\n     * @returns a new forward Vector3\r\n     */\r\n    Vector3.Forward = function (rightHandedSystem) {\r\n        if (rightHandedSystem === void 0) { rightHandedSystem = false; }\r\n        return new Vector3(0.0, 0.0, (rightHandedSystem ? -1.0 : 1.0));\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set to (0.0, 0.0, -1.0)\r\n     * @param rightHandedSystem is the scene right-handed (negative-z)\r\n     * @returns a new forward Vector3\r\n     */\r\n    Vector3.Backward = function (rightHandedSystem) {\r\n        if (rightHandedSystem === void 0) { rightHandedSystem = false; }\r\n        return new Vector3(0.0, 0.0, (rightHandedSystem ? 1.0 : -1.0));\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set to (1.0, 0.0, 0.0)\r\n     * @returns a new right Vector3\r\n     */\r\n    Vector3.Right = function () {\r\n        return new Vector3(1.0, 0.0, 0.0);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set to (-1.0, 0.0, 0.0)\r\n     * @returns a new left Vector3\r\n     */\r\n    Vector3.Left = function () {\r\n        return new Vector3(-1.0, 0.0, 0.0);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set with the result of the transformation by the given matrix of the given vector.\r\n     * This method computes tranformed coordinates only, not transformed direction vectors (ie. it takes translation in account)\r\n     * @param vector defines the Vector3 to transform\r\n     * @param transformation defines the transformation matrix\r\n     * @returns the transformed Vector3\r\n     */\r\n    Vector3.TransformCoordinates = function (vector, transformation) {\r\n        var result = Vector3.Zero();\r\n        Vector3.TransformCoordinatesToRef(vector, transformation, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" coordinates with the result of the transformation by the given matrix of the given vector\r\n     * This method computes tranformed coordinates only, not transformed direction vectors (ie. it takes translation in account)\r\n     * @param vector defines the Vector3 to transform\r\n     * @param transformation defines the transformation matrix\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.TransformCoordinatesToRef = function (vector, transformation, result) {\r\n        Vector3.TransformCoordinatesFromFloatsToRef(vector._x, vector._y, vector._z, transformation, result);\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" coordinates with the result of the transformation by the given matrix of the given floats (x, y, z)\r\n     * This method computes tranformed coordinates only, not transformed direction vectors\r\n     * @param x define the x coordinate of the source vector\r\n     * @param y define the y coordinate of the source vector\r\n     * @param z define the z coordinate of the source vector\r\n     * @param transformation defines the transformation matrix\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.TransformCoordinatesFromFloatsToRef = function (x, y, z, transformation, result) {\r\n        var m = transformation.m;\r\n        var rx = x * m[0] + y * m[4] + z * m[8] + m[12];\r\n        var ry = x * m[1] + y * m[5] + z * m[9] + m[13];\r\n        var rz = x * m[2] + y * m[6] + z * m[10] + m[14];\r\n        var rw = 1 / (x * m[3] + y * m[7] + z * m[11] + m[15]);\r\n        result.x = rx * rw;\r\n        result.y = ry * rw;\r\n        result.z = rz * rw;\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set with the result of the normal transformation by the given matrix of the given vector\r\n     * This methods computes transformed normalized direction vectors only (ie. it does not apply translation)\r\n     * @param vector defines the Vector3 to transform\r\n     * @param transformation defines the transformation matrix\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.TransformNormal = function (vector, transformation) {\r\n        var result = Vector3.Zero();\r\n        Vector3.TransformNormalToRef(vector, transformation, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the result of the normal transformation by the given matrix of the given vector\r\n     * This methods computes transformed normalized direction vectors only (ie. it does not apply translation)\r\n     * @param vector defines the Vector3 to transform\r\n     * @param transformation defines the transformation matrix\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.TransformNormalToRef = function (vector, transformation, result) {\r\n        this.TransformNormalFromFloatsToRef(vector._x, vector._y, vector._z, transformation, result);\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the result of the normal transformation by the given matrix of the given floats (x, y, z)\r\n     * This methods computes transformed normalized direction vectors only (ie. it does not apply translation)\r\n     * @param x define the x coordinate of the source vector\r\n     * @param y define the y coordinate of the source vector\r\n     * @param z define the z coordinate of the source vector\r\n     * @param transformation defines the transformation matrix\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.TransformNormalFromFloatsToRef = function (x, y, z, transformation, result) {\r\n        var m = transformation.m;\r\n        result.x = x * m[0] + y * m[4] + z * m[8];\r\n        result.y = x * m[1] + y * m[5] + z * m[9];\r\n        result.z = x * m[2] + y * m[6] + z * m[10];\r\n    };\r\n    /**\r\n     * Returns a new Vector3 located for \"amount\" on the CatmullRom interpolation spline defined by the vectors \"value1\", \"value2\", \"value3\", \"value4\"\r\n     * @param value1 defines the first control point\r\n     * @param value2 defines the second control point\r\n     * @param value3 defines the third control point\r\n     * @param value4 defines the fourth control point\r\n     * @param amount defines the amount on the spline to use\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.CatmullRom = function (value1, value2, value3, value4, amount) {\r\n        var squared = amount * amount;\r\n        var cubed = amount * squared;\r\n        var x = 0.5 * ((((2.0 * value2._x) + ((-value1._x + value3._x) * amount)) +\r\n            (((((2.0 * value1._x) - (5.0 * value2._x)) + (4.0 * value3._x)) - value4._x) * squared)) +\r\n            ((((-value1._x + (3.0 * value2._x)) - (3.0 * value3._x)) + value4._x) * cubed));\r\n        var y = 0.5 * ((((2.0 * value2._y) + ((-value1._y + value3._y) * amount)) +\r\n            (((((2.0 * value1._y) - (5.0 * value2._y)) + (4.0 * value3._y)) - value4._y) * squared)) +\r\n            ((((-value1._y + (3.0 * value2._y)) - (3.0 * value3._y)) + value4._y) * cubed));\r\n        var z = 0.5 * ((((2.0 * value2._z) + ((-value1._z + value3._z) * amount)) +\r\n            (((((2.0 * value1._z) - (5.0 * value2._z)) + (4.0 * value3._z)) - value4._z) * squared)) +\r\n            ((((-value1._z + (3.0 * value2._z)) - (3.0 * value3._z)) + value4._z) * cubed));\r\n        return new Vector3(x, y, z);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set with the coordinates of \"value\", if the vector \"value\" is in the cube defined by the vectors \"min\" and \"max\"\r\n     * If a coordinate value of \"value\" is lower than one of the \"min\" coordinate, then this \"value\" coordinate is set with the \"min\" one\r\n     * If a coordinate value of \"value\" is greater than one of the \"max\" coordinate, then this \"value\" coordinate is set with the \"max\" one\r\n     * @param value defines the current value\r\n     * @param min defines the lower range value\r\n     * @param max defines the upper range value\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.Clamp = function (value, min, max) {\r\n        var v = new Vector3();\r\n        Vector3.ClampToRef(value, min, max, v);\r\n        return v;\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the coordinates of \"value\", if the vector \"value\" is in the cube defined by the vectors \"min\" and \"max\"\r\n     * If a coordinate value of \"value\" is lower than one of the \"min\" coordinate, then this \"value\" coordinate is set with the \"min\" one\r\n     * If a coordinate value of \"value\" is greater than one of the \"max\" coordinate, then this \"value\" coordinate is set with the \"max\" one\r\n     * @param value defines the current value\r\n     * @param min defines the lower range value\r\n     * @param max defines the upper range value\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.ClampToRef = function (value, min, max, result) {\r\n        var x = value._x;\r\n        x = (x > max._x) ? max._x : x;\r\n        x = (x < min._x) ? min._x : x;\r\n        var y = value._y;\r\n        y = (y > max._y) ? max._y : y;\r\n        y = (y < min._y) ? min._y : y;\r\n        var z = value._z;\r\n        z = (z > max._z) ? max._z : z;\r\n        z = (z < min._z) ? min._z : z;\r\n        result.copyFromFloats(x, y, z);\r\n    };\r\n    /**\r\n     * Checks if a given vector is inside a specific range\r\n     * @param v defines the vector to test\r\n     * @param min defines the minimum range\r\n     * @param max defines the maximum range\r\n     */\r\n    Vector3.CheckExtends = function (v, min, max) {\r\n        min.minimizeInPlace(v);\r\n        max.maximizeInPlace(v);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 located for \"amount\" (float) on the Hermite interpolation spline defined by the vectors \"value1\", \"tangent1\", \"value2\", \"tangent2\"\r\n     * @param value1 defines the first control point\r\n     * @param tangent1 defines the first tangent vector\r\n     * @param value2 defines the second control point\r\n     * @param tangent2 defines the second tangent vector\r\n     * @param amount defines the amount on the interpolation spline (between 0 and 1)\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.Hermite = function (value1, tangent1, value2, tangent2, amount) {\r\n        var squared = amount * amount;\r\n        var cubed = amount * squared;\r\n        var part1 = ((2.0 * cubed) - (3.0 * squared)) + 1.0;\r\n        var part2 = (-2.0 * cubed) + (3.0 * squared);\r\n        var part3 = (cubed - (2.0 * squared)) + amount;\r\n        var part4 = cubed - squared;\r\n        var x = (((value1._x * part1) + (value2._x * part2)) + (tangent1._x * part3)) + (tangent2._x * part4);\r\n        var y = (((value1._y * part1) + (value2._y * part2)) + (tangent1._y * part3)) + (tangent2._y * part4);\r\n        var z = (((value1._z * part1) + (value2._z * part2)) + (tangent1._z * part3)) + (tangent2._z * part4);\r\n        return new Vector3(x, y, z);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 located for \"amount\" (float) on the linear interpolation between the vectors \"start\" and \"end\"\r\n     * @param start defines the start value\r\n     * @param end defines the end value\r\n     * @param amount max defines amount between both (between 0 and 1)\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.Lerp = function (start, end, amount) {\r\n        var result = new Vector3(0, 0, 0);\r\n        Vector3.LerpToRef(start, end, amount, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the result of the linear interpolation from the vector \"start\" for \"amount\" to the vector \"end\"\r\n     * @param start defines the start value\r\n     * @param end defines the end value\r\n     * @param amount max defines amount between both (between 0 and 1)\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.LerpToRef = function (start, end, amount, result) {\r\n        result.x = start._x + ((end._x - start._x) * amount);\r\n        result.y = start._y + ((end._y - start._y) * amount);\r\n        result.z = start._z + ((end._z - start._z) * amount);\r\n    };\r\n    /**\r\n     * Returns the dot product (float) between the vectors \"left\" and \"right\"\r\n     * @param left defines the left operand\r\n     * @param right defines the right operand\r\n     * @returns the dot product\r\n     */\r\n    Vector3.Dot = function (left, right) {\r\n        return (left._x * right._x + left._y * right._y + left._z * right._z);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 as the cross product of the vectors \"left\" and \"right\"\r\n     * The cross product is then orthogonal to both \"left\" and \"right\"\r\n     * @param left defines the left operand\r\n     * @param right defines the right operand\r\n     * @returns the cross product\r\n     */\r\n    Vector3.Cross = function (left, right) {\r\n        var result = Vector3.Zero();\r\n        Vector3.CrossToRef(left, right, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the cross product of \"left\" and \"right\"\r\n     * The cross product is then orthogonal to both \"left\" and \"right\"\r\n     * @param left defines the left operand\r\n     * @param right defines the right operand\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.CrossToRef = function (left, right, result) {\r\n        var x = left._y * right._z - left._z * right._y;\r\n        var y = left._z * right._x - left._x * right._z;\r\n        var z = left._x * right._y - left._y * right._x;\r\n        result.copyFromFloats(x, y, z);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 as the normalization of the given vector\r\n     * @param vector defines the Vector3 to normalize\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.Normalize = function (vector) {\r\n        var result = Vector3.Zero();\r\n        Vector3.NormalizeToRef(vector, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the normalization of the given first vector\r\n     * @param vector defines the Vector3 to normalize\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.NormalizeToRef = function (vector, result) {\r\n        vector.normalizeToRef(result);\r\n    };\r\n    /**\r\n     * Project a Vector3 onto screen space\r\n     * @param vector defines the Vector3 to project\r\n     * @param world defines the world matrix to use\r\n     * @param transform defines the transform (view x projection) matrix to use\r\n     * @param viewport defines the screen viewport to use\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.Project = function (vector, world, transform, viewport) {\r\n        var result = new Vector3();\r\n        Vector3.ProjectToRef(vector, world, transform, viewport, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Project a Vector3 onto screen space to reference\r\n     * @param vector defines the Vector3 to project\r\n     * @param world defines the world matrix to use\r\n     * @param transform defines the transform (view x projection) matrix to use\r\n     * @param viewport defines the screen viewport to use\r\n     * @param result the vector in which the screen space will be stored\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.ProjectToRef = function (vector, world, transform, viewport, result) {\r\n        var cw = viewport.width;\r\n        var ch = viewport.height;\r\n        var cx = viewport.x;\r\n        var cy = viewport.y;\r\n        var viewportMatrix = MathTmp.Matrix[1];\r\n        Matrix.FromValuesToRef(cw / 2.0, 0, 0, 0, 0, -ch / 2.0, 0, 0, 0, 0, 0.5, 0, cx + cw / 2.0, ch / 2.0 + cy, 0.5, 1, viewportMatrix);\r\n        var matrix = MathTmp.Matrix[0];\r\n        world.multiplyToRef(transform, matrix);\r\n        matrix.multiplyToRef(viewportMatrix, matrix);\r\n        Vector3.TransformCoordinatesToRef(vector, matrix, result);\r\n        return result;\r\n    };\r\n    /** @hidden */\r\n    Vector3._UnprojectFromInvertedMatrixToRef = function (source, matrix, result) {\r\n        Vector3.TransformCoordinatesToRef(source, matrix, result);\r\n        var m = matrix.m;\r\n        var num = source._x * m[3] + source._y * m[7] + source._z * m[11] + m[15];\r\n        if (_math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(num, 1.0)) {\r\n            result.scaleInPlace(1.0 / num);\r\n        }\r\n    };\r\n    /**\r\n     * Unproject from screen space to object space\r\n     * @param source defines the screen space Vector3 to use\r\n     * @param viewportWidth defines the current width of the viewport\r\n     * @param viewportHeight defines the current height of the viewport\r\n     * @param world defines the world matrix to use (can be set to Identity to go to world space)\r\n     * @param transform defines the transform (view x projection) matrix to use\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.UnprojectFromTransform = function (source, viewportWidth, viewportHeight, world, transform) {\r\n        var matrix = MathTmp.Matrix[0];\r\n        world.multiplyToRef(transform, matrix);\r\n        matrix.invert();\r\n        source.x = source._x / viewportWidth * 2 - 1;\r\n        source.y = -(source._y / viewportHeight * 2 - 1);\r\n        var vector = new Vector3();\r\n        Vector3._UnprojectFromInvertedMatrixToRef(source, matrix, vector);\r\n        return vector;\r\n    };\r\n    /**\r\n     * Unproject from screen space to object space\r\n     * @param source defines the screen space Vector3 to use\r\n     * @param viewportWidth defines the current width of the viewport\r\n     * @param viewportHeight defines the current height of the viewport\r\n     * @param world defines the world matrix to use (can be set to Identity to go to world space)\r\n     * @param view defines the view matrix to use\r\n     * @param projection defines the projection matrix to use\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.Unproject = function (source, viewportWidth, viewportHeight, world, view, projection) {\r\n        var result = Vector3.Zero();\r\n        Vector3.UnprojectToRef(source, viewportWidth, viewportHeight, world, view, projection, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Unproject from screen space to object space\r\n     * @param source defines the screen space Vector3 to use\r\n     * @param viewportWidth defines the current width of the viewport\r\n     * @param viewportHeight defines the current height of the viewport\r\n     * @param world defines the world matrix to use (can be set to Identity to go to world space)\r\n     * @param view defines the view matrix to use\r\n     * @param projection defines the projection matrix to use\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.UnprojectToRef = function (source, viewportWidth, viewportHeight, world, view, projection, result) {\r\n        Vector3.UnprojectFloatsToRef(source._x, source._y, source._z, viewportWidth, viewportHeight, world, view, projection, result);\r\n    };\r\n    /**\r\n     * Unproject from screen space to object space\r\n     * @param sourceX defines the screen space x coordinate to use\r\n     * @param sourceY defines the screen space y coordinate to use\r\n     * @param sourceZ defines the screen space z coordinate to use\r\n     * @param viewportWidth defines the current width of the viewport\r\n     * @param viewportHeight defines the current height of the viewport\r\n     * @param world defines the world matrix to use (can be set to Identity to go to world space)\r\n     * @param view defines the view matrix to use\r\n     * @param projection defines the projection matrix to use\r\n     * @param result defines the Vector3 where to store the result\r\n     */\r\n    Vector3.UnprojectFloatsToRef = function (sourceX, sourceY, sourceZ, viewportWidth, viewportHeight, world, view, projection, result) {\r\n        var matrix = MathTmp.Matrix[0];\r\n        world.multiplyToRef(view, matrix);\r\n        matrix.multiplyToRef(projection, matrix);\r\n        matrix.invert();\r\n        var screenSource = MathTmp.Vector3[0];\r\n        screenSource.x = sourceX / viewportWidth * 2 - 1;\r\n        screenSource.y = -(sourceY / viewportHeight * 2 - 1);\r\n        screenSource.z = 2 * sourceZ - 1.0;\r\n        Vector3._UnprojectFromInvertedMatrixToRef(screenSource, matrix, result);\r\n    };\r\n    /**\r\n     * Gets the minimal coordinate values between two Vector3\r\n     * @param left defines the first operand\r\n     * @param right defines the second operand\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.Minimize = function (left, right) {\r\n        var min = left.clone();\r\n        min.minimizeInPlace(right);\r\n        return min;\r\n    };\r\n    /**\r\n     * Gets the maximal coordinate values between two Vector3\r\n     * @param left defines the first operand\r\n     * @param right defines the second operand\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.Maximize = function (left, right) {\r\n        var max = left.clone();\r\n        max.maximizeInPlace(right);\r\n        return max;\r\n    };\r\n    /**\r\n     * Returns the distance between the vectors \"value1\" and \"value2\"\r\n     * @param value1 defines the first operand\r\n     * @param value2 defines the second operand\r\n     * @returns the distance\r\n     */\r\n    Vector3.Distance = function (value1, value2) {\r\n        return Math.sqrt(Vector3.DistanceSquared(value1, value2));\r\n    };\r\n    /**\r\n     * Returns the squared distance between the vectors \"value1\" and \"value2\"\r\n     * @param value1 defines the first operand\r\n     * @param value2 defines the second operand\r\n     * @returns the squared distance\r\n     */\r\n    Vector3.DistanceSquared = function (value1, value2) {\r\n        var x = value1._x - value2._x;\r\n        var y = value1._y - value2._y;\r\n        var z = value1._z - value2._z;\r\n        return (x * x) + (y * y) + (z * z);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 located at the center between \"value1\" and \"value2\"\r\n     * @param value1 defines the first operand\r\n     * @param value2 defines the second operand\r\n     * @returns the new Vector3\r\n     */\r\n    Vector3.Center = function (value1, value2) {\r\n        var center = value1.add(value2);\r\n        center.scaleInPlace(0.5);\r\n        return center;\r\n    };\r\n    /**\r\n     * Given three orthogonal normalized left-handed oriented Vector3 axis in space (target system),\r\n     * RotationFromAxis() returns the rotation Euler angles (ex : rotation.x, rotation.y, rotation.z) to apply\r\n     * to something in order to rotate it from its local system to the given target system\r\n     * Note: axis1, axis2 and axis3 are normalized during this operation\r\n     * @param axis1 defines the first axis\r\n     * @param axis2 defines the second axis\r\n     * @param axis3 defines the third axis\r\n     * @returns a new Vector3\r\n     */\r\n    Vector3.RotationFromAxis = function (axis1, axis2, axis3) {\r\n        var rotation = Vector3.Zero();\r\n        Vector3.RotationFromAxisToRef(axis1, axis2, axis3, rotation);\r\n        return rotation;\r\n    };\r\n    /**\r\n     * The same than RotationFromAxis but updates the given ref Vector3 parameter instead of returning a new Vector3\r\n     * @param axis1 defines the first axis\r\n     * @param axis2 defines the second axis\r\n     * @param axis3 defines the third axis\r\n     * @param ref defines the Vector3 where to store the result\r\n     */\r\n    Vector3.RotationFromAxisToRef = function (axis1, axis2, axis3, ref) {\r\n        var quat = MathTmp.Quaternion[0];\r\n        Quaternion.RotationQuaternionFromAxisToRef(axis1, axis2, axis3, quat);\r\n        quat.toEulerAnglesToRef(ref);\r\n    };\r\n    Vector3._UpReadOnly = Vector3.Up();\r\n    Vector3._ZeroReadOnly = Vector3.Zero();\r\n    return Vector3;\r\n}());\r\n\r\n/**\r\n * Vector4 class created for EulerAngle class conversion to Quaternion\r\n */\r\nvar Vector4 = /** @class */ (function () {\r\n    /**\r\n     * Creates a Vector4 object from the given floats.\r\n     * @param x x value of the vector\r\n     * @param y y value of the vector\r\n     * @param z z value of the vector\r\n     * @param w w value of the vector\r\n     */\r\n    function Vector4(\r\n    /** x value of the vector */\r\n    x, \r\n    /** y value of the vector */\r\n    y, \r\n    /** z value of the vector */\r\n    z, \r\n    /** w value of the vector */\r\n    w) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n    /**\r\n     * Returns the string with the Vector4 coordinates.\r\n     * @returns a string containing all the vector values\r\n     */\r\n    Vector4.prototype.toString = function () {\r\n        return \"{X: \" + this.x + \" Y:\" + this.y + \" Z:\" + this.z + \" W:\" + this.w + \"}\";\r\n    };\r\n    /**\r\n     * Returns the string \"Vector4\".\r\n     * @returns \"Vector4\"\r\n     */\r\n    Vector4.prototype.getClassName = function () {\r\n        return \"Vector4\";\r\n    };\r\n    /**\r\n     * Returns the Vector4 hash code.\r\n     * @returns a unique hash code\r\n     */\r\n    Vector4.prototype.getHashCode = function () {\r\n        var hash = this.x | 0;\r\n        hash = (hash * 397) ^ (this.y | 0);\r\n        hash = (hash * 397) ^ (this.z | 0);\r\n        hash = (hash * 397) ^ (this.w | 0);\r\n        return hash;\r\n    };\r\n    // Operators\r\n    /**\r\n     * Returns a new array populated with 4 elements : the Vector4 coordinates.\r\n     * @returns the resulting array\r\n     */\r\n    Vector4.prototype.asArray = function () {\r\n        var result = new Array();\r\n        this.toArray(result, 0);\r\n        return result;\r\n    };\r\n    /**\r\n     * Populates the given array from the given index with the Vector4 coordinates.\r\n     * @param array array to populate\r\n     * @param index index of the array to start at (default: 0)\r\n     * @returns the Vector4.\r\n     */\r\n    Vector4.prototype.toArray = function (array, index) {\r\n        if (index === undefined) {\r\n            index = 0;\r\n        }\r\n        array[index] = this.x;\r\n        array[index + 1] = this.y;\r\n        array[index + 2] = this.z;\r\n        array[index + 3] = this.w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Update the current vector from an array\r\n     * @param array defines the destination array\r\n     * @param index defines the offset in the destination array\r\n     * @returns the current Vector3\r\n     */\r\n    Vector4.prototype.fromArray = function (array, index) {\r\n        if (index === void 0) { index = 0; }\r\n        Vector4.FromArrayToRef(array, index, this);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds the given vector to the current Vector4.\r\n     * @param otherVector the vector to add\r\n     * @returns the updated Vector4.\r\n     */\r\n    Vector4.prototype.addInPlace = function (otherVector) {\r\n        this.x += otherVector.x;\r\n        this.y += otherVector.y;\r\n        this.z += otherVector.z;\r\n        this.w += otherVector.w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector4 as the result of the addition of the current Vector4 and the given one.\r\n     * @param otherVector the vector to add\r\n     * @returns the resulting vector\r\n     */\r\n    Vector4.prototype.add = function (otherVector) {\r\n        return new Vector4(this.x + otherVector.x, this.y + otherVector.y, this.z + otherVector.z, this.w + otherVector.w);\r\n    };\r\n    /**\r\n     * Updates the given vector \"result\" with the result of the addition of the current Vector4 and the given one.\r\n     * @param otherVector the vector to add\r\n     * @param result the vector to store the result\r\n     * @returns the current Vector4.\r\n     */\r\n    Vector4.prototype.addToRef = function (otherVector, result) {\r\n        result.x = this.x + otherVector.x;\r\n        result.y = this.y + otherVector.y;\r\n        result.z = this.z + otherVector.z;\r\n        result.w = this.w + otherVector.w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Subtract in place the given vector from the current Vector4.\r\n     * @param otherVector the vector to subtract\r\n     * @returns the updated Vector4.\r\n     */\r\n    Vector4.prototype.subtractInPlace = function (otherVector) {\r\n        this.x -= otherVector.x;\r\n        this.y -= otherVector.y;\r\n        this.z -= otherVector.z;\r\n        this.w -= otherVector.w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector4 with the result of the subtraction of the given vector from the current Vector4.\r\n     * @param otherVector the vector to add\r\n     * @returns the new vector with the result\r\n     */\r\n    Vector4.prototype.subtract = function (otherVector) {\r\n        return new Vector4(this.x - otherVector.x, this.y - otherVector.y, this.z - otherVector.z, this.w - otherVector.w);\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the result of the subtraction of the given vector from the current Vector4.\r\n     * @param otherVector the vector to subtract\r\n     * @param result the vector to store the result\r\n     * @returns the current Vector4.\r\n     */\r\n    Vector4.prototype.subtractToRef = function (otherVector, result) {\r\n        result.x = this.x - otherVector.x;\r\n        result.y = this.y - otherVector.y;\r\n        result.z = this.z - otherVector.z;\r\n        result.w = this.w - otherVector.w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector4 set with the result of the subtraction of the given floats from the current Vector4 coordinates.\r\n     */\r\n    /**\r\n     * Returns a new Vector4 set with the result of the subtraction of the given floats from the current Vector4 coordinates.\r\n     * @param x value to subtract\r\n     * @param y value to subtract\r\n     * @param z value to subtract\r\n     * @param w value to subtract\r\n     * @returns new vector containing the result\r\n     */\r\n    Vector4.prototype.subtractFromFloats = function (x, y, z, w) {\r\n        return new Vector4(this.x - x, this.y - y, this.z - z, this.w - w);\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" set with the result of the subtraction of the given floats from the current Vector4 coordinates.\r\n     * @param x value to subtract\r\n     * @param y value to subtract\r\n     * @param z value to subtract\r\n     * @param w value to subtract\r\n     * @param result the vector to store the result in\r\n     * @returns the current Vector4.\r\n     */\r\n    Vector4.prototype.subtractFromFloatsToRef = function (x, y, z, w, result) {\r\n        result.x = this.x - x;\r\n        result.y = this.y - y;\r\n        result.z = this.z - z;\r\n        result.w = this.w - w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector4 set with the current Vector4 negated coordinates.\r\n     * @returns a new vector with the negated values\r\n     */\r\n    Vector4.prototype.negate = function () {\r\n        return new Vector4(-this.x, -this.y, -this.z, -this.w);\r\n    };\r\n    /**\r\n     * Negate this vector in place\r\n     * @returns this\r\n     */\r\n    Vector4.prototype.negateInPlace = function () {\r\n        this.x *= -1;\r\n        this.y *= -1;\r\n        this.z *= -1;\r\n        this.w *= -1;\r\n        return this;\r\n    };\r\n    /**\r\n     * Negate the current Vector4 and stores the result in the given vector \"result\" coordinates\r\n     * @param result defines the Vector3 object where to store the result\r\n     * @returns the current Vector4\r\n     */\r\n    Vector4.prototype.negateToRef = function (result) {\r\n        return result.copyFromFloats(this.x * -1, this.y * -1, this.z * -1, this.w * -1);\r\n    };\r\n    /**\r\n     * Multiplies the current Vector4 coordinates by scale (float).\r\n     * @param scale the number to scale with\r\n     * @returns the updated Vector4.\r\n     */\r\n    Vector4.prototype.scaleInPlace = function (scale) {\r\n        this.x *= scale;\r\n        this.y *= scale;\r\n        this.z *= scale;\r\n        this.w *= scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector4 set with the current Vector4 coordinates multiplied by scale (float).\r\n     * @param scale the number to scale with\r\n     * @returns a new vector with the result\r\n     */\r\n    Vector4.prototype.scale = function (scale) {\r\n        return new Vector4(this.x * scale, this.y * scale, this.z * scale, this.w * scale);\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the current Vector4 coordinates multiplied by scale (float).\r\n     * @param scale the number to scale with\r\n     * @param result a vector to store the result in\r\n     * @returns the current Vector4.\r\n     */\r\n    Vector4.prototype.scaleToRef = function (scale, result) {\r\n        result.x = this.x * scale;\r\n        result.y = this.y * scale;\r\n        result.z = this.z * scale;\r\n        result.w = this.w * scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Scale the current Vector4 values by a factor and add the result to a given Vector4\r\n     * @param scale defines the scale factor\r\n     * @param result defines the Vector4 object where to store the result\r\n     * @returns the unmodified current Vector4\r\n     */\r\n    Vector4.prototype.scaleAndAddToRef = function (scale, result) {\r\n        result.x += this.x * scale;\r\n        result.y += this.y * scale;\r\n        result.z += this.z * scale;\r\n        result.w += this.w * scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Boolean : True if the current Vector4 coordinates are stricly equal to the given ones.\r\n     * @param otherVector the vector to compare against\r\n     * @returns true if they are equal\r\n     */\r\n    Vector4.prototype.equals = function (otherVector) {\r\n        return otherVector && this.x === otherVector.x && this.y === otherVector.y && this.z === otherVector.z && this.w === otherVector.w;\r\n    };\r\n    /**\r\n     * Boolean : True if the current Vector4 coordinates are each beneath the distance \"epsilon\" from the given vector ones.\r\n     * @param otherVector vector to compare against\r\n     * @param epsilon (Default: very small number)\r\n     * @returns true if they are equal\r\n     */\r\n    Vector4.prototype.equalsWithEpsilon = function (otherVector, epsilon) {\r\n        if (epsilon === void 0) { epsilon = _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* Epsilon */ \"a\"]; }\r\n        return otherVector\r\n            && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this.x, otherVector.x, epsilon)\r\n            && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this.y, otherVector.y, epsilon)\r\n            && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this.z, otherVector.z, epsilon)\r\n            && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this.w, otherVector.w, epsilon);\r\n    };\r\n    /**\r\n     * Boolean : True if the given floats are strictly equal to the current Vector4 coordinates.\r\n     * @param x x value to compare against\r\n     * @param y y value to compare against\r\n     * @param z z value to compare against\r\n     * @param w w value to compare against\r\n     * @returns true if equal\r\n     */\r\n    Vector4.prototype.equalsToFloats = function (x, y, z, w) {\r\n        return this.x === x && this.y === y && this.z === z && this.w === w;\r\n    };\r\n    /**\r\n     * Multiplies in place the current Vector4 by the given one.\r\n     * @param otherVector vector to multiple with\r\n     * @returns the updated Vector4.\r\n     */\r\n    Vector4.prototype.multiplyInPlace = function (otherVector) {\r\n        this.x *= otherVector.x;\r\n        this.y *= otherVector.y;\r\n        this.z *= otherVector.z;\r\n        this.w *= otherVector.w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector4 set with the multiplication result of the current Vector4 and the given one.\r\n     * @param otherVector vector to multiple with\r\n     * @returns resulting new vector\r\n     */\r\n    Vector4.prototype.multiply = function (otherVector) {\r\n        return new Vector4(this.x * otherVector.x, this.y * otherVector.y, this.z * otherVector.z, this.w * otherVector.w);\r\n    };\r\n    /**\r\n     * Updates the given vector \"result\" with the multiplication result of the current Vector4 and the given one.\r\n     * @param otherVector vector to multiple with\r\n     * @param result vector to store the result\r\n     * @returns the current Vector4.\r\n     */\r\n    Vector4.prototype.multiplyToRef = function (otherVector, result) {\r\n        result.x = this.x * otherVector.x;\r\n        result.y = this.y * otherVector.y;\r\n        result.z = this.z * otherVector.z;\r\n        result.w = this.w * otherVector.w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector4 set with the multiplication result of the given floats and the current Vector4 coordinates.\r\n     * @param x x value multiply with\r\n     * @param y y value multiply with\r\n     * @param z z value multiply with\r\n     * @param w w value multiply with\r\n     * @returns resulting new vector\r\n     */\r\n    Vector4.prototype.multiplyByFloats = function (x, y, z, w) {\r\n        return new Vector4(this.x * x, this.y * y, this.z * z, this.w * w);\r\n    };\r\n    /**\r\n     * Returns a new Vector4 set with the division result of the current Vector4 by the given one.\r\n     * @param otherVector vector to devide with\r\n     * @returns resulting new vector\r\n     */\r\n    Vector4.prototype.divide = function (otherVector) {\r\n        return new Vector4(this.x / otherVector.x, this.y / otherVector.y, this.z / otherVector.z, this.w / otherVector.w);\r\n    };\r\n    /**\r\n     * Updates the given vector \"result\" with the division result of the current Vector4 by the given one.\r\n     * @param otherVector vector to devide with\r\n     * @param result vector to store the result\r\n     * @returns the current Vector4.\r\n     */\r\n    Vector4.prototype.divideToRef = function (otherVector, result) {\r\n        result.x = this.x / otherVector.x;\r\n        result.y = this.y / otherVector.y;\r\n        result.z = this.z / otherVector.z;\r\n        result.w = this.w / otherVector.w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Divides the current Vector3 coordinates by the given ones.\r\n     * @param otherVector vector to devide with\r\n     * @returns the updated Vector3.\r\n     */\r\n    Vector4.prototype.divideInPlace = function (otherVector) {\r\n        return this.divideToRef(otherVector, this);\r\n    };\r\n    /**\r\n     * Updates the Vector4 coordinates with the minimum values between its own and the given vector ones\r\n     * @param other defines the second operand\r\n     * @returns the current updated Vector4\r\n     */\r\n    Vector4.prototype.minimizeInPlace = function (other) {\r\n        if (other.x < this.x) {\r\n            this.x = other.x;\r\n        }\r\n        if (other.y < this.y) {\r\n            this.y = other.y;\r\n        }\r\n        if (other.z < this.z) {\r\n            this.z = other.z;\r\n        }\r\n        if (other.w < this.w) {\r\n            this.w = other.w;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates the Vector4 coordinates with the maximum values between its own and the given vector ones\r\n     * @param other defines the second operand\r\n     * @returns the current updated Vector4\r\n     */\r\n    Vector4.prototype.maximizeInPlace = function (other) {\r\n        if (other.x > this.x) {\r\n            this.x = other.x;\r\n        }\r\n        if (other.y > this.y) {\r\n            this.y = other.y;\r\n        }\r\n        if (other.z > this.z) {\r\n            this.z = other.z;\r\n        }\r\n        if (other.w > this.w) {\r\n            this.w = other.w;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a new Vector4 from current Vector4 floored values\r\n     * @returns a new Vector4\r\n     */\r\n    Vector4.prototype.floor = function () {\r\n        return new Vector4(Math.floor(this.x), Math.floor(this.y), Math.floor(this.z), Math.floor(this.w));\r\n    };\r\n    /**\r\n     * Gets a new Vector4 from current Vector3 floored values\r\n     * @returns a new Vector4\r\n     */\r\n    Vector4.prototype.fract = function () {\r\n        return new Vector4(this.x - Math.floor(this.x), this.y - Math.floor(this.y), this.z - Math.floor(this.z), this.w - Math.floor(this.w));\r\n    };\r\n    // Properties\r\n    /**\r\n     * Returns the Vector4 length (float).\r\n     * @returns the length\r\n     */\r\n    Vector4.prototype.length = function () {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    };\r\n    /**\r\n     * Returns the Vector4 squared length (float).\r\n     * @returns the length squared\r\n     */\r\n    Vector4.prototype.lengthSquared = function () {\r\n        return (this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    };\r\n    // Methods\r\n    /**\r\n     * Normalizes in place the Vector4.\r\n     * @returns the updated Vector4.\r\n     */\r\n    Vector4.prototype.normalize = function () {\r\n        var len = this.length();\r\n        if (len === 0) {\r\n            return this;\r\n        }\r\n        return this.scaleInPlace(1.0 / len);\r\n    };\r\n    /**\r\n     * Returns a new Vector3 from the Vector4 (x, y, z) coordinates.\r\n     * @returns this converted to a new vector3\r\n     */\r\n    Vector4.prototype.toVector3 = function () {\r\n        return new Vector3(this.x, this.y, this.z);\r\n    };\r\n    /**\r\n     * Returns a new Vector4 copied from the current one.\r\n     * @returns the new cloned vector\r\n     */\r\n    Vector4.prototype.clone = function () {\r\n        return new Vector4(this.x, this.y, this.z, this.w);\r\n    };\r\n    /**\r\n     * Updates the current Vector4 with the given one coordinates.\r\n     * @param source the source vector to copy from\r\n     * @returns the updated Vector4.\r\n     */\r\n    Vector4.prototype.copyFrom = function (source) {\r\n        this.x = source.x;\r\n        this.y = source.y;\r\n        this.z = source.z;\r\n        this.w = source.w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates the current Vector4 coordinates with the given floats.\r\n     * @param x float to copy from\r\n     * @param y float to copy from\r\n     * @param z float to copy from\r\n     * @param w float to copy from\r\n     * @returns the updated Vector4.\r\n     */\r\n    Vector4.prototype.copyFromFloats = function (x, y, z, w) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates the current Vector4 coordinates with the given floats.\r\n     * @param x float to set from\r\n     * @param y float to set from\r\n     * @param z float to set from\r\n     * @param w float to set from\r\n     * @returns the updated Vector4.\r\n     */\r\n    Vector4.prototype.set = function (x, y, z, w) {\r\n        return this.copyFromFloats(x, y, z, w);\r\n    };\r\n    /**\r\n     * Copies the given float to the current Vector3 coordinates\r\n     * @param v defines the x, y, z and w coordinates of the operand\r\n     * @returns the current updated Vector3\r\n     */\r\n    Vector4.prototype.setAll = function (v) {\r\n        this.x = this.y = this.z = this.w = v;\r\n        return this;\r\n    };\r\n    // Statics\r\n    /**\r\n     * Returns a new Vector4 set from the starting index of the given array.\r\n     * @param array the array to pull values from\r\n     * @param offset the offset into the array to start at\r\n     * @returns the new vector\r\n     */\r\n    Vector4.FromArray = function (array, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        return new Vector4(array[offset], array[offset + 1], array[offset + 2], array[offset + 3]);\r\n    };\r\n    /**\r\n     * Updates the given vector \"result\" from the starting index of the given array.\r\n     * @param array the array to pull values from\r\n     * @param offset the offset into the array to start at\r\n     * @param result the vector to store the result in\r\n     */\r\n    Vector4.FromArrayToRef = function (array, offset, result) {\r\n        result.x = array[offset];\r\n        result.y = array[offset + 1];\r\n        result.z = array[offset + 2];\r\n        result.w = array[offset + 3];\r\n    };\r\n    /**\r\n     * Updates the given vector \"result\" from the starting index of the given Float32Array.\r\n     * @param array the array to pull values from\r\n     * @param offset the offset into the array to start at\r\n     * @param result the vector to store the result in\r\n     */\r\n    Vector4.FromFloatArrayToRef = function (array, offset, result) {\r\n        Vector4.FromArrayToRef(array, offset, result);\r\n    };\r\n    /**\r\n     * Updates the given vector \"result\" coordinates from the given floats.\r\n     * @param x float to set from\r\n     * @param y float to set from\r\n     * @param z float to set from\r\n     * @param w float to set from\r\n     * @param result the vector to the floats in\r\n     */\r\n    Vector4.FromFloatsToRef = function (x, y, z, w, result) {\r\n        result.x = x;\r\n        result.y = y;\r\n        result.z = z;\r\n        result.w = w;\r\n    };\r\n    /**\r\n     * Returns a new Vector4 set to (0.0, 0.0, 0.0, 0.0)\r\n     * @returns the new vector\r\n     */\r\n    Vector4.Zero = function () {\r\n        return new Vector4(0.0, 0.0, 0.0, 0.0);\r\n    };\r\n    /**\r\n     * Returns a new Vector4 set to (1.0, 1.0, 1.0, 1.0)\r\n     * @returns the new vector\r\n     */\r\n    Vector4.One = function () {\r\n        return new Vector4(1.0, 1.0, 1.0, 1.0);\r\n    };\r\n    /**\r\n     * Returns a new normalized Vector4 from the given one.\r\n     * @param vector the vector to normalize\r\n     * @returns the vector\r\n     */\r\n    Vector4.Normalize = function (vector) {\r\n        var result = Vector4.Zero();\r\n        Vector4.NormalizeToRef(vector, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Updates the given vector \"result\" from the normalization of the given one.\r\n     * @param vector the vector to normalize\r\n     * @param result the vector to store the result in\r\n     */\r\n    Vector4.NormalizeToRef = function (vector, result) {\r\n        result.copyFrom(vector);\r\n        result.normalize();\r\n    };\r\n    /**\r\n     * Returns a vector with the minimum values from the left and right vectors\r\n     * @param left left vector to minimize\r\n     * @param right right vector to minimize\r\n     * @returns a new vector with the minimum of the left and right vector values\r\n     */\r\n    Vector4.Minimize = function (left, right) {\r\n        var min = left.clone();\r\n        min.minimizeInPlace(right);\r\n        return min;\r\n    };\r\n    /**\r\n     * Returns a vector with the maximum values from the left and right vectors\r\n     * @param left left vector to maximize\r\n     * @param right right vector to maximize\r\n     * @returns a new vector with the maximum of the left and right vector values\r\n     */\r\n    Vector4.Maximize = function (left, right) {\r\n        var max = left.clone();\r\n        max.maximizeInPlace(right);\r\n        return max;\r\n    };\r\n    /**\r\n     * Returns the distance (float) between the vectors \"value1\" and \"value2\".\r\n     * @param value1 value to calulate the distance between\r\n     * @param value2 value to calulate the distance between\r\n     * @return the distance between the two vectors\r\n     */\r\n    Vector4.Distance = function (value1, value2) {\r\n        return Math.sqrt(Vector4.DistanceSquared(value1, value2));\r\n    };\r\n    /**\r\n     * Returns the squared distance (float) between the vectors \"value1\" and \"value2\".\r\n     * @param value1 value to calulate the distance between\r\n     * @param value2 value to calulate the distance between\r\n     * @return the distance between the two vectors squared\r\n     */\r\n    Vector4.DistanceSquared = function (value1, value2) {\r\n        var x = value1.x - value2.x;\r\n        var y = value1.y - value2.y;\r\n        var z = value1.z - value2.z;\r\n        var w = value1.w - value2.w;\r\n        return (x * x) + (y * y) + (z * z) + (w * w);\r\n    };\r\n    /**\r\n     * Returns a new Vector4 located at the center between the vectors \"value1\" and \"value2\".\r\n     * @param value1 value to calulate the center between\r\n     * @param value2 value to calulate the center between\r\n     * @return the center between the two vectors\r\n     */\r\n    Vector4.Center = function (value1, value2) {\r\n        var center = value1.add(value2);\r\n        center.scaleInPlace(0.5);\r\n        return center;\r\n    };\r\n    /**\r\n     * Returns a new Vector4 set with the result of the normal transformation by the given matrix of the given vector.\r\n     * This methods computes transformed normalized direction vectors only.\r\n     * @param vector the vector to transform\r\n     * @param transformation the transformation matrix to apply\r\n     * @returns the new vector\r\n     */\r\n    Vector4.TransformNormal = function (vector, transformation) {\r\n        var result = Vector4.Zero();\r\n        Vector4.TransformNormalToRef(vector, transformation, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the result of the normal transformation by the given matrix of the given vector.\r\n     * This methods computes transformed normalized direction vectors only.\r\n     * @param vector the vector to transform\r\n     * @param transformation the transformation matrix to apply\r\n     * @param result the vector to store the result in\r\n     */\r\n    Vector4.TransformNormalToRef = function (vector, transformation, result) {\r\n        var m = transformation.m;\r\n        var x = (vector.x * m[0]) + (vector.y * m[4]) + (vector.z * m[8]);\r\n        var y = (vector.x * m[1]) + (vector.y * m[5]) + (vector.z * m[9]);\r\n        var z = (vector.x * m[2]) + (vector.y * m[6]) + (vector.z * m[10]);\r\n        result.x = x;\r\n        result.y = y;\r\n        result.z = z;\r\n        result.w = vector.w;\r\n    };\r\n    /**\r\n     * Sets the given vector \"result\" with the result of the normal transformation by the given matrix of the given floats (x, y, z, w).\r\n     * This methods computes transformed normalized direction vectors only.\r\n     * @param x value to transform\r\n     * @param y value to transform\r\n     * @param z value to transform\r\n     * @param w value to transform\r\n     * @param transformation the transformation matrix to apply\r\n     * @param result the vector to store the results in\r\n     */\r\n    Vector4.TransformNormalFromFloatsToRef = function (x, y, z, w, transformation, result) {\r\n        var m = transformation.m;\r\n        result.x = (x * m[0]) + (y * m[4]) + (z * m[8]);\r\n        result.y = (x * m[1]) + (y * m[5]) + (z * m[9]);\r\n        result.z = (x * m[2]) + (y * m[6]) + (z * m[10]);\r\n        result.w = w;\r\n    };\r\n    /**\r\n     * Creates a new Vector4 from a Vector3\r\n     * @param source defines the source data\r\n     * @param w defines the 4th component (default is 0)\r\n     * @returns a new Vector4\r\n     */\r\n    Vector4.FromVector3 = function (source, w) {\r\n        if (w === void 0) { w = 0; }\r\n        return new Vector4(source._x, source._y, source._z, w);\r\n    };\r\n    return Vector4;\r\n}());\r\n\r\n/**\r\n * Class used to store quaternion data\r\n * @see https://en.wikipedia.org/wiki/Quaternion\r\n * @see https://doc.babylonjs.com/features/position,_rotation,_scaling\r\n */\r\nvar Quaternion = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Quaternion from the given floats\r\n     * @param x defines the first component (0 by default)\r\n     * @param y defines the second component (0 by default)\r\n     * @param z defines the third component (0 by default)\r\n     * @param w defines the fourth component (1.0 by default)\r\n     */\r\n    function Quaternion(x, y, z, w) {\r\n        if (x === void 0) { x = 0.0; }\r\n        if (y === void 0) { y = 0.0; }\r\n        if (z === void 0) { z = 0.0; }\r\n        if (w === void 0) { w = 1.0; }\r\n        /** @hidden */\r\n        this._isDirty = true;\r\n        this._x = x;\r\n        this._y = y;\r\n        this._z = z;\r\n        this._w = w;\r\n    }\r\n    Object.defineProperty(Quaternion.prototype, \"x\", {\r\n        /** Gets or sets the x coordinate */\r\n        get: function () {\r\n            return this._x;\r\n        },\r\n        set: function (value) {\r\n            this._x = value;\r\n            this._isDirty = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Quaternion.prototype, \"y\", {\r\n        /** Gets or sets the y coordinate */\r\n        get: function () {\r\n            return this._y;\r\n        },\r\n        set: function (value) {\r\n            this._y = value;\r\n            this._isDirty = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Quaternion.prototype, \"z\", {\r\n        /** Gets or sets the z coordinate */\r\n        get: function () {\r\n            return this._z;\r\n        },\r\n        set: function (value) {\r\n            this._z = value;\r\n            this._isDirty = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Quaternion.prototype, \"w\", {\r\n        /** Gets or sets the w coordinate */\r\n        get: function () {\r\n            return this._w;\r\n        },\r\n        set: function (value) {\r\n            this._w = value;\r\n            this._isDirty = true;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a string representation for the current quaternion\r\n     * @returns a string with the Quaternion coordinates\r\n     */\r\n    Quaternion.prototype.toString = function () {\r\n        return \"{X: \" + this._x + \" Y:\" + this._y + \" Z:\" + this._z + \" W:\" + this._w + \"}\";\r\n    };\r\n    /**\r\n     * Gets the class name of the quaternion\r\n     * @returns the string \"Quaternion\"\r\n     */\r\n    Quaternion.prototype.getClassName = function () {\r\n        return \"Quaternion\";\r\n    };\r\n    /**\r\n     * Gets a hash code for this quaternion\r\n     * @returns the quaternion hash code\r\n     */\r\n    Quaternion.prototype.getHashCode = function () {\r\n        var hash = this._x | 0;\r\n        hash = (hash * 397) ^ (this._y | 0);\r\n        hash = (hash * 397) ^ (this._z | 0);\r\n        hash = (hash * 397) ^ (this._w | 0);\r\n        return hash;\r\n    };\r\n    /**\r\n     * Copy the quaternion to an array\r\n     * @returns a new array populated with 4 elements from the quaternion coordinates\r\n     */\r\n    Quaternion.prototype.asArray = function () {\r\n        return [this._x, this._y, this._z, this._w];\r\n    };\r\n    /**\r\n     * Check if two quaternions are equals\r\n     * @param otherQuaternion defines the second operand\r\n     * @return true if the current quaternion and the given one coordinates are strictly equals\r\n     */\r\n    Quaternion.prototype.equals = function (otherQuaternion) {\r\n        return otherQuaternion && this._x === otherQuaternion._x && this._y === otherQuaternion._y && this._z === otherQuaternion._z && this._w === otherQuaternion._w;\r\n    };\r\n    /**\r\n     * Gets a boolean if two quaternions are equals (using an epsilon value)\r\n     * @param otherQuaternion defines the other quaternion\r\n     * @param epsilon defines the minimal distance to consider equality\r\n     * @returns true if the given quaternion coordinates are close to the current ones by a distance of epsilon.\r\n     */\r\n    Quaternion.prototype.equalsWithEpsilon = function (otherQuaternion, epsilon) {\r\n        if (epsilon === void 0) { epsilon = _math_constants__WEBPACK_IMPORTED_MODULE_1__[/* Epsilon */ \"a\"]; }\r\n        return otherQuaternion\r\n            && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this._x, otherQuaternion._x, epsilon)\r\n            && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this._y, otherQuaternion._y, epsilon)\r\n            && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this._z, otherQuaternion._z, epsilon)\r\n            && _math_scalar__WEBPACK_IMPORTED_MODULE_0__[/* Scalar */ \"a\"].WithinEpsilon(this._w, otherQuaternion._w, epsilon);\r\n    };\r\n    /**\r\n     * Clone the current quaternion\r\n     * @returns a new quaternion copied from the current one\r\n     */\r\n    Quaternion.prototype.clone = function () {\r\n        return new Quaternion(this._x, this._y, this._z, this._w);\r\n    };\r\n    /**\r\n     * Copy a quaternion to the current one\r\n     * @param other defines the other quaternion\r\n     * @returns the updated current quaternion\r\n     */\r\n    Quaternion.prototype.copyFrom = function (other) {\r\n        this.x = other._x;\r\n        this.y = other._y;\r\n        this.z = other._z;\r\n        this.w = other._w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates the current quaternion with the given float coordinates\r\n     * @param x defines the x coordinate\r\n     * @param y defines the y coordinate\r\n     * @param z defines the z coordinate\r\n     * @param w defines the w coordinate\r\n     * @returns the updated current quaternion\r\n     */\r\n    Quaternion.prototype.copyFromFloats = function (x, y, z, w) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates the current quaternion from the given float coordinates\r\n     * @param x defines the x coordinate\r\n     * @param y defines the y coordinate\r\n     * @param z defines the z coordinate\r\n     * @param w defines the w coordinate\r\n     * @returns the updated current quaternion\r\n     */\r\n    Quaternion.prototype.set = function (x, y, z, w) {\r\n        return this.copyFromFloats(x, y, z, w);\r\n    };\r\n    /**\r\n     * Adds two quaternions\r\n     * @param other defines the second operand\r\n     * @returns a new quaternion as the addition result of the given one and the current quaternion\r\n     */\r\n    Quaternion.prototype.add = function (other) {\r\n        return new Quaternion(this._x + other._x, this._y + other._y, this._z + other._z, this._w + other._w);\r\n    };\r\n    /**\r\n     * Add a quaternion to the current one\r\n     * @param other defines the quaternion to add\r\n     * @returns the current quaternion\r\n     */\r\n    Quaternion.prototype.addInPlace = function (other) {\r\n        this._x += other._x;\r\n        this._y += other._y;\r\n        this._z += other._z;\r\n        this._w += other._w;\r\n        return this;\r\n    };\r\n    /**\r\n     * Subtract two quaternions\r\n     * @param other defines the second operand\r\n     * @returns a new quaternion as the subtraction result of the given one from the current one\r\n     */\r\n    Quaternion.prototype.subtract = function (other) {\r\n        return new Quaternion(this._x - other._x, this._y - other._y, this._z - other._z, this._w - other._w);\r\n    };\r\n    /**\r\n     * Multiplies the current quaternion by a scale factor\r\n     * @param value defines the scale factor\r\n     * @returns a new quaternion set by multiplying the current quaternion coordinates by the float \"scale\"\r\n     */\r\n    Quaternion.prototype.scale = function (value) {\r\n        return new Quaternion(this._x * value, this._y * value, this._z * value, this._w * value);\r\n    };\r\n    /**\r\n     * Scale the current quaternion values by a factor and stores the result to a given quaternion\r\n     * @param scale defines the scale factor\r\n     * @param result defines the Quaternion object where to store the result\r\n     * @returns the unmodified current quaternion\r\n     */\r\n    Quaternion.prototype.scaleToRef = function (scale, result) {\r\n        result.x = this._x * scale;\r\n        result.y = this._y * scale;\r\n        result.z = this._z * scale;\r\n        result.w = this._w * scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Multiplies in place the current quaternion by a scale factor\r\n     * @param value defines the scale factor\r\n     * @returns the current modified quaternion\r\n     */\r\n    Quaternion.prototype.scaleInPlace = function (value) {\r\n        this.x *= value;\r\n        this.y *= value;\r\n        this.z *= value;\r\n        this.w *= value;\r\n        return this;\r\n    };\r\n    /**\r\n     * Scale the current quaternion values by a factor and add the result to a given quaternion\r\n     * @param scale defines the scale factor\r\n     * @param result defines the Quaternion object where to store the result\r\n     * @returns the unmodified current quaternion\r\n     */\r\n    Quaternion.prototype.scaleAndAddToRef = function (scale, result) {\r\n        result.x += this._x * scale;\r\n        result.y += this._y * scale;\r\n        result.z += this._z * scale;\r\n        result.w += this._w * scale;\r\n        return this;\r\n    };\r\n    /**\r\n     * Multiplies two quaternions\r\n     * @param q1 defines the second operand\r\n     * @returns a new quaternion set as the multiplication result of the current one with the given one \"q1\"\r\n     */\r\n    Quaternion.prototype.multiply = function (q1) {\r\n        var result = new Quaternion(0, 0, 0, 1.0);\r\n        this.multiplyToRef(q1, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the given \"result\" as the the multiplication result of the current one with the given one \"q1\"\r\n     * @param q1 defines the second operand\r\n     * @param result defines the target quaternion\r\n     * @returns the current quaternion\r\n     */\r\n    Quaternion.prototype.multiplyToRef = function (q1, result) {\r\n        var x = this._x * q1._w + this._y * q1._z - this._z * q1._y + this._w * q1._x;\r\n        var y = -this._x * q1._z + this._y * q1._w + this._z * q1._x + this._w * q1._y;\r\n        var z = this._x * q1._y - this._y * q1._x + this._z * q1._w + this._w * q1._z;\r\n        var w = -this._x * q1._x - this._y * q1._y - this._z * q1._z + this._w * q1._w;\r\n        result.copyFromFloats(x, y, z, w);\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates the current quaternion with the multiplication of itself with the given one \"q1\"\r\n     * @param q1 defines the second operand\r\n     * @returns the currentupdated quaternion\r\n     */\r\n    Quaternion.prototype.multiplyInPlace = function (q1) {\r\n        this.multiplyToRef(q1, this);\r\n        return this;\r\n    };\r\n    /**\r\n     * Conjugates (1-q) the current quaternion and stores the result in the given quaternion\r\n     * @param ref defines the target quaternion\r\n     * @returns the current quaternion\r\n     */\r\n    Quaternion.prototype.conjugateToRef = function (ref) {\r\n        ref.copyFromFloats(-this._x, -this._y, -this._z, this._w);\r\n        return this;\r\n    };\r\n    /**\r\n     * Conjugates in place (1-q) the current quaternion\r\n     * @returns the current updated quaternion\r\n     */\r\n    Quaternion.prototype.conjugateInPlace = function () {\r\n        this.x *= -1;\r\n        this.y *= -1;\r\n        this.z *= -1;\r\n        return this;\r\n    };\r\n    /**\r\n     * Conjugates in place (1-q) the current quaternion\r\n     * @returns a new quaternion\r\n     */\r\n    Quaternion.prototype.conjugate = function () {\r\n        var result = new Quaternion(-this._x, -this._y, -this._z, this._w);\r\n        return result;\r\n    };\r\n    /**\r\n     * Gets length of current quaternion\r\n     * @returns the quaternion length (float)\r\n     */\r\n    Quaternion.prototype.length = function () {\r\n        return Math.sqrt((this._x * this._x) + (this._y * this._y) + (this._z * this._z) + (this._w * this._w));\r\n    };\r\n    /**\r\n     * Normalize in place the current quaternion\r\n     * @returns the current updated quaternion\r\n     */\r\n    Quaternion.prototype.normalize = function () {\r\n        var len = this.length();\r\n        if (len === 0) {\r\n            return this;\r\n        }\r\n        var inv = 1.0 / len;\r\n        this.x *= inv;\r\n        this.y *= inv;\r\n        this.z *= inv;\r\n        this.w *= inv;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Vector3 set with the Euler angles translated from the current quaternion\r\n     * @param order is a reserved parameter and is ignored for now\r\n     * @returns a new Vector3 containing the Euler angles\r\n     */\r\n    Quaternion.prototype.toEulerAngles = function (order) {\r\n        if (order === void 0) { order = \"YZX\"; }\r\n        var result = Vector3.Zero();\r\n        this.toEulerAnglesToRef(result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the given vector3 \"result\" with the Euler angles translated from the current quaternion\r\n     * @param result defines the vector which will be filled with the Euler angles\r\n     * @returns the current unchanged quaternion\r\n     */\r\n    Quaternion.prototype.toEulerAnglesToRef = function (result) {\r\n        var qz = this._z;\r\n        var qx = this._x;\r\n        var qy = this._y;\r\n        var qw = this._w;\r\n        var sqw = qw * qw;\r\n        var sqz = qz * qz;\r\n        var sqx = qx * qx;\r\n        var sqy = qy * qy;\r\n        var zAxisY = qy * qz - qx * qw;\r\n        var limit = .4999999;\r\n        if (zAxisY < -limit) {\r\n            result.y = 2 * Math.atan2(qy, qw);\r\n            result.x = Math.PI / 2;\r\n            result.z = 0;\r\n        }\r\n        else if (zAxisY > limit) {\r\n            result.y = 2 * Math.atan2(qy, qw);\r\n            result.x = -Math.PI / 2;\r\n            result.z = 0;\r\n        }\r\n        else {\r\n            result.z = Math.atan2(2.0 * (qx * qy + qz * qw), (-sqz - sqx + sqy + sqw));\r\n            result.x = Math.asin(-2.0 * (qz * qy - qx * qw));\r\n            result.y = Math.atan2(2.0 * (qz * qx + qy * qw), (sqz - sqx - sqy + sqw));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates the given rotation matrix with the current quaternion values\r\n     * @param result defines the target matrix\r\n     * @returns the current unchanged quaternion\r\n     */\r\n    Quaternion.prototype.toRotationMatrix = function (result) {\r\n        Matrix.FromQuaternionToRef(this, result);\r\n        return this;\r\n    };\r\n    /**\r\n     * Updates the current quaternion from the given rotation matrix values\r\n     * @param matrix defines the source matrix\r\n     * @returns the current updated quaternion\r\n     */\r\n    Quaternion.prototype.fromRotationMatrix = function (matrix) {\r\n        Quaternion.FromRotationMatrixToRef(matrix, this);\r\n        return this;\r\n    };\r\n    // Statics\r\n    /**\r\n     * Creates a new quaternion from a rotation matrix\r\n     * @param matrix defines the source matrix\r\n     * @returns a new quaternion created from the given rotation matrix values\r\n     */\r\n    Quaternion.FromRotationMatrix = function (matrix) {\r\n        var result = new Quaternion();\r\n        Quaternion.FromRotationMatrixToRef(matrix, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Updates the given quaternion with the given rotation matrix values\r\n     * @param matrix defines the source matrix\r\n     * @param result defines the target quaternion\r\n     */\r\n    Quaternion.FromRotationMatrixToRef = function (matrix, result) {\r\n        var data = matrix.m;\r\n        var m11 = data[0], m12 = data[4], m13 = data[8];\r\n        var m21 = data[1], m22 = data[5], m23 = data[9];\r\n        var m31 = data[2], m32 = data[6], m33 = data[10];\r\n        var trace = m11 + m22 + m33;\r\n        var s;\r\n        if (trace > 0) {\r\n            s = 0.5 / Math.sqrt(trace + 1.0);\r\n            result.w = 0.25 / s;\r\n            result.x = (m32 - m23) * s;\r\n            result.y = (m13 - m31) * s;\r\n            result.z = (m21 - m12) * s;\r\n        }\r\n        else if (m11 > m22 && m11 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n            result.w = (m32 - m23) / s;\r\n            result.x = 0.25 * s;\r\n            result.y = (m12 + m21) / s;\r\n            result.z = (m13 + m31) / s;\r\n        }\r\n        else if (m22 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n            result.w = (m13 - m31) / s;\r\n            result.x = (m12 + m21) / s;\r\n            result.y = 0.25 * s;\r\n            result.z = (m23 + m32) / s;\r\n        }\r\n        else {\r\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n            result.w = (m21 - m12) / s;\r\n            result.x = (m13 + m31) / s;\r\n            result.y = (m23 + m32) / s;\r\n            result.z = 0.25 * s;\r\n        }\r\n    };\r\n    /**\r\n     * Returns the dot product (float) between the quaternions \"left\" and \"right\"\r\n     * @param left defines the left operand\r\n     * @param right defines the right operand\r\n     * @returns the dot product\r\n     */\r\n    Quaternion.Dot = function (left, right) {\r\n        return (left._x * right._x + left._y * right._y + left._z * right._z + left._w * right._w);\r\n    };\r\n    /**\r\n     * Checks if the two quaternions are close to each other\r\n     * @param quat0 defines the first quaternion to check\r\n     * @param quat1 defines the second quaternion to check\r\n     * @returns true if the two quaternions are close to each other\r\n     */\r\n    Quaternion.AreClose = function (quat0, quat1) {\r\n        var dot = Quaternion.Dot(quat0, quat1);\r\n        return dot >= 0;\r\n    };\r\n    /**\r\n     * Creates an empty quaternion\r\n     * @returns a new quaternion set to (0.0, 0.0, 0.0)\r\n     */\r\n    Quaternion.Zero = function () {\r\n        return new Quaternion(0.0, 0.0, 0.0, 0.0);\r\n    };\r\n    /**\r\n     * Inverse a given quaternion\r\n     * @param q defines the source quaternion\r\n     * @returns a new quaternion as the inverted current quaternion\r\n     */\r\n    Quaternion.Inverse = function (q) {\r\n        return new Quaternion(-q._x, -q._y, -q._z, q._w);\r\n    };\r\n    /**\r\n     * Inverse a given quaternion\r\n     * @param q defines the source quaternion\r\n     * @param result the quaternion the result will be stored in\r\n     * @returns the result quaternion\r\n     */\r\n    Quaternion.InverseToRef = function (q, result) {\r\n        result.set(-q._x, -q._y, -q._z, q._w);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates an identity quaternion\r\n     * @returns the identity quaternion\r\n     */\r\n    Quaternion.Identity = function () {\r\n        return new Quaternion(0.0, 0.0, 0.0, 1.0);\r\n    };\r\n    /**\r\n     * Gets a boolean indicating if the given quaternion is identity\r\n     * @param quaternion defines the quaternion to check\r\n     * @returns true if the quaternion is identity\r\n     */\r\n    Quaternion.IsIdentity = function (quaternion) {\r\n        return quaternion && quaternion._x === 0 && quaternion._y === 0 && quaternion._z === 0 && quaternion._w === 1;\r\n    };\r\n    /**\r\n     * Creates a quaternion from a rotation around an axis\r\n     * @param axis defines the axis to use\r\n     * @param angle defines the angle to use\r\n     * @returns a new quaternion created from the given axis (Vector3) and angle in radians (float)\r\n     */\r\n    Quaternion.RotationAxis = function (axis, angle) {\r\n        return Quaternion.RotationAxisToRef(axis, angle, new Quaternion());\r\n    };\r\n    /**\r\n     * Creates a rotation around an axis and stores it into the given quaternion\r\n     * @param axis defines the axis to use\r\n     * @param angle defines the angle to use\r\n     * @param result defines the target quaternion\r\n     * @returns the target quaternion\r\n     */\r\n    Quaternion.RotationAxisToRef = function (axis, angle, result) {\r\n        var sin = Math.sin(angle / 2);\r\n        axis.normalize();\r\n        result.w = Math.cos(angle / 2);\r\n        result.x = axis._x * sin;\r\n        result.y = axis._y * sin;\r\n        result.z = axis._z * sin;\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new quaternion from data stored into an array\r\n     * @param array defines the data source\r\n     * @param offset defines the offset in the source array where the data starts\r\n     * @returns a new quaternion\r\n     */\r\n    Quaternion.FromArray = function (array, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        return new Quaternion(array[offset], array[offset + 1], array[offset + 2], array[offset + 3]);\r\n    };\r\n    /**\r\n     * Updates the given quaternion \"result\" from the starting index of the given array.\r\n     * @param array the array to pull values from\r\n     * @param offset the offset into the array to start at\r\n     * @param result the quaternion to store the result in\r\n     */\r\n    Quaternion.FromArrayToRef = function (array, offset, result) {\r\n        result.x = array[offset];\r\n        result.y = array[offset + 1];\r\n        result.z = array[offset + 2];\r\n        result.w = array[offset + 3];\r\n    };\r\n    /**\r\n     * Create a quaternion from Euler rotation angles\r\n     * @param x Pitch\r\n     * @param y Yaw\r\n     * @param z Roll\r\n     * @returns the new Quaternion\r\n     */\r\n    Quaternion.FromEulerAngles = function (x, y, z) {\r\n        var q = new Quaternion();\r\n        Quaternion.RotationYawPitchRollToRef(y, x, z, q);\r\n        return q;\r\n    };\r\n    /**\r\n     * Updates a quaternion from Euler rotation angles\r\n     * @param x Pitch\r\n     * @param y Yaw\r\n     * @param z Roll\r\n     * @param result the quaternion to store the result\r\n     * @returns the updated quaternion\r\n     */\r\n    Quaternion.FromEulerAnglesToRef = function (x, y, z, result) {\r\n        Quaternion.RotationYawPitchRollToRef(y, x, z, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Create a quaternion from Euler rotation vector\r\n     * @param vec the Euler vector (x Pitch, y Yaw, z Roll)\r\n     * @returns the new Quaternion\r\n     */\r\n    Quaternion.FromEulerVector = function (vec) {\r\n        var q = new Quaternion();\r\n        Quaternion.RotationYawPitchRollToRef(vec._y, vec._x, vec._z, q);\r\n        return q;\r\n    };\r\n    /**\r\n     * Updates a quaternion from Euler rotation vector\r\n     * @param vec the Euler vector (x Pitch, y Yaw, z Roll)\r\n     * @param result the quaternion to store the result\r\n     * @returns the updated quaternion\r\n     */\r\n    Quaternion.FromEulerVectorToRef = function (vec, result) {\r\n        Quaternion.RotationYawPitchRollToRef(vec._y, vec._x, vec._z, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new quaternion from the given Euler float angles (y, x, z)\r\n     * @param yaw defines the rotation around Y axis\r\n     * @param pitch defines the rotation around X axis\r\n     * @param roll defines the rotation around Z axis\r\n     * @returns the new quaternion\r\n     */\r\n    Quaternion.RotationYawPitchRoll = function (yaw, pitch, roll) {\r\n        var q = new Quaternion();\r\n        Quaternion.RotationYawPitchRollToRef(yaw, pitch, roll, q);\r\n        return q;\r\n    };\r\n    /**\r\n     * Creates a new rotation from the given Euler float angles (y, x, z) and stores it in the target quaternion\r\n     * @param yaw defines the rotation around Y axis\r\n     * @param pitch defines the rotation around X axis\r\n     * @param roll defines the rotation around Z axis\r\n     * @param result defines the target quaternion\r\n     */\r\n    Quaternion.RotationYawPitchRollToRef = function (yaw, pitch, roll, result) {\r\n        // Produces a quaternion from Euler angles in the z-y-x orientation (Tait-Bryan angles)\r\n        var halfRoll = roll * 0.5;\r\n        var halfPitch = pitch * 0.5;\r\n        var halfYaw = yaw * 0.5;\r\n        var sinRoll = Math.sin(halfRoll);\r\n        var cosRoll = Math.cos(halfRoll);\r\n        var sinPitch = Math.sin(halfPitch);\r\n        var cosPitch = Math.cos(halfPitch);\r\n        var sinYaw = Math.sin(halfYaw);\r\n        var cosYaw = Math.cos(halfYaw);\r\n        result.x = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\r\n        result.y = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\r\n        result.z = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\r\n        result.w = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\r\n    };\r\n    /**\r\n     * Creates a new quaternion from the given Euler float angles expressed in z-x-z orientation\r\n     * @param alpha defines the rotation around first axis\r\n     * @param beta defines the rotation around second axis\r\n     * @param gamma defines the rotation around third axis\r\n     * @returns the new quaternion\r\n     */\r\n    Quaternion.RotationAlphaBetaGamma = function (alpha, beta, gamma) {\r\n        var result = new Quaternion();\r\n        Quaternion.RotationAlphaBetaGammaToRef(alpha, beta, gamma, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new quaternion from the given Euler float angles expressed in z-x-z orientation and stores it in the target quaternion\r\n     * @param alpha defines the rotation around first axis\r\n     * @param beta defines the rotation around second axis\r\n     * @param gamma defines the rotation around third axis\r\n     * @param result defines the target quaternion\r\n     */\r\n    Quaternion.RotationAlphaBetaGammaToRef = function (alpha, beta, gamma, result) {\r\n        // Produces a quaternion from Euler angles in the z-x-z orientation\r\n        var halfGammaPlusAlpha = (gamma + alpha) * 0.5;\r\n        var halfGammaMinusAlpha = (gamma - alpha) * 0.5;\r\n        var halfBeta = beta * 0.5;\r\n        result.x = Math.cos(halfGammaMinusAlpha) * Math.sin(halfBeta);\r\n        result.y = Math.sin(halfGammaMinusAlpha) * Math.sin(halfBeta);\r\n        result.z = Math.sin(halfGammaPlusAlpha) * Math.cos(halfBeta);\r\n        result.w = Math.cos(halfGammaPlusAlpha) * Math.cos(halfBeta);\r\n    };\r\n    /**\r\n     * Creates a new quaternion containing the rotation value to reach the target (axis1, axis2, axis3) orientation as a rotated XYZ system (axis1, axis2 and axis3 are normalized during this operation)\r\n     * @param axis1 defines the first axis\r\n     * @param axis2 defines the second axis\r\n     * @param axis3 defines the third axis\r\n     * @returns the new quaternion\r\n     */\r\n    Quaternion.RotationQuaternionFromAxis = function (axis1, axis2, axis3) {\r\n        var quat = new Quaternion(0.0, 0.0, 0.0, 0.0);\r\n        Quaternion.RotationQuaternionFromAxisToRef(axis1, axis2, axis3, quat);\r\n        return quat;\r\n    };\r\n    /**\r\n     * Creates a rotation value to reach the target (axis1, axis2, axis3) orientation as a rotated XYZ system (axis1, axis2 and axis3 are normalized during this operation) and stores it in the target quaternion\r\n     * @param axis1 defines the first axis\r\n     * @param axis2 defines the second axis\r\n     * @param axis3 defines the third axis\r\n     * @param ref defines the target quaternion\r\n     */\r\n    Quaternion.RotationQuaternionFromAxisToRef = function (axis1, axis2, axis3, ref) {\r\n        var rotMat = MathTmp.Matrix[0];\r\n        Matrix.FromXYZAxesToRef(axis1.normalize(), axis2.normalize(), axis3.normalize(), rotMat);\r\n        Quaternion.FromRotationMatrixToRef(rotMat, ref);\r\n    };\r\n    /**\r\n     * Interpolates between two quaternions\r\n     * @param left defines first quaternion\r\n     * @param right defines second quaternion\r\n     * @param amount defines the gradient to use\r\n     * @returns the new interpolated quaternion\r\n     */\r\n    Quaternion.Slerp = function (left, right, amount) {\r\n        var result = Quaternion.Identity();\r\n        Quaternion.SlerpToRef(left, right, amount, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Interpolates between two quaternions and stores it into a target quaternion\r\n     * @param left defines first quaternion\r\n     * @param right defines second quaternion\r\n     * @param amount defines the gradient to use\r\n     * @param result defines the target quaternion\r\n     */\r\n    Quaternion.SlerpToRef = function (left, right, amount, result) {\r\n        var num2;\r\n        var num3;\r\n        var num4 = (((left._x * right._x) + (left._y * right._y)) + (left._z * right._z)) + (left._w * right._w);\r\n        var flag = false;\r\n        if (num4 < 0) {\r\n            flag = true;\r\n            num4 = -num4;\r\n        }\r\n        if (num4 > 0.999999) {\r\n            num3 = 1 - amount;\r\n            num2 = flag ? -amount : amount;\r\n        }\r\n        else {\r\n            var num5 = Math.acos(num4);\r\n            var num6 = (1.0 / Math.sin(num5));\r\n            num3 = (Math.sin((1.0 - amount) * num5)) * num6;\r\n            num2 = flag ? ((-Math.sin(amount * num5)) * num6) : ((Math.sin(amount * num5)) * num6);\r\n        }\r\n        result.x = (num3 * left._x) + (num2 * right._x);\r\n        result.y = (num3 * left._y) + (num2 * right._y);\r\n        result.z = (num3 * left._z) + (num2 * right._z);\r\n        result.w = (num3 * left._w) + (num2 * right._w);\r\n    };\r\n    /**\r\n     * Interpolate between two quaternions using Hermite interpolation\r\n     * @param value1 defines first quaternion\r\n     * @param tangent1 defines the incoming tangent\r\n     * @param value2 defines second quaternion\r\n     * @param tangent2 defines the outgoing tangent\r\n     * @param amount defines the target quaternion\r\n     * @returns the new interpolated quaternion\r\n     */\r\n    Quaternion.Hermite = function (value1, tangent1, value2, tangent2, amount) {\r\n        var squared = amount * amount;\r\n        var cubed = amount * squared;\r\n        var part1 = ((2.0 * cubed) - (3.0 * squared)) + 1.0;\r\n        var part2 = (-2.0 * cubed) + (3.0 * squared);\r\n        var part3 = (cubed - (2.0 * squared)) + amount;\r\n        var part4 = cubed - squared;\r\n        var x = (((value1._x * part1) + (value2._x * part2)) + (tangent1._x * part3)) + (tangent2._x * part4);\r\n        var y = (((value1._y * part1) + (value2._y * part2)) + (tangent1._y * part3)) + (tangent2._y * part4);\r\n        var z = (((value1._z * part1) + (value2._z * part2)) + (tangent1._z * part3)) + (tangent2._z * part4);\r\n        var w = (((value1._w * part1) + (value2._w * part2)) + (tangent1._w * part3)) + (tangent2._w * part4);\r\n        return new Quaternion(x, y, z, w);\r\n    };\r\n    return Quaternion;\r\n}());\r\n\r\n/**\r\n * Class used to store matrix data (4x4)\r\n */\r\nvar Matrix = /** @class */ (function () {\r\n    /**\r\n     * Creates an empty matrix (filled with zeros)\r\n     */\r\n    function Matrix() {\r\n        this._isIdentity = false;\r\n        this._isIdentityDirty = true;\r\n        this._isIdentity3x2 = true;\r\n        this._isIdentity3x2Dirty = true;\r\n        /**\r\n         * Gets the update flag of the matrix which is an unique number for the matrix.\r\n         * It will be incremented every time the matrix data change.\r\n         * You can use it to speed the comparison between two versions of the same matrix.\r\n         */\r\n        this.updateFlag = -1;\r\n        if (_Engines_performanceConfigurator__WEBPACK_IMPORTED_MODULE_4__[/* PerformanceConfigurator */ \"a\"].MatrixTrackPrecisionChange) {\r\n            _Engines_performanceConfigurator__WEBPACK_IMPORTED_MODULE_4__[/* PerformanceConfigurator */ \"a\"].MatrixTrackedMatrices.push(this);\r\n        }\r\n        this._m = new _Engines_performanceConfigurator__WEBPACK_IMPORTED_MODULE_4__[/* PerformanceConfigurator */ \"a\"].MatrixCurrentType(16);\r\n        this._updateIdentityStatus(false);\r\n    }\r\n    Object.defineProperty(Matrix, \"Use64Bits\", {\r\n        /**\r\n         * Gets the precision of matrix computations\r\n         */\r\n        get: function () {\r\n            return _Engines_performanceConfigurator__WEBPACK_IMPORTED_MODULE_4__[/* PerformanceConfigurator */ \"a\"].MatrixUse64Bits;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Matrix.prototype, \"m\", {\r\n        /**\r\n         * Gets the internal data of the matrix\r\n         */\r\n        get: function () { return this._m; },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @hidden */\r\n    Matrix.prototype._markAsUpdated = function () {\r\n        this.updateFlag = Matrix._updateFlagSeed++;\r\n        this._isIdentity = false;\r\n        this._isIdentity3x2 = false;\r\n        this._isIdentityDirty = true;\r\n        this._isIdentity3x2Dirty = true;\r\n    };\r\n    /** @hidden */\r\n    Matrix.prototype._updateIdentityStatus = function (isIdentity, isIdentityDirty, isIdentity3x2, isIdentity3x2Dirty) {\r\n        if (isIdentityDirty === void 0) { isIdentityDirty = false; }\r\n        if (isIdentity3x2 === void 0) { isIdentity3x2 = false; }\r\n        if (isIdentity3x2Dirty === void 0) { isIdentity3x2Dirty = true; }\r\n        this.updateFlag = Matrix._updateFlagSeed++;\r\n        this._isIdentity = isIdentity;\r\n        this._isIdentity3x2 = isIdentity || isIdentity3x2;\r\n        this._isIdentityDirty = this._isIdentity ? false : isIdentityDirty;\r\n        this._isIdentity3x2Dirty = this._isIdentity3x2 ? false : isIdentity3x2Dirty;\r\n    };\r\n    // Properties\r\n    /**\r\n     * Check if the current matrix is identity\r\n     * @returns true is the matrix is the identity matrix\r\n     */\r\n    Matrix.prototype.isIdentity = function () {\r\n        if (this._isIdentityDirty) {\r\n            this._isIdentityDirty = false;\r\n            var m = this._m;\r\n            this._isIdentity = (m[0] === 1.0 && m[1] === 0.0 && m[2] === 0.0 && m[3] === 0.0 &&\r\n                m[4] === 0.0 && m[5] === 1.0 && m[6] === 0.0 && m[7] === 0.0 &&\r\n                m[8] === 0.0 && m[9] === 0.0 && m[10] === 1.0 && m[11] === 0.0 &&\r\n                m[12] === 0.0 && m[13] === 0.0 && m[14] === 0.0 && m[15] === 1.0);\r\n        }\r\n        return this._isIdentity;\r\n    };\r\n    /**\r\n     * Check if the current matrix is identity as a texture matrix (3x2 store in 4x4)\r\n     * @returns true is the matrix is the identity matrix\r\n     */\r\n    Matrix.prototype.isIdentityAs3x2 = function () {\r\n        if (this._isIdentity3x2Dirty) {\r\n            this._isIdentity3x2Dirty = false;\r\n            if (this._m[0] !== 1.0 || this._m[5] !== 1.0 || this._m[15] !== 1.0) {\r\n                this._isIdentity3x2 = false;\r\n            }\r\n            else if (this._m[1] !== 0.0 || this._m[2] !== 0.0 || this._m[3] !== 0.0 ||\r\n                this._m[4] !== 0.0 || this._m[6] !== 0.0 || this._m[7] !== 0.0 ||\r\n                this._m[8] !== 0.0 || this._m[9] !== 0.0 || this._m[10] !== 0.0 || this._m[11] !== 0.0 ||\r\n                this._m[12] !== 0.0 || this._m[13] !== 0.0 || this._m[14] !== 0.0) {\r\n                this._isIdentity3x2 = false;\r\n            }\r\n            else {\r\n                this._isIdentity3x2 = true;\r\n            }\r\n        }\r\n        return this._isIdentity3x2;\r\n    };\r\n    /**\r\n     * Gets the determinant of the matrix\r\n     * @returns the matrix determinant\r\n     */\r\n    Matrix.prototype.determinant = function () {\r\n        if (this._isIdentity === true) {\r\n            return 1;\r\n        }\r\n        var m = this._m;\r\n        var m00 = m[0], m01 = m[1], m02 = m[2], m03 = m[3];\r\n        var m10 = m[4], m11 = m[5], m12 = m[6], m13 = m[7];\r\n        var m20 = m[8], m21 = m[9], m22 = m[10], m23 = m[11];\r\n        var m30 = m[12], m31 = m[13], m32 = m[14], m33 = m[15];\r\n        // https://en.wikipedia.org/wiki/Laplace_expansion\r\n        // to compute the deterrminant of a 4x4 Matrix we compute the cofactors of any row or column,\r\n        // then we multiply each Cofactor by its corresponding matrix value and sum them all to get the determinant\r\n        // Cofactor(i, j) = sign(i,j) * det(Minor(i, j))\r\n        // where\r\n        //  - sign(i,j) = (i+j) % 2 === 0 ? 1 : -1\r\n        //  - Minor(i, j) is the 3x3 matrix we get by removing row i and column j from current Matrix\r\n        //\r\n        // Here we do that for the 1st row.\r\n        var det_22_33 = m22 * m33 - m32 * m23;\r\n        var det_21_33 = m21 * m33 - m31 * m23;\r\n        var det_21_32 = m21 * m32 - m31 * m22;\r\n        var det_20_33 = m20 * m33 - m30 * m23;\r\n        var det_20_32 = m20 * m32 - m22 * m30;\r\n        var det_20_31 = m20 * m31 - m30 * m21;\r\n        var cofact_00 = +(m11 * det_22_33 - m12 * det_21_33 + m13 * det_21_32);\r\n        var cofact_01 = -(m10 * det_22_33 - m12 * det_20_33 + m13 * det_20_32);\r\n        var cofact_02 = +(m10 * det_21_33 - m11 * det_20_33 + m13 * det_20_31);\r\n        var cofact_03 = -(m10 * det_21_32 - m11 * det_20_32 + m12 * det_20_31);\r\n        return m00 * cofact_00 + m01 * cofact_01 + m02 * cofact_02 + m03 * cofact_03;\r\n    };\r\n    // Methods\r\n    /**\r\n     * Returns the matrix as a Float32Array or Array<number>\r\n     * @returns the matrix underlying array\r\n     */\r\n    Matrix.prototype.toArray = function () {\r\n        return this._m;\r\n    };\r\n    /**\r\n     * Returns the matrix as a Float32Array or Array<number>\r\n    * @returns the matrix underlying array.\r\n    */\r\n    Matrix.prototype.asArray = function () {\r\n        return this._m;\r\n    };\r\n    /**\r\n     * Inverts the current matrix in place\r\n     * @returns the current inverted matrix\r\n     */\r\n    Matrix.prototype.invert = function () {\r\n        this.invertToRef(this);\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets all the matrix elements to zero\r\n     * @returns the current matrix\r\n     */\r\n    Matrix.prototype.reset = function () {\r\n        Matrix.FromValuesToRef(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, this);\r\n        this._updateIdentityStatus(false);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds the current matrix with a second one\r\n     * @param other defines the matrix to add\r\n     * @returns a new matrix as the addition of the current matrix and the given one\r\n     */\r\n    Matrix.prototype.add = function (other) {\r\n        var result = new Matrix();\r\n        this.addToRef(other, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the given matrix \"result\" to the addition of the current matrix and the given one\r\n     * @param other defines the matrix to add\r\n     * @param result defines the target matrix\r\n     * @returns the current matrix\r\n     */\r\n    Matrix.prototype.addToRef = function (other, result) {\r\n        var m = this._m;\r\n        var resultM = result._m;\r\n        var otherM = other.m;\r\n        for (var index = 0; index < 16; index++) {\r\n            resultM[index] = m[index] + otherM[index];\r\n        }\r\n        result._markAsUpdated();\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds in place the given matrix to the current matrix\r\n     * @param other defines the second operand\r\n     * @returns the current updated matrix\r\n     */\r\n    Matrix.prototype.addToSelf = function (other) {\r\n        var m = this._m;\r\n        var otherM = other.m;\r\n        for (var index = 0; index < 16; index++) {\r\n            m[index] += otherM[index];\r\n        }\r\n        this._markAsUpdated();\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the given matrix to the current inverted Matrix\r\n     * @param other defines the target matrix\r\n     * @returns the unmodified current matrix\r\n     */\r\n    Matrix.prototype.invertToRef = function (other) {\r\n        if (this._isIdentity === true) {\r\n            Matrix.IdentityToRef(other);\r\n            return this;\r\n        }\r\n        // the inverse of a Matrix is the transpose of cofactor matrix divided by the determinant\r\n        var m = this._m;\r\n        var m00 = m[0], m01 = m[1], m02 = m[2], m03 = m[3];\r\n        var m10 = m[4], m11 = m[5], m12 = m[6], m13 = m[7];\r\n        var m20 = m[8], m21 = m[9], m22 = m[10], m23 = m[11];\r\n        var m30 = m[12], m31 = m[13], m32 = m[14], m33 = m[15];\r\n        var det_22_33 = m22 * m33 - m32 * m23;\r\n        var det_21_33 = m21 * m33 - m31 * m23;\r\n        var det_21_32 = m21 * m32 - m31 * m22;\r\n        var det_20_33 = m20 * m33 - m30 * m23;\r\n        var det_20_32 = m20 * m32 - m22 * m30;\r\n        var det_20_31 = m20 * m31 - m30 * m21;\r\n        var cofact_00 = +(m11 * det_22_33 - m12 * det_21_33 + m13 * det_21_32);\r\n        var cofact_01 = -(m10 * det_22_33 - m12 * det_20_33 + m13 * det_20_32);\r\n        var cofact_02 = +(m10 * det_21_33 - m11 * det_20_33 + m13 * det_20_31);\r\n        var cofact_03 = -(m10 * det_21_32 - m11 * det_20_32 + m12 * det_20_31);\r\n        var det = m00 * cofact_00 + m01 * cofact_01 + m02 * cofact_02 + m03 * cofact_03;\r\n        if (det === 0) {\r\n            // not invertible\r\n            other.copyFrom(this);\r\n            return this;\r\n        }\r\n        var detInv = 1 / det;\r\n        var det_12_33 = m12 * m33 - m32 * m13;\r\n        var det_11_33 = m11 * m33 - m31 * m13;\r\n        var det_11_32 = m11 * m32 - m31 * m12;\r\n        var det_10_33 = m10 * m33 - m30 * m13;\r\n        var det_10_32 = m10 * m32 - m30 * m12;\r\n        var det_10_31 = m10 * m31 - m30 * m11;\r\n        var det_12_23 = m12 * m23 - m22 * m13;\r\n        var det_11_23 = m11 * m23 - m21 * m13;\r\n        var det_11_22 = m11 * m22 - m21 * m12;\r\n        var det_10_23 = m10 * m23 - m20 * m13;\r\n        var det_10_22 = m10 * m22 - m20 * m12;\r\n        var det_10_21 = m10 * m21 - m20 * m11;\r\n        var cofact_10 = -(m01 * det_22_33 - m02 * det_21_33 + m03 * det_21_32);\r\n        var cofact_11 = +(m00 * det_22_33 - m02 * det_20_33 + m03 * det_20_32);\r\n        var cofact_12 = -(m00 * det_21_33 - m01 * det_20_33 + m03 * det_20_31);\r\n        var cofact_13 = +(m00 * det_21_32 - m01 * det_20_32 + m02 * det_20_31);\r\n        var cofact_20 = +(m01 * det_12_33 - m02 * det_11_33 + m03 * det_11_32);\r\n        var cofact_21 = -(m00 * det_12_33 - m02 * det_10_33 + m03 * det_10_32);\r\n        var cofact_22 = +(m00 * det_11_33 - m01 * det_10_33 + m03 * det_10_31);\r\n        var cofact_23 = -(m00 * det_11_32 - m01 * det_10_32 + m02 * det_10_31);\r\n        var cofact_30 = -(m01 * det_12_23 - m02 * det_11_23 + m03 * det_11_22);\r\n        var cofact_31 = +(m00 * det_12_23 - m02 * det_10_23 + m03 * det_10_22);\r\n        var cofact_32 = -(m00 * det_11_23 - m01 * det_10_23 + m03 * det_10_21);\r\n        var cofact_33 = +(m00 * det_11_22 - m01 * det_10_22 + m02 * det_10_21);\r\n        Matrix.FromValuesToRef(cofact_00 * detInv, cofact_10 * detInv, cofact_20 * detInv, cofact_30 * detInv, cofact_01 * detInv, cofact_11 * detInv, cofact_21 * detInv, cofact_31 * detInv, cofact_02 * detInv, cofact_12 * detInv, cofact_22 * detInv, cofact_32 * detInv, cofact_03 * detInv, cofact_13 * detInv, cofact_23 * detInv, cofact_33 * detInv, other);\r\n        return this;\r\n    };\r\n    /**\r\n     * add a value at the specified position in the current Matrix\r\n     * @param index the index of the value within the matrix. between 0 and 15.\r\n     * @param value the value to be added\r\n     * @returns the current updated matrix\r\n     */\r\n    Matrix.prototype.addAtIndex = function (index, value) {\r\n        this._m[index] += value;\r\n        this._markAsUpdated();\r\n        return this;\r\n    };\r\n    /**\r\n     * mutiply the specified position in the current Matrix by a value\r\n     * @param index the index of the value within the matrix. between 0 and 15.\r\n     * @param value the value to be added\r\n     * @returns the current updated matrix\r\n     */\r\n    Matrix.prototype.multiplyAtIndex = function (index, value) {\r\n        this._m[index] *= value;\r\n        this._markAsUpdated();\r\n        return this;\r\n    };\r\n    /**\r\n     * Inserts the translation vector (using 3 floats) in the current matrix\r\n     * @param x defines the 1st component of the translation\r\n     * @param y defines the 2nd component of the translation\r\n     * @param z defines the 3rd component of the translation\r\n     * @returns the current updated matrix\r\n     */\r\n    Matrix.prototype.setTranslationFromFloats = function (x, y, z) {\r\n        this._m[12] = x;\r\n        this._m[13] = y;\r\n        this._m[14] = z;\r\n        this._markAsUpdated();\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds the translation vector (using 3 floats) in the current matrix\r\n     * @param x defines the 1st component of the translation\r\n     * @param y defines the 2nd component of the translation\r\n     * @param z defines the 3rd component of the translation\r\n     * @returns the current updated matrix\r\n     */\r\n    Matrix.prototype.addTranslationFromFloats = function (x, y, z) {\r\n        this._m[12] += x;\r\n        this._m[13] += y;\r\n        this._m[14] += z;\r\n        this._markAsUpdated();\r\n        return this;\r\n    };\r\n    /**\r\n     * Inserts the translation vector in the current matrix\r\n     * @param vector3 defines the translation to insert\r\n     * @returns the current updated matrix\r\n     */\r\n    Matrix.prototype.setTranslation = function (vector3) {\r\n        return this.setTranslationFromFloats(vector3._x, vector3._y, vector3._z);\r\n    };\r\n    /**\r\n     * Gets the translation value of the current matrix\r\n     * @returns a new Vector3 as the extracted translation from the matrix\r\n     */\r\n    Matrix.prototype.getTranslation = function () {\r\n        return new Vector3(this._m[12], this._m[13], this._m[14]);\r\n    };\r\n    /**\r\n     * Fill a Vector3 with the extracted translation from the matrix\r\n     * @param result defines the Vector3 where to store the translation\r\n     * @returns the current matrix\r\n     */\r\n    Matrix.prototype.getTranslationToRef = function (result) {\r\n        result.x = this._m[12];\r\n        result.y = this._m[13];\r\n        result.z = this._m[14];\r\n        return this;\r\n    };\r\n    /**\r\n     * Remove rotation and scaling part from the matrix\r\n     * @returns the updated matrix\r\n     */\r\n    Matrix.prototype.removeRotationAndScaling = function () {\r\n        var m = this.m;\r\n        Matrix.FromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, m[12], m[13], m[14], m[15], this);\r\n        this._updateIdentityStatus(m[12] === 0 && m[13] === 0 && m[14] === 0 && m[15] === 1);\r\n        return this;\r\n    };\r\n    /**\r\n     * Multiply two matrices\r\n     * @param other defines the second operand\r\n     * @returns a new matrix set with the multiplication result of the current Matrix and the given one\r\n     */\r\n    Matrix.prototype.multiply = function (other) {\r\n        var result = new Matrix();\r\n        this.multiplyToRef(other, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Copy the current matrix from the given one\r\n     * @param other defines the source matrix\r\n     * @returns the current updated matrix\r\n     */\r\n    Matrix.prototype.copyFrom = function (other) {\r\n        other.copyToArray(this._m);\r\n        var o = other;\r\n        this._updateIdentityStatus(o._isIdentity, o._isIdentityDirty, o._isIdentity3x2, o._isIdentity3x2Dirty);\r\n        return this;\r\n    };\r\n    /**\r\n     * Populates the given array from the starting index with the current matrix values\r\n     * @param array defines the target array\r\n     * @param offset defines the offset in the target array where to start storing values\r\n     * @returns the current matrix\r\n     */\r\n    Matrix.prototype.copyToArray = function (array, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        var source = this._m;\r\n        array[offset] = source[0];\r\n        array[offset + 1] = source[1];\r\n        array[offset + 2] = source[2];\r\n        array[offset + 3] = source[3];\r\n        array[offset + 4] = source[4];\r\n        array[offset + 5] = source[5];\r\n        array[offset + 6] = source[6];\r\n        array[offset + 7] = source[7];\r\n        array[offset + 8] = source[8];\r\n        array[offset + 9] = source[9];\r\n        array[offset + 10] = source[10];\r\n        array[offset + 11] = source[11];\r\n        array[offset + 12] = source[12];\r\n        array[offset + 13] = source[13];\r\n        array[offset + 14] = source[14];\r\n        array[offset + 15] = source[15];\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the given matrix \"result\" with the multiplication result of the current Matrix and the given one\r\n     * @param other defines the second operand\r\n     * @param result defines the matrix where to store the multiplication\r\n     * @returns the current matrix\r\n     */\r\n    Matrix.prototype.multiplyToRef = function (other, result) {\r\n        if (this._isIdentity) {\r\n            result.copyFrom(other);\r\n            return this;\r\n        }\r\n        if (other._isIdentity) {\r\n            result.copyFrom(this);\r\n            return this;\r\n        }\r\n        this.multiplyToArray(other, result._m, 0);\r\n        result._markAsUpdated();\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the Float32Array \"result\" from the given index \"offset\" with the multiplication of the current matrix and the given one\r\n     * @param other defines the second operand\r\n     * @param result defines the array where to store the multiplication\r\n     * @param offset defines the offset in the target array where to start storing values\r\n     * @returns the current matrix\r\n     */\r\n    Matrix.prototype.multiplyToArray = function (other, result, offset) {\r\n        var m = this._m;\r\n        var otherM = other.m;\r\n        var tm0 = m[0], tm1 = m[1], tm2 = m[2], tm3 = m[3];\r\n        var tm4 = m[4], tm5 = m[5], tm6 = m[6], tm7 = m[7];\r\n        var tm8 = m[8], tm9 = m[9], tm10 = m[10], tm11 = m[11];\r\n        var tm12 = m[12], tm13 = m[13], tm14 = m[14], tm15 = m[15];\r\n        var om0 = otherM[0], om1 = otherM[1], om2 = otherM[2], om3 = otherM[3];\r\n        var om4 = otherM[4], om5 = otherM[5], om6 = otherM[6], om7 = otherM[7];\r\n        var om8 = otherM[8], om9 = otherM[9], om10 = otherM[10], om11 = otherM[11];\r\n        var om12 = otherM[12], om13 = otherM[13], om14 = otherM[14], om15 = otherM[15];\r\n        result[offset] = tm0 * om0 + tm1 * om4 + tm2 * om8 + tm3 * om12;\r\n        result[offset + 1] = tm0 * om1 + tm1 * om5 + tm2 * om9 + tm3 * om13;\r\n        result[offset + 2] = tm0 * om2 + tm1 * om6 + tm2 * om10 + tm3 * om14;\r\n        result[offset + 3] = tm0 * om3 + tm1 * om7 + tm2 * om11 + tm3 * om15;\r\n        result[offset + 4] = tm4 * om0 + tm5 * om4 + tm6 * om8 + tm7 * om12;\r\n        result[offset + 5] = tm4 * om1 + tm5 * om5 + tm6 * om9 + tm7 * om13;\r\n        result[offset + 6] = tm4 * om2 + tm5 * om6 + tm6 * om10 + tm7 * om14;\r\n        result[offset + 7] = tm4 * om3 + tm5 * om7 + tm6 * om11 + tm7 * om15;\r\n        result[offset + 8] = tm8 * om0 + tm9 * om4 + tm10 * om8 + tm11 * om12;\r\n        result[offset + 9] = tm8 * om1 + tm9 * om5 + tm10 * om9 + tm11 * om13;\r\n        result[offset + 10] = tm8 * om2 + tm9 * om6 + tm10 * om10 + tm11 * om14;\r\n        result[offset + 11] = tm8 * om3 + tm9 * om7 + tm10 * om11 + tm11 * om15;\r\n        result[offset + 12] = tm12 * om0 + tm13 * om4 + tm14 * om8 + tm15 * om12;\r\n        result[offset + 13] = tm12 * om1 + tm13 * om5 + tm14 * om9 + tm15 * om13;\r\n        result[offset + 14] = tm12 * om2 + tm13 * om6 + tm14 * om10 + tm15 * om14;\r\n        result[offset + 15] = tm12 * om3 + tm13 * om7 + tm14 * om11 + tm15 * om15;\r\n        return this;\r\n    };\r\n    /**\r\n     * Check equality between this matrix and a second one\r\n     * @param value defines the second matrix to compare\r\n     * @returns true is the current matrix and the given one values are strictly equal\r\n     */\r\n    Matrix.prototype.equals = function (value) {\r\n        var other = value;\r\n        if (!other) {\r\n            return false;\r\n        }\r\n        if (this._isIdentity || other._isIdentity) {\r\n            if (!this._isIdentityDirty && !other._isIdentityDirty) {\r\n                return this._isIdentity && other._isIdentity;\r\n            }\r\n        }\r\n        var m = this.m;\r\n        var om = other.m;\r\n        return (m[0] === om[0] && m[1] === om[1] && m[2] === om[2] && m[3] === om[3] &&\r\n            m[4] === om[4] && m[5] === om[5] && m[6] === om[6] && m[7] === om[7] &&\r\n            m[8] === om[8] && m[9] === om[9] && m[10] === om[10] && m[11] === om[11] &&\r\n            m[12] === om[12] && m[13] === om[13] && m[14] === om[14] && m[15] === om[15]);\r\n    };\r\n    /**\r\n     * Clone the current matrix\r\n     * @returns a new matrix from the current matrix\r\n     */\r\n    Matrix.prototype.clone = function () {\r\n        var matrix = new Matrix();\r\n        matrix.copyFrom(this);\r\n        return matrix;\r\n    };\r\n    /**\r\n     * Returns the name of the current matrix class\r\n     * @returns the string \"Matrix\"\r\n     */\r\n    Matrix.prototype.getClassName = function () {\r\n        return \"Matrix\";\r\n    };\r\n    /**\r\n     * Gets the hash code of the current matrix\r\n     * @returns the hash code\r\n     */\r\n    Matrix.prototype.getHashCode = function () {\r\n        var hash = this._m[0] | 0;\r\n        for (var i = 1; i < 16; i++) {\r\n            hash = (hash * 397) ^ (this._m[i] | 0);\r\n        }\r\n        return hash;\r\n    };\r\n    /**\r\n     * Decomposes the current Matrix into a translation, rotation and scaling components\r\n     * @param scale defines the scale vector3 given as a reference to update\r\n     * @param rotation defines the rotation quaternion given as a reference to update\r\n     * @param translation defines the translation vector3 given as a reference to update\r\n     * @returns true if operation was successful\r\n     */\r\n    Matrix.prototype.decompose = function (scale, rotation, translation) {\r\n        if (this._isIdentity) {\r\n            if (translation) {\r\n                translation.setAll(0);\r\n            }\r\n            if (scale) {\r\n                scale.setAll(1);\r\n            }\r\n            if (rotation) {\r\n                rotation.copyFromFloats(0, 0, 0, 1);\r\n            }\r\n            return true;\r\n        }\r\n        var m = this._m;\r\n        if (translation) {\r\n            translation.copyFromFloats(m[12], m[13], m[14]);\r\n        }\r\n        scale = scale || MathTmp.Vector3[0];\r\n        scale.x = Math.sqrt(m[0] * m[0] + m[1] * m[1] + m[2] * m[2]);\r\n        scale.y = Math.sqrt(m[4] * m[4] + m[5] * m[5] + m[6] * m[6]);\r\n        scale.z = Math.sqrt(m[8] * m[8] + m[9] * m[9] + m[10] * m[10]);\r\n        if (this.determinant() <= 0) {\r\n            scale.y *= -1;\r\n        }\r\n        if (scale._x === 0 || scale._y === 0 || scale._z === 0) {\r\n            if (rotation) {\r\n                rotation.copyFromFloats(0.0, 0.0, 0.0, 1.0);\r\n            }\r\n            return false;\r\n        }\r\n        if (rotation) {\r\n            var sx = 1 / scale._x, sy = 1 / scale._y, sz = 1 / scale._z;\r\n            Matrix.FromValuesToRef(m[0] * sx, m[1] * sx, m[2] * sx, 0.0, m[4] * sy, m[5] * sy, m[6] * sy, 0.0, m[8] * sz, m[9] * sz, m[10] * sz, 0.0, 0.0, 0.0, 0.0, 1.0, MathTmp.Matrix[0]);\r\n            Quaternion.FromRotationMatrixToRef(MathTmp.Matrix[0], rotation);\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Gets specific row of the matrix\r\n     * @param index defines the number of the row to get\r\n     * @returns the index-th row of the current matrix as a new Vector4\r\n     */\r\n    Matrix.prototype.getRow = function (index) {\r\n        if (index < 0 || index > 3) {\r\n            return null;\r\n        }\r\n        var i = index * 4;\r\n        return new Vector4(this._m[i + 0], this._m[i + 1], this._m[i + 2], this._m[i + 3]);\r\n    };\r\n    /**\r\n     * Sets the index-th row of the current matrix to the vector4 values\r\n     * @param index defines the number of the row to set\r\n     * @param row defines the target vector4\r\n     * @returns the updated current matrix\r\n     */\r\n    Matrix.prototype.setRow = function (index, row) {\r\n        return this.setRowFromFloats(index, row.x, row.y, row.z, row.w);\r\n    };\r\n    /**\r\n     * Compute the transpose of the matrix\r\n     * @returns the new transposed matrix\r\n     */\r\n    Matrix.prototype.transpose = function () {\r\n        return Matrix.Transpose(this);\r\n    };\r\n    /**\r\n     * Compute the transpose of the matrix and store it in a given matrix\r\n     * @param result defines the target matrix\r\n     * @returns the current matrix\r\n     */\r\n    Matrix.prototype.transposeToRef = function (result) {\r\n        Matrix.TransposeToRef(this, result);\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the index-th row of the current matrix with the given 4 x float values\r\n     * @param index defines the row index\r\n     * @param x defines the x component to set\r\n     * @param y defines the y component to set\r\n     * @param z defines the z component to set\r\n     * @param w defines the w component to set\r\n     * @returns the updated current matrix\r\n     */\r\n    Matrix.prototype.setRowFromFloats = function (index, x, y, z, w) {\r\n        if (index < 0 || index > 3) {\r\n            return this;\r\n        }\r\n        var i = index * 4;\r\n        this._m[i + 0] = x;\r\n        this._m[i + 1] = y;\r\n        this._m[i + 2] = z;\r\n        this._m[i + 3] = w;\r\n        this._markAsUpdated();\r\n        return this;\r\n    };\r\n    /**\r\n     * Compute a new matrix set with the current matrix values multiplied by scale (float)\r\n     * @param scale defines the scale factor\r\n     * @returns a new matrix\r\n     */\r\n    Matrix.prototype.scale = function (scale) {\r\n        var result = new Matrix();\r\n        this.scaleToRef(scale, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Scale the current matrix values by a factor to a given result matrix\r\n     * @param scale defines the scale factor\r\n     * @param result defines the matrix to store the result\r\n     * @returns the current matrix\r\n     */\r\n    Matrix.prototype.scaleToRef = function (scale, result) {\r\n        for (var index = 0; index < 16; index++) {\r\n            result._m[index] = this._m[index] * scale;\r\n        }\r\n        result._markAsUpdated();\r\n        return this;\r\n    };\r\n    /**\r\n     * Scale the current matrix values by a factor and add the result to a given matrix\r\n     * @param scale defines the scale factor\r\n     * @param result defines the Matrix to store the result\r\n     * @returns the current matrix\r\n     */\r\n    Matrix.prototype.scaleAndAddToRef = function (scale, result) {\r\n        for (var index = 0; index < 16; index++) {\r\n            result._m[index] += this._m[index] * scale;\r\n        }\r\n        result._markAsUpdated();\r\n        return this;\r\n    };\r\n    /**\r\n     * Writes to the given matrix a normal matrix, computed from this one (using values from identity matrix for fourth row and column).\r\n     * @param ref matrix to store the result\r\n     */\r\n    Matrix.prototype.toNormalMatrix = function (ref) {\r\n        var tmp = MathTmp.Matrix[0];\r\n        this.invertToRef(tmp);\r\n        tmp.transposeToRef(ref);\r\n        var m = ref._m;\r\n        Matrix.FromValuesToRef(m[0], m[1], m[2], 0.0, m[4], m[5], m[6], 0.0, m[8], m[9], m[10], 0.0, 0.0, 0.0, 0.0, 1.0, ref);\r\n    };\r\n    /**\r\n     * Gets only rotation part of the current matrix\r\n     * @returns a new matrix sets to the extracted rotation matrix from the current one\r\n     */\r\n    Matrix.prototype.getRotationMatrix = function () {\r\n        var result = new Matrix();\r\n        this.getRotationMatrixToRef(result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Extracts the rotation matrix from the current one and sets it as the given \"result\"\r\n     * @param result defines the target matrix to store data to\r\n     * @returns the current matrix\r\n     */\r\n    Matrix.prototype.getRotationMatrixToRef = function (result) {\r\n        var scale = MathTmp.Vector3[0];\r\n        if (!this.decompose(scale)) {\r\n            Matrix.IdentityToRef(result);\r\n            return this;\r\n        }\r\n        var m = this._m;\r\n        var sx = 1 / scale._x, sy = 1 / scale._y, sz = 1 / scale._z;\r\n        Matrix.FromValuesToRef(m[0] * sx, m[1] * sx, m[2] * sx, 0.0, m[4] * sy, m[5] * sy, m[6] * sy, 0.0, m[8] * sz, m[9] * sz, m[10] * sz, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n        return this;\r\n    };\r\n    /**\r\n     * Toggles model matrix from being right handed to left handed in place and vice versa\r\n     */\r\n    Matrix.prototype.toggleModelMatrixHandInPlace = function () {\r\n        var m = this._m;\r\n        m[2] *= -1;\r\n        m[6] *= -1;\r\n        m[8] *= -1;\r\n        m[9] *= -1;\r\n        m[14] *= -1;\r\n        this._markAsUpdated();\r\n    };\r\n    /**\r\n     * Toggles projection matrix from being right handed to left handed in place and vice versa\r\n     */\r\n    Matrix.prototype.toggleProjectionMatrixHandInPlace = function () {\r\n        var m = this._m;\r\n        m[8] *= -1;\r\n        m[9] *= -1;\r\n        m[10] *= -1;\r\n        m[11] *= -1;\r\n        this._markAsUpdated();\r\n    };\r\n    // Statics\r\n    /**\r\n     * Creates a matrix from an array\r\n     * @param array defines the source array\r\n     * @param offset defines an offset in the source array\r\n     * @returns a new Matrix set from the starting index of the given array\r\n     */\r\n    Matrix.FromArray = function (array, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        var result = new Matrix();\r\n        Matrix.FromArrayToRef(array, offset, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Copy the content of an array into a given matrix\r\n     * @param array defines the source array\r\n     * @param offset defines an offset in the source array\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.FromArrayToRef = function (array, offset, result) {\r\n        for (var index = 0; index < 16; index++) {\r\n            result._m[index] = array[index + offset];\r\n        }\r\n        result._markAsUpdated();\r\n    };\r\n    /**\r\n     * Stores an array into a matrix after having multiplied each component by a given factor\r\n     * @param array defines the source array\r\n     * @param offset defines the offset in the source array\r\n     * @param scale defines the scaling factor\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.FromFloat32ArrayToRefScaled = function (array, offset, scale, result) {\r\n        for (var index = 0; index < 16; index++) {\r\n            result._m[index] = array[index + offset] * scale;\r\n        }\r\n        result._markAsUpdated();\r\n    };\r\n    Object.defineProperty(Matrix, \"IdentityReadOnly\", {\r\n        /**\r\n         * Gets an identity matrix that must not be updated\r\n         */\r\n        get: function () {\r\n            return Matrix._identityReadOnly;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Stores a list of values (16) inside a given matrix\r\n     * @param initialM11 defines 1st value of 1st row\r\n     * @param initialM12 defines 2nd value of 1st row\r\n     * @param initialM13 defines 3rd value of 1st row\r\n     * @param initialM14 defines 4th value of 1st row\r\n     * @param initialM21 defines 1st value of 2nd row\r\n     * @param initialM22 defines 2nd value of 2nd row\r\n     * @param initialM23 defines 3rd value of 2nd row\r\n     * @param initialM24 defines 4th value of 2nd row\r\n     * @param initialM31 defines 1st value of 3rd row\r\n     * @param initialM32 defines 2nd value of 3rd row\r\n     * @param initialM33 defines 3rd value of 3rd row\r\n     * @param initialM34 defines 4th value of 3rd row\r\n     * @param initialM41 defines 1st value of 4th row\r\n     * @param initialM42 defines 2nd value of 4th row\r\n     * @param initialM43 defines 3rd value of 4th row\r\n     * @param initialM44 defines 4th value of 4th row\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.FromValuesToRef = function (initialM11, initialM12, initialM13, initialM14, initialM21, initialM22, initialM23, initialM24, initialM31, initialM32, initialM33, initialM34, initialM41, initialM42, initialM43, initialM44, result) {\r\n        var m = result._m;\r\n        m[0] = initialM11;\r\n        m[1] = initialM12;\r\n        m[2] = initialM13;\r\n        m[3] = initialM14;\r\n        m[4] = initialM21;\r\n        m[5] = initialM22;\r\n        m[6] = initialM23;\r\n        m[7] = initialM24;\r\n        m[8] = initialM31;\r\n        m[9] = initialM32;\r\n        m[10] = initialM33;\r\n        m[11] = initialM34;\r\n        m[12] = initialM41;\r\n        m[13] = initialM42;\r\n        m[14] = initialM43;\r\n        m[15] = initialM44;\r\n        result._markAsUpdated();\r\n    };\r\n    /**\r\n     * Creates new matrix from a list of values (16)\r\n     * @param initialM11 defines 1st value of 1st row\r\n     * @param initialM12 defines 2nd value of 1st row\r\n     * @param initialM13 defines 3rd value of 1st row\r\n     * @param initialM14 defines 4th value of 1st row\r\n     * @param initialM21 defines 1st value of 2nd row\r\n     * @param initialM22 defines 2nd value of 2nd row\r\n     * @param initialM23 defines 3rd value of 2nd row\r\n     * @param initialM24 defines 4th value of 2nd row\r\n     * @param initialM31 defines 1st value of 3rd row\r\n     * @param initialM32 defines 2nd value of 3rd row\r\n     * @param initialM33 defines 3rd value of 3rd row\r\n     * @param initialM34 defines 4th value of 3rd row\r\n     * @param initialM41 defines 1st value of 4th row\r\n     * @param initialM42 defines 2nd value of 4th row\r\n     * @param initialM43 defines 3rd value of 4th row\r\n     * @param initialM44 defines 4th value of 4th row\r\n     * @returns the new matrix\r\n     */\r\n    Matrix.FromValues = function (initialM11, initialM12, initialM13, initialM14, initialM21, initialM22, initialM23, initialM24, initialM31, initialM32, initialM33, initialM34, initialM41, initialM42, initialM43, initialM44) {\r\n        var result = new Matrix();\r\n        var m = result._m;\r\n        m[0] = initialM11;\r\n        m[1] = initialM12;\r\n        m[2] = initialM13;\r\n        m[3] = initialM14;\r\n        m[4] = initialM21;\r\n        m[5] = initialM22;\r\n        m[6] = initialM23;\r\n        m[7] = initialM24;\r\n        m[8] = initialM31;\r\n        m[9] = initialM32;\r\n        m[10] = initialM33;\r\n        m[11] = initialM34;\r\n        m[12] = initialM41;\r\n        m[13] = initialM42;\r\n        m[14] = initialM43;\r\n        m[15] = initialM44;\r\n        result._markAsUpdated();\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new matrix composed by merging scale (vector3), rotation (quaternion) and translation (vector3)\r\n     * @param scale defines the scale vector3\r\n     * @param rotation defines the rotation quaternion\r\n     * @param translation defines the translation vector3\r\n     * @returns a new matrix\r\n     */\r\n    Matrix.Compose = function (scale, rotation, translation) {\r\n        var result = new Matrix();\r\n        Matrix.ComposeToRef(scale, rotation, translation, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets a matrix to a value composed by merging scale (vector3), rotation (quaternion) and translation (vector3)\r\n     * @param scale defines the scale vector3\r\n     * @param rotation defines the rotation quaternion\r\n     * @param translation defines the translation vector3\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.ComposeToRef = function (scale, rotation, translation, result) {\r\n        var m = result._m;\r\n        var x = rotation._x, y = rotation._y, z = rotation._z, w = rotation._w;\r\n        var x2 = x + x, y2 = y + y, z2 = z + z;\r\n        var xx = x * x2, xy = x * y2, xz = x * z2;\r\n        var yy = y * y2, yz = y * z2, zz = z * z2;\r\n        var wx = w * x2, wy = w * y2, wz = w * z2;\r\n        var sx = scale._x, sy = scale._y, sz = scale._z;\r\n        m[0] = (1 - (yy + zz)) * sx;\r\n        m[1] = (xy + wz) * sx;\r\n        m[2] = (xz - wy) * sx;\r\n        m[3] = 0;\r\n        m[4] = (xy - wz) * sy;\r\n        m[5] = (1 - (xx + zz)) * sy;\r\n        m[6] = (yz + wx) * sy;\r\n        m[7] = 0;\r\n        m[8] = (xz + wy) * sz;\r\n        m[9] = (yz - wx) * sz;\r\n        m[10] = (1 - (xx + yy)) * sz;\r\n        m[11] = 0;\r\n        m[12] = translation._x;\r\n        m[13] = translation._y;\r\n        m[14] = translation._z;\r\n        m[15] = 1;\r\n        result._markAsUpdated();\r\n    };\r\n    /**\r\n     * Creates a new identity matrix\r\n     * @returns a new identity matrix\r\n     */\r\n    Matrix.Identity = function () {\r\n        var identity = Matrix.FromValues(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);\r\n        identity._updateIdentityStatus(true);\r\n        return identity;\r\n    };\r\n    /**\r\n     * Creates a new identity matrix and stores the result in a given matrix\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.IdentityToRef = function (result) {\r\n        Matrix.FromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n        result._updateIdentityStatus(true);\r\n    };\r\n    /**\r\n     * Creates a new zero matrix\r\n     * @returns a new zero matrix\r\n     */\r\n    Matrix.Zero = function () {\r\n        var zero = Matrix.FromValues(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);\r\n        zero._updateIdentityStatus(false);\r\n        return zero;\r\n    };\r\n    /**\r\n     * Creates a new rotation matrix for \"angle\" radians around the X axis\r\n     * @param angle defines the angle (in radians) to use\r\n     * @return the new matrix\r\n     */\r\n    Matrix.RotationX = function (angle) {\r\n        var result = new Matrix();\r\n        Matrix.RotationXToRef(angle, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new matrix as the invert of a given matrix\r\n     * @param source defines the source matrix\r\n     * @returns the new matrix\r\n     */\r\n    Matrix.Invert = function (source) {\r\n        var result = new Matrix();\r\n        source.invertToRef(result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new rotation matrix for \"angle\" radians around the X axis and stores it in a given matrix\r\n     * @param angle defines the angle (in radians) to use\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.RotationXToRef = function (angle, result) {\r\n        var s = Math.sin(angle);\r\n        var c = Math.cos(angle);\r\n        Matrix.FromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, c, s, 0.0, 0.0, -s, c, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n        result._updateIdentityStatus(c === 1 && s === 0);\r\n    };\r\n    /**\r\n     * Creates a new rotation matrix for \"angle\" radians around the Y axis\r\n     * @param angle defines the angle (in radians) to use\r\n     * @return the new matrix\r\n     */\r\n    Matrix.RotationY = function (angle) {\r\n        var result = new Matrix();\r\n        Matrix.RotationYToRef(angle, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new rotation matrix for \"angle\" radians around the Y axis and stores it in a given matrix\r\n     * @param angle defines the angle (in radians) to use\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.RotationYToRef = function (angle, result) {\r\n        var s = Math.sin(angle);\r\n        var c = Math.cos(angle);\r\n        Matrix.FromValuesToRef(c, 0.0, -s, 0.0, 0.0, 1.0, 0.0, 0.0, s, 0.0, c, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n        result._updateIdentityStatus(c === 1 && s === 0);\r\n    };\r\n    /**\r\n     * Creates a new rotation matrix for \"angle\" radians around the Z axis\r\n     * @param angle defines the angle (in radians) to use\r\n     * @return the new matrix\r\n     */\r\n    Matrix.RotationZ = function (angle) {\r\n        var result = new Matrix();\r\n        Matrix.RotationZToRef(angle, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new rotation matrix for \"angle\" radians around the Z axis and stores it in a given matrix\r\n     * @param angle defines the angle (in radians) to use\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.RotationZToRef = function (angle, result) {\r\n        var s = Math.sin(angle);\r\n        var c = Math.cos(angle);\r\n        Matrix.FromValuesToRef(c, s, 0.0, 0.0, -s, c, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n        result._updateIdentityStatus(c === 1 && s === 0);\r\n    };\r\n    /**\r\n     * Creates a new rotation matrix for \"angle\" radians around the given axis\r\n     * @param axis defines the axis to use\r\n     * @param angle defines the angle (in radians) to use\r\n     * @return the new matrix\r\n     */\r\n    Matrix.RotationAxis = function (axis, angle) {\r\n        var result = new Matrix();\r\n        Matrix.RotationAxisToRef(axis, angle, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a new rotation matrix for \"angle\" radians around the given axis and stores it in a given matrix\r\n     * @param axis defines the axis to use\r\n     * @param angle defines the angle (in radians) to use\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.RotationAxisToRef = function (axis, angle, result) {\r\n        var s = Math.sin(-angle);\r\n        var c = Math.cos(-angle);\r\n        var c1 = 1 - c;\r\n        axis.normalize();\r\n        var m = result._m;\r\n        m[0] = (axis._x * axis._x) * c1 + c;\r\n        m[1] = (axis._x * axis._y) * c1 - (axis._z * s);\r\n        m[2] = (axis._x * axis._z) * c1 + (axis._y * s);\r\n        m[3] = 0.0;\r\n        m[4] = (axis._y * axis._x) * c1 + (axis._z * s);\r\n        m[5] = (axis._y * axis._y) * c1 + c;\r\n        m[6] = (axis._y * axis._z) * c1 - (axis._x * s);\r\n        m[7] = 0.0;\r\n        m[8] = (axis._z * axis._x) * c1 - (axis._y * s);\r\n        m[9] = (axis._z * axis._y) * c1 + (axis._x * s);\r\n        m[10] = (axis._z * axis._z) * c1 + c;\r\n        m[11] = 0.0;\r\n        m[12] = 0.0;\r\n        m[13] = 0.0;\r\n        m[14] = 0.0;\r\n        m[15] = 1.0;\r\n        result._markAsUpdated();\r\n    };\r\n    /**\r\n     * Takes normalised vectors and returns a rotation matrix to align \"from\" with \"to\".\r\n     * Taken from http://www.iquilezles.org/www/articles/noacos/noacos.htm\r\n     * @param from defines the vector to align\r\n     * @param to defines the vector to align to\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.RotationAlignToRef = function (from, to, result) {\r\n        var v = Vector3.Cross(to, from);\r\n        var c = Vector3.Dot(to, from);\r\n        var k = 1 / (1 + c);\r\n        var m = result._m;\r\n        m[0] = v._x * v._x * k + c;\r\n        m[1] = v._y * v._x * k - v._z;\r\n        m[2] = v._z * v._x * k + v._y;\r\n        m[3] = 0;\r\n        m[4] = v._x * v._y * k + v._z;\r\n        m[5] = v._y * v._y * k + c;\r\n        m[6] = v._z * v._y * k - v._x;\r\n        m[7] = 0;\r\n        m[8] = v._x * v._z * k - v._y;\r\n        m[9] = v._y * v._z * k + v._x;\r\n        m[10] = v._z * v._z * k + c;\r\n        m[11] = 0;\r\n        m[12] = 0;\r\n        m[13] = 0;\r\n        m[14] = 0;\r\n        m[15] = 1;\r\n        result._markAsUpdated();\r\n    };\r\n    /**\r\n     * Creates a rotation matrix\r\n     * @param yaw defines the yaw angle in radians (Y axis)\r\n     * @param pitch defines the pitch angle in radians (X axis)\r\n     * @param roll defines the roll angle in radians (Z axis)\r\n     * @returns the new rotation matrix\r\n     */\r\n    Matrix.RotationYawPitchRoll = function (yaw, pitch, roll) {\r\n        var result = new Matrix();\r\n        Matrix.RotationYawPitchRollToRef(yaw, pitch, roll, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a rotation matrix and stores it in a given matrix\r\n     * @param yaw defines the yaw angle in radians (Y axis)\r\n     * @param pitch defines the pitch angle in radians (X axis)\r\n     * @param roll defines the roll angle in radians (Z axis)\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.RotationYawPitchRollToRef = function (yaw, pitch, roll, result) {\r\n        Quaternion.RotationYawPitchRollToRef(yaw, pitch, roll, MathTmp.Quaternion[0]);\r\n        MathTmp.Quaternion[0].toRotationMatrix(result);\r\n    };\r\n    /**\r\n     * Creates a scaling matrix\r\n     * @param x defines the scale factor on X axis\r\n     * @param y defines the scale factor on Y axis\r\n     * @param z defines the scale factor on Z axis\r\n     * @returns the new matrix\r\n     */\r\n    Matrix.Scaling = function (x, y, z) {\r\n        var result = new Matrix();\r\n        Matrix.ScalingToRef(x, y, z, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a scaling matrix and stores it in a given matrix\r\n     * @param x defines the scale factor on X axis\r\n     * @param y defines the scale factor on Y axis\r\n     * @param z defines the scale factor on Z axis\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.ScalingToRef = function (x, y, z, result) {\r\n        Matrix.FromValuesToRef(x, 0.0, 0.0, 0.0, 0.0, y, 0.0, 0.0, 0.0, 0.0, z, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n        result._updateIdentityStatus(x === 1 && y === 1 && z === 1);\r\n    };\r\n    /**\r\n     * Creates a translation matrix\r\n     * @param x defines the translation on X axis\r\n     * @param y defines the translation on Y axis\r\n     * @param z defines the translationon Z axis\r\n     * @returns the new matrix\r\n     */\r\n    Matrix.Translation = function (x, y, z) {\r\n        var result = new Matrix();\r\n        Matrix.TranslationToRef(x, y, z, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Creates a translation matrix and stores it in a given matrix\r\n     * @param x defines the translation on X axis\r\n     * @param y defines the translation on Y axis\r\n     * @param z defines the translationon Z axis\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.TranslationToRef = function (x, y, z, result) {\r\n        Matrix.FromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, x, y, z, 1.0, result);\r\n        result._updateIdentityStatus(x === 0 && y === 0 && z === 0);\r\n    };\r\n    /**\r\n     * Returns a new Matrix whose values are the interpolated values for \"gradient\" (float) between the ones of the matrices \"startValue\" and \"endValue\".\r\n     * @param startValue defines the start value\r\n     * @param endValue defines the end value\r\n     * @param gradient defines the gradient factor\r\n     * @returns the new matrix\r\n     */\r\n    Matrix.Lerp = function (startValue, endValue, gradient) {\r\n        var result = new Matrix();\r\n        Matrix.LerpToRef(startValue, endValue, gradient, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Set the given matrix \"result\" as the interpolated values for \"gradient\" (float) between the ones of the matrices \"startValue\" and \"endValue\".\r\n     * @param startValue defines the start value\r\n     * @param endValue defines the end value\r\n     * @param gradient defines the gradient factor\r\n     * @param result defines the Matrix object where to store data\r\n     */\r\n    Matrix.LerpToRef = function (startValue, endValue, gradient, result) {\r\n        var resultM = result._m;\r\n        var startM = startValue.m;\r\n        var endM = endValue.m;\r\n        for (var index = 0; index < 16; index++) {\r\n            resultM[index] = startM[index] * (1.0 - gradient) + endM[index] * gradient;\r\n        }\r\n        result._markAsUpdated();\r\n    };\r\n    /**\r\n     * Builds a new matrix whose values are computed by:\r\n     * * decomposing the the \"startValue\" and \"endValue\" matrices into their respective scale, rotation and translation matrices\r\n     * * interpolating for \"gradient\" (float) the values between each of these decomposed matrices between the start and the end\r\n     * * recomposing a new matrix from these 3 interpolated scale, rotation and translation matrices\r\n     * @param startValue defines the first matrix\r\n     * @param endValue defines the second matrix\r\n     * @param gradient defines the gradient between the two matrices\r\n     * @returns the new matrix\r\n     */\r\n    Matrix.DecomposeLerp = function (startValue, endValue, gradient) {\r\n        var result = new Matrix();\r\n        Matrix.DecomposeLerpToRef(startValue, endValue, gradient, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Update a matrix to values which are computed by:\r\n     * * decomposing the the \"startValue\" and \"endValue\" matrices into their respective scale, rotation and translation matrices\r\n     * * interpolating for \"gradient\" (float) the values between each of these decomposed matrices between the start and the end\r\n     * * recomposing a new matrix from these 3 interpolated scale, rotation and translation matrices\r\n     * @param startValue defines the first matrix\r\n     * @param endValue defines the second matrix\r\n     * @param gradient defines the gradient between the two matrices\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.DecomposeLerpToRef = function (startValue, endValue, gradient, result) {\r\n        var startScale = MathTmp.Vector3[0];\r\n        var startRotation = MathTmp.Quaternion[0];\r\n        var startTranslation = MathTmp.Vector3[1];\r\n        startValue.decompose(startScale, startRotation, startTranslation);\r\n        var endScale = MathTmp.Vector3[2];\r\n        var endRotation = MathTmp.Quaternion[1];\r\n        var endTranslation = MathTmp.Vector3[3];\r\n        endValue.decompose(endScale, endRotation, endTranslation);\r\n        var resultScale = MathTmp.Vector3[4];\r\n        Vector3.LerpToRef(startScale, endScale, gradient, resultScale);\r\n        var resultRotation = MathTmp.Quaternion[2];\r\n        Quaternion.SlerpToRef(startRotation, endRotation, gradient, resultRotation);\r\n        var resultTranslation = MathTmp.Vector3[5];\r\n        Vector3.LerpToRef(startTranslation, endTranslation, gradient, resultTranslation);\r\n        Matrix.ComposeToRef(resultScale, resultRotation, resultTranslation, result);\r\n    };\r\n    /**\r\n     * Gets a new rotation matrix used to rotate an entity so as it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\"\r\n     * This function works in left handed mode\r\n     * @param eye defines the final position of the entity\r\n     * @param target defines where the entity should look at\r\n     * @param up defines the up vector for the entity\r\n     * @returns the new matrix\r\n     */\r\n    Matrix.LookAtLH = function (eye, target, up) {\r\n        var result = new Matrix();\r\n        Matrix.LookAtLHToRef(eye, target, up, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the given \"result\" Matrix to a rotation matrix used to rotate an entity so that it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\".\r\n     * This function works in left handed mode\r\n     * @param eye defines the final position of the entity\r\n     * @param target defines where the entity should look at\r\n     * @param up defines the up vector for the entity\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.LookAtLHToRef = function (eye, target, up, result) {\r\n        var xAxis = MathTmp.Vector3[0];\r\n        var yAxis = MathTmp.Vector3[1];\r\n        var zAxis = MathTmp.Vector3[2];\r\n        // Z axis\r\n        target.subtractToRef(eye, zAxis);\r\n        zAxis.normalize();\r\n        // X axis\r\n        Vector3.CrossToRef(up, zAxis, xAxis);\r\n        var xSquareLength = xAxis.lengthSquared();\r\n        if (xSquareLength === 0) {\r\n            xAxis.x = 1.0;\r\n        }\r\n        else {\r\n            xAxis.normalizeFromLength(Math.sqrt(xSquareLength));\r\n        }\r\n        // Y axis\r\n        Vector3.CrossToRef(zAxis, xAxis, yAxis);\r\n        yAxis.normalize();\r\n        // Eye angles\r\n        var ex = -Vector3.Dot(xAxis, eye);\r\n        var ey = -Vector3.Dot(yAxis, eye);\r\n        var ez = -Vector3.Dot(zAxis, eye);\r\n        Matrix.FromValuesToRef(xAxis._x, yAxis._x, zAxis._x, 0.0, xAxis._y, yAxis._y, zAxis._y, 0.0, xAxis._z, yAxis._z, zAxis._z, 0.0, ex, ey, ez, 1.0, result);\r\n    };\r\n    /**\r\n     * Gets a new rotation matrix used to rotate an entity so as it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\"\r\n     * This function works in right handed mode\r\n     * @param eye defines the final position of the entity\r\n     * @param target defines where the entity should look at\r\n     * @param up defines the up vector for the entity\r\n     * @returns the new matrix\r\n     */\r\n    Matrix.LookAtRH = function (eye, target, up) {\r\n        var result = new Matrix();\r\n        Matrix.LookAtRHToRef(eye, target, up, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Sets the given \"result\" Matrix to a rotation matrix used to rotate an entity so that it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\".\r\n     * This function works in right handed mode\r\n     * @param eye defines the final position of the entity\r\n     * @param target defines where the entity should look at\r\n     * @param up defines the up vector for the entity\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.LookAtRHToRef = function (eye, target, up, result) {\r\n        var xAxis = MathTmp.Vector3[0];\r\n        var yAxis = MathTmp.Vector3[1];\r\n        var zAxis = MathTmp.Vector3[2];\r\n        // Z axis\r\n        eye.subtractToRef(target, zAxis);\r\n        zAxis.normalize();\r\n        // X axis\r\n        Vector3.CrossToRef(up, zAxis, xAxis);\r\n        var xSquareLength = xAxis.lengthSquared();\r\n        if (xSquareLength === 0) {\r\n            xAxis.x = 1.0;\r\n        }\r\n        else {\r\n            xAxis.normalizeFromLength(Math.sqrt(xSquareLength));\r\n        }\r\n        // Y axis\r\n        Vector3.CrossToRef(zAxis, xAxis, yAxis);\r\n        yAxis.normalize();\r\n        // Eye angles\r\n        var ex = -Vector3.Dot(xAxis, eye);\r\n        var ey = -Vector3.Dot(yAxis, eye);\r\n        var ez = -Vector3.Dot(zAxis, eye);\r\n        Matrix.FromValuesToRef(xAxis._x, yAxis._x, zAxis._x, 0.0, xAxis._y, yAxis._y, zAxis._y, 0.0, xAxis._z, yAxis._z, zAxis._z, 0.0, ex, ey, ez, 1.0, result);\r\n    };\r\n    /**\r\n     * Create a left-handed orthographic projection matrix\r\n     * @param width defines the viewport width\r\n     * @param height defines the viewport height\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @returns a new matrix as a left-handed orthographic projection matrix\r\n     */\r\n    Matrix.OrthoLH = function (width, height, znear, zfar) {\r\n        var matrix = new Matrix();\r\n        Matrix.OrthoLHToRef(width, height, znear, zfar, matrix);\r\n        return matrix;\r\n    };\r\n    /**\r\n     * Store a left-handed orthographic projection to a given matrix\r\n     * @param width defines the viewport width\r\n     * @param height defines the viewport height\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.OrthoLHToRef = function (width, height, znear, zfar, result) {\r\n        var n = znear;\r\n        var f = zfar;\r\n        var a = 2.0 / width;\r\n        var b = 2.0 / height;\r\n        var c = 2.0 / (f - n);\r\n        var d = -(f + n) / (f - n);\r\n        Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 0.0, 0.0, 0.0, d, 1.0, result);\r\n        result._updateIdentityStatus(a === 1 && b === 1 && c === 1 && d === 0);\r\n    };\r\n    /**\r\n     * Create a left-handed orthographic projection matrix\r\n     * @param left defines the viewport left coordinate\r\n     * @param right defines the viewport right coordinate\r\n     * @param bottom defines the viewport bottom coordinate\r\n     * @param top defines the viewport top coordinate\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @returns a new matrix as a left-handed orthographic projection matrix\r\n     */\r\n    Matrix.OrthoOffCenterLH = function (left, right, bottom, top, znear, zfar) {\r\n        var matrix = new Matrix();\r\n        Matrix.OrthoOffCenterLHToRef(left, right, bottom, top, znear, zfar, matrix);\r\n        return matrix;\r\n    };\r\n    /**\r\n     * Stores a left-handed orthographic projection into a given matrix\r\n     * @param left defines the viewport left coordinate\r\n     * @param right defines the viewport right coordinate\r\n     * @param bottom defines the viewport bottom coordinate\r\n     * @param top defines the viewport top coordinate\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.OrthoOffCenterLHToRef = function (left, right, bottom, top, znear, zfar, result) {\r\n        var n = znear;\r\n        var f = zfar;\r\n        var a = 2.0 / (right - left);\r\n        var b = 2.0 / (top - bottom);\r\n        var c = 2.0 / (f - n);\r\n        var d = -(f + n) / (f - n);\r\n        var i0 = (left + right) / (left - right);\r\n        var i1 = (top + bottom) / (bottom - top);\r\n        Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 0.0, i0, i1, d, 1.0, result);\r\n        result._markAsUpdated();\r\n    };\r\n    /**\r\n     * Creates a right-handed orthographic projection matrix\r\n     * @param left defines the viewport left coordinate\r\n     * @param right defines the viewport right coordinate\r\n     * @param bottom defines the viewport bottom coordinate\r\n     * @param top defines the viewport top coordinate\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @returns a new matrix as a right-handed orthographic projection matrix\r\n     */\r\n    Matrix.OrthoOffCenterRH = function (left, right, bottom, top, znear, zfar) {\r\n        var matrix = new Matrix();\r\n        Matrix.OrthoOffCenterRHToRef(left, right, bottom, top, znear, zfar, matrix);\r\n        return matrix;\r\n    };\r\n    /**\r\n     * Stores a right-handed orthographic projection into a given matrix\r\n     * @param left defines the viewport left coordinate\r\n     * @param right defines the viewport right coordinate\r\n     * @param bottom defines the viewport bottom coordinate\r\n     * @param top defines the viewport top coordinate\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.OrthoOffCenterRHToRef = function (left, right, bottom, top, znear, zfar, result) {\r\n        Matrix.OrthoOffCenterLHToRef(left, right, bottom, top, znear, zfar, result);\r\n        result._m[10] *= -1; // No need to call _markAsUpdated as previous function already called it and let _isIdentityDirty to true\r\n    };\r\n    /**\r\n     * Creates a left-handed perspective projection matrix\r\n     * @param width defines the viewport width\r\n     * @param height defines the viewport height\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @returns a new matrix as a left-handed perspective projection matrix\r\n     */\r\n    Matrix.PerspectiveLH = function (width, height, znear, zfar) {\r\n        var matrix = new Matrix();\r\n        var n = znear;\r\n        var f = zfar;\r\n        var a = 2.0 * n / width;\r\n        var b = 2.0 * n / height;\r\n        var c = (f + n) / (f - n);\r\n        var d = -2.0 * f * n / (f - n);\r\n        Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 1.0, 0.0, 0.0, d, 0.0, matrix);\r\n        matrix._updateIdentityStatus(false);\r\n        return matrix;\r\n    };\r\n    /**\r\n     * Creates a left-handed perspective projection matrix\r\n     * @param fov defines the horizontal field of view\r\n     * @param aspect defines the aspect ratio\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @returns a new matrix as a left-handed perspective projection matrix\r\n     */\r\n    Matrix.PerspectiveFovLH = function (fov, aspect, znear, zfar) {\r\n        var matrix = new Matrix();\r\n        Matrix.PerspectiveFovLHToRef(fov, aspect, znear, zfar, matrix);\r\n        return matrix;\r\n    };\r\n    /**\r\n     * Stores a left-handed perspective projection into a given matrix\r\n     * @param fov defines the horizontal field of view\r\n     * @param aspect defines the aspect ratio\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @param result defines the target matrix\r\n     * @param isVerticalFovFixed defines it the fov is vertically fixed (default) or horizontally\r\n     */\r\n    Matrix.PerspectiveFovLHToRef = function (fov, aspect, znear, zfar, result, isVerticalFovFixed) {\r\n        if (isVerticalFovFixed === void 0) { isVerticalFovFixed = true; }\r\n        var n = znear;\r\n        var f = zfar;\r\n        var t = 1.0 / (Math.tan(fov * 0.5));\r\n        var a = isVerticalFovFixed ? (t / aspect) : t;\r\n        var b = isVerticalFovFixed ? t : (t * aspect);\r\n        var c = (f + n) / (f - n);\r\n        var d = -2.0 * f * n / (f - n);\r\n        Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 1.0, 0.0, 0.0, d, 0.0, result);\r\n        result._updateIdentityStatus(false);\r\n    };\r\n    /**\r\n     * Stores a left-handed perspective projection into a given matrix with depth reversed\r\n     * @param fov defines the horizontal field of view\r\n     * @param aspect defines the aspect ratio\r\n     * @param znear defines the near clip plane\r\n     * @param zfar not used as infinity is used as far clip\r\n     * @param result defines the target matrix\r\n     * @param isVerticalFovFixed defines it the fov is vertically fixed (default) or horizontally\r\n     */\r\n    Matrix.PerspectiveFovReverseLHToRef = function (fov, aspect, znear, zfar, result, isVerticalFovFixed) {\r\n        if (isVerticalFovFixed === void 0) { isVerticalFovFixed = true; }\r\n        var t = 1.0 / (Math.tan(fov * 0.5));\r\n        var a = isVerticalFovFixed ? (t / aspect) : t;\r\n        var b = isVerticalFovFixed ? t : (t * aspect);\r\n        Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, -znear, 1.0, 0.0, 0.0, 1.0, 0.0, result);\r\n        result._updateIdentityStatus(false);\r\n    };\r\n    /**\r\n     * Creates a right-handed perspective projection matrix\r\n     * @param fov defines the horizontal field of view\r\n     * @param aspect defines the aspect ratio\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @returns a new matrix as a right-handed perspective projection matrix\r\n     */\r\n    Matrix.PerspectiveFovRH = function (fov, aspect, znear, zfar) {\r\n        var matrix = new Matrix();\r\n        Matrix.PerspectiveFovRHToRef(fov, aspect, znear, zfar, matrix);\r\n        return matrix;\r\n    };\r\n    /**\r\n     * Stores a right-handed perspective projection into a given matrix\r\n     * @param fov defines the horizontal field of view\r\n     * @param aspect defines the aspect ratio\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @param result defines the target matrix\r\n     * @param isVerticalFovFixed defines it the fov is vertically fixed (default) or horizontally\r\n     */\r\n    Matrix.PerspectiveFovRHToRef = function (fov, aspect, znear, zfar, result, isVerticalFovFixed) {\r\n        //alternatively this could be expressed as:\r\n        //    m = PerspectiveFovLHToRef\r\n        //    m[10] *= -1.0;\r\n        //    m[11] *= -1.0;\r\n        if (isVerticalFovFixed === void 0) { isVerticalFovFixed = true; }\r\n        var n = znear;\r\n        var f = zfar;\r\n        var t = 1.0 / (Math.tan(fov * 0.5));\r\n        var a = isVerticalFovFixed ? (t / aspect) : t;\r\n        var b = isVerticalFovFixed ? t : (t * aspect);\r\n        var c = -(f + n) / (f - n);\r\n        var d = -2 * f * n / (f - n);\r\n        Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, -1.0, 0.0, 0.0, d, 0.0, result);\r\n        result._updateIdentityStatus(false);\r\n    };\r\n    /**\r\n     * Stores a right-handed perspective projection into a given matrix\r\n     * @param fov defines the horizontal field of view\r\n     * @param aspect defines the aspect ratio\r\n     * @param znear defines the near clip plane\r\n     * @param zfar not used as infinity is used as far clip\r\n     * @param result defines the target matrix\r\n     * @param isVerticalFovFixed defines it the fov is vertically fixed (default) or horizontally\r\n     */\r\n    Matrix.PerspectiveFovReverseRHToRef = function (fov, aspect, znear, zfar, result, isVerticalFovFixed) {\r\n        //alternatively this could be expressed as:\r\n        //    m = PerspectiveFovLHToRef\r\n        //    m[10] *= -1.0;\r\n        //    m[11] *= -1.0;\r\n        if (isVerticalFovFixed === void 0) { isVerticalFovFixed = true; }\r\n        var t = 1.0 / (Math.tan(fov * 0.5));\r\n        var a = isVerticalFovFixed ? (t / aspect) : t;\r\n        var b = isVerticalFovFixed ? t : (t * aspect);\r\n        Matrix.FromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, -znear, -1.0, 0.0, 0.0, -1.0, 0.0, result);\r\n        result._updateIdentityStatus(false);\r\n    };\r\n    /**\r\n     * Stores a perspective projection for WebVR info a given matrix\r\n     * @param fov defines the field of view\r\n     * @param znear defines the near clip plane\r\n     * @param zfar defines the far clip plane\r\n     * @param result defines the target matrix\r\n     * @param rightHanded defines if the matrix must be in right-handed mode (false by default)\r\n     */\r\n    Matrix.PerspectiveFovWebVRToRef = function (fov, znear, zfar, result, rightHanded) {\r\n        if (rightHanded === void 0) { rightHanded = false; }\r\n        var rightHandedFactor = rightHanded ? -1 : 1;\r\n        var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n        var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n        var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n        var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n        var xScale = 2.0 / (leftTan + rightTan);\r\n        var yScale = 2.0 / (upTan + downTan);\r\n        var m = result._m;\r\n        m[0] = xScale;\r\n        m[1] = m[2] = m[3] = m[4] = 0.0;\r\n        m[5] = yScale;\r\n        m[6] = m[7] = 0.0;\r\n        m[8] = ((leftTan - rightTan) * xScale * 0.5);\r\n        m[9] = -((upTan - downTan) * yScale * 0.5);\r\n        m[10] = -zfar / (znear - zfar);\r\n        m[11] = 1.0 * rightHandedFactor;\r\n        m[12] = m[13] = m[15] = 0.0;\r\n        m[14] = -(2.0 * zfar * znear) / (zfar - znear);\r\n        result._markAsUpdated();\r\n    };\r\n    /**\r\n     * Computes a complete transformation matrix\r\n     * @param viewport defines the viewport to use\r\n     * @param world defines the world matrix\r\n     * @param view defines the view matrix\r\n     * @param projection defines the projection matrix\r\n     * @param zmin defines the near clip plane\r\n     * @param zmax defines the far clip plane\r\n     * @returns the transformation matrix\r\n     */\r\n    Matrix.GetFinalMatrix = function (viewport, world, view, projection, zmin, zmax) {\r\n        var cw = viewport.width;\r\n        var ch = viewport.height;\r\n        var cx = viewport.x;\r\n        var cy = viewport.y;\r\n        var viewportMatrix = Matrix.FromValues(cw / 2.0, 0.0, 0.0, 0.0, 0.0, -ch / 2.0, 0.0, 0.0, 0.0, 0.0, zmax - zmin, 0.0, cx + cw / 2.0, ch / 2.0 + cy, zmin, 1.0);\r\n        var matrix = MathTmp.Matrix[0];\r\n        world.multiplyToRef(view, matrix);\r\n        matrix.multiplyToRef(projection, matrix);\r\n        return matrix.multiply(viewportMatrix);\r\n    };\r\n    /**\r\n     * Extracts a 2x2 matrix from a given matrix and store the result in a Float32Array\r\n     * @param matrix defines the matrix to use\r\n     * @returns a new Float32Array array with 4 elements : the 2x2 matrix extracted from the given matrix\r\n     */\r\n    Matrix.GetAsMatrix2x2 = function (matrix) {\r\n        var m = matrix.m;\r\n        var arr = [m[0], m[1], m[4], m[5]];\r\n        return _Engines_performanceConfigurator__WEBPACK_IMPORTED_MODULE_4__[/* PerformanceConfigurator */ \"a\"].MatrixUse64Bits ? arr : new Float32Array(arr);\r\n    };\r\n    /**\r\n     * Extracts a 3x3 matrix from a given matrix and store the result in a Float32Array\r\n     * @param matrix defines the matrix to use\r\n     * @returns a new Float32Array array with 9 elements : the 3x3 matrix extracted from the given matrix\r\n     */\r\n    Matrix.GetAsMatrix3x3 = function (matrix) {\r\n        var m = matrix.m;\r\n        var arr = [\r\n            m[0], m[1], m[2],\r\n            m[4], m[5], m[6],\r\n            m[8], m[9], m[10]\r\n        ];\r\n        return _Engines_performanceConfigurator__WEBPACK_IMPORTED_MODULE_4__[/* PerformanceConfigurator */ \"a\"].MatrixUse64Bits ? arr : new Float32Array(arr);\r\n    };\r\n    /**\r\n     * Compute the transpose of a given matrix\r\n     * @param matrix defines the matrix to transpose\r\n     * @returns the new matrix\r\n     */\r\n    Matrix.Transpose = function (matrix) {\r\n        var result = new Matrix();\r\n        Matrix.TransposeToRef(matrix, result);\r\n        return result;\r\n    };\r\n    /**\r\n     * Compute the transpose of a matrix and store it in a target matrix\r\n     * @param matrix defines the matrix to transpose\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.TransposeToRef = function (matrix, result) {\r\n        var rm = result._m;\r\n        var mm = matrix.m;\r\n        rm[0] = mm[0];\r\n        rm[1] = mm[4];\r\n        rm[2] = mm[8];\r\n        rm[3] = mm[12];\r\n        rm[4] = mm[1];\r\n        rm[5] = mm[5];\r\n        rm[6] = mm[9];\r\n        rm[7] = mm[13];\r\n        rm[8] = mm[2];\r\n        rm[9] = mm[6];\r\n        rm[10] = mm[10];\r\n        rm[11] = mm[14];\r\n        rm[12] = mm[3];\r\n        rm[13] = mm[7];\r\n        rm[14] = mm[11];\r\n        rm[15] = mm[15];\r\n        // identity-ness does not change when transposing\r\n        result._updateIdentityStatus(matrix._isIdentity, matrix._isIdentityDirty);\r\n    };\r\n    /**\r\n     * Computes a reflection matrix from a plane\r\n     * @param plane defines the reflection plane\r\n     * @returns a new matrix\r\n     */\r\n    Matrix.Reflection = function (plane) {\r\n        var matrix = new Matrix();\r\n        Matrix.ReflectionToRef(plane, matrix);\r\n        return matrix;\r\n    };\r\n    /**\r\n     * Computes a reflection matrix from a plane\r\n     * @param plane defines the reflection plane\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.ReflectionToRef = function (plane, result) {\r\n        plane.normalize();\r\n        var x = plane.normal.x;\r\n        var y = plane.normal.y;\r\n        var z = plane.normal.z;\r\n        var temp = -2 * x;\r\n        var temp2 = -2 * y;\r\n        var temp3 = -2 * z;\r\n        Matrix.FromValuesToRef(temp * x + 1, temp2 * x, temp3 * x, 0.0, temp * y, temp2 * y + 1, temp3 * y, 0.0, temp * z, temp2 * z, temp3 * z + 1, 0.0, temp * plane.d, temp2 * plane.d, temp3 * plane.d, 1.0, result);\r\n    };\r\n    /**\r\n     * Sets the given matrix as a rotation matrix composed from the 3 left handed axes\r\n     * @param xaxis defines the value of the 1st axis\r\n     * @param yaxis defines the value of the 2nd axis\r\n     * @param zaxis defines the value of the 3rd axis\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.FromXYZAxesToRef = function (xaxis, yaxis, zaxis, result) {\r\n        Matrix.FromValuesToRef(xaxis._x, xaxis._y, xaxis._z, 0.0, yaxis._x, yaxis._y, yaxis._z, 0.0, zaxis._x, zaxis._y, zaxis._z, 0.0, 0.0, 0.0, 0.0, 1.0, result);\r\n    };\r\n    /**\r\n     * Creates a rotation matrix from a quaternion and stores it in a target matrix\r\n     * @param quat defines the quaternion to use\r\n     * @param result defines the target matrix\r\n     */\r\n    Matrix.FromQuaternionToRef = function (quat, result) {\r\n        var xx = quat._x * quat._x;\r\n        var yy = quat._y * quat._y;\r\n        var zz = quat._z * quat._z;\r\n        var xy = quat._x * quat._y;\r\n        var zw = quat._z * quat._w;\r\n        var zx = quat._z * quat._x;\r\n        var yw = quat._y * quat._w;\r\n        var yz = quat._y * quat._z;\r\n        var xw = quat._x * quat._w;\r\n        result._m[0] = 1.0 - (2.0 * (yy + zz));\r\n        result._m[1] = 2.0 * (xy + zw);\r\n        result._m[2] = 2.0 * (zx - yw);\r\n        result._m[3] = 0.0;\r\n        result._m[4] = 2.0 * (xy - zw);\r\n        result._m[5] = 1.0 - (2.0 * (zz + xx));\r\n        result._m[6] = 2.0 * (yz + xw);\r\n        result._m[7] = 0.0;\r\n        result._m[8] = 2.0 * (zx + yw);\r\n        result._m[9] = 2.0 * (yz - xw);\r\n        result._m[10] = 1.0 - (2.0 * (yy + xx));\r\n        result._m[11] = 0.0;\r\n        result._m[12] = 0.0;\r\n        result._m[13] = 0.0;\r\n        result._m[14] = 0.0;\r\n        result._m[15] = 1.0;\r\n        result._markAsUpdated();\r\n    };\r\n    Matrix._updateFlagSeed = 0;\r\n    Matrix._identityReadOnly = Matrix.Identity();\r\n    return Matrix;\r\n}());\r\n\r\n/**\r\n * @hidden\r\n * Same as Tmp but not exported to keep it only for math functions to avoid conflicts\r\n */\r\nvar MathTmp = /** @class */ (function () {\r\n    function MathTmp() {\r\n    }\r\n    MathTmp.Vector3 = _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__[/* ArrayTools */ \"a\"].BuildArray(6, Vector3.Zero);\r\n    MathTmp.Matrix = _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__[/* ArrayTools */ \"a\"].BuildArray(2, Matrix.Identity);\r\n    MathTmp.Quaternion = _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__[/* ArrayTools */ \"a\"].BuildArray(3, Quaternion.Zero);\r\n    return MathTmp;\r\n}());\r\n/**\r\n * @hidden\r\n */\r\nvar TmpVectors = /** @class */ (function () {\r\n    function TmpVectors() {\r\n    }\r\n    TmpVectors.Vector2 = _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__[/* ArrayTools */ \"a\"].BuildArray(3, Vector2.Zero); // 3 temp Vector2 at once should be enough\r\n    TmpVectors.Vector3 = _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__[/* ArrayTools */ \"a\"].BuildArray(13, Vector3.Zero); // 13 temp Vector3 at once should be enough\r\n    TmpVectors.Vector4 = _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__[/* ArrayTools */ \"a\"].BuildArray(3, Vector4.Zero); // 3 temp Vector4 at once should be enough\r\n    TmpVectors.Quaternion = _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__[/* ArrayTools */ \"a\"].BuildArray(2, Quaternion.Zero); // 2 temp Quaternion at once should be enough\r\n    TmpVectors.Matrix = _Misc_arrayTools__WEBPACK_IMPORTED_MODULE_2__[/* ArrayTools */ \"a\"].BuildArray(8, Matrix.Identity); // 8 temp Matrices at once should be enough\r\n    return TmpVectors;\r\n}());\r\n\r\n_Misc_typeStore__WEBPACK_IMPORTED_MODULE_3__[/* _TypeStore */ \"a\"].RegisteredTypes[\"BABYLON.Vector2\"] = Vector2;\r\n_Misc_typeStore__WEBPACK_IMPORTED_MODULE_3__[/* _TypeStore */ \"a\"].RegisteredTypes[\"BABYLON.Vector3\"] = Vector3;\r\n_Misc_typeStore__WEBPACK_IMPORTED_MODULE_3__[/* _TypeStore */ \"a\"].RegisteredTypes[\"BABYLON.Vector4\"] = Vector4;\r\n_Misc_typeStore__WEBPACK_IMPORTED_MODULE_3__[/* _TypeStore */ \"a\"].RegisteredTypes[\"BABYLON.Matrix\"] = Matrix;\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.vector.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.vertexFormat.ts":
/*!************************************************!*\
  !*** ./src/BABYLON/Maths/math.vertexFormat.ts ***!
  \************************************************/
/*! exports provided: PositionNormalVertex, PositionNormalTextureVertex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export PositionNormalVertex */\n/* unused harmony export PositionNormalTextureVertex */\n/* harmony import */ var _math_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.vector */ \"./src/BABYLON/Maths/math.vector.ts\");\n\r\n/**\r\n * Contains position and normal vectors for a vertex\r\n */\r\nvar PositionNormalVertex = /** @class */ (function () {\r\n    /**\r\n     * Creates a PositionNormalVertex\r\n     * @param position the position of the vertex (defaut: 0,0,0)\r\n     * @param normal the normal of the vertex (defaut: 0,1,0)\r\n     */\r\n    function PositionNormalVertex(\r\n    /** the position of the vertex (defaut: 0,0,0) */\r\n    position, \r\n    /** the normal of the vertex (defaut: 0,1,0) */\r\n    normal) {\r\n        if (position === void 0) { position = _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"].Zero(); }\r\n        if (normal === void 0) { normal = _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"].Up(); }\r\n        this.position = position;\r\n        this.normal = normal;\r\n    }\r\n    /**\r\n     * Clones the PositionNormalVertex\r\n     * @returns the cloned PositionNormalVertex\r\n     */\r\n    PositionNormalVertex.prototype.clone = function () {\r\n        return new PositionNormalVertex(this.position.clone(), this.normal.clone());\r\n    };\r\n    return PositionNormalVertex;\r\n}());\r\n\r\n/**\r\n * Contains position, normal and uv vectors for a vertex\r\n */\r\nvar PositionNormalTextureVertex = /** @class */ (function () {\r\n    /**\r\n     * Creates a PositionNormalTextureVertex\r\n     * @param position the position of the vertex (defaut: 0,0,0)\r\n     * @param normal the normal of the vertex (defaut: 0,1,0)\r\n     * @param uv the uv of the vertex (default: 0,0)\r\n     */\r\n    function PositionNormalTextureVertex(\r\n    /** the position of the vertex (defaut: 0,0,0) */\r\n    position, \r\n    /** the normal of the vertex (defaut: 0,1,0) */\r\n    normal, \r\n    /** the uv of the vertex (default: 0,0) */\r\n    uv) {\r\n        if (position === void 0) { position = _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"].Zero(); }\r\n        if (normal === void 0) { normal = _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"].Up(); }\r\n        if (uv === void 0) { uv = _math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector2 */ \"c\"].Zero(); }\r\n        this.position = position;\r\n        this.normal = normal;\r\n        this.uv = uv;\r\n    }\r\n    /**\r\n     * Clones the PositionNormalTextureVertex\r\n     * @returns the cloned PositionNormalTextureVertex\r\n     */\r\n    PositionNormalTextureVertex.prototype.clone = function () {\r\n        return new PositionNormalTextureVertex(this.position.clone(), this.normal.clone(), this.uv.clone());\r\n    };\r\n    return PositionNormalTextureVertex;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.vertexFormat.ts?");

/***/ }),

/***/ "./src/BABYLON/Maths/math.viewport.ts":
/*!********************************************!*\
  !*** ./src/BABYLON/Maths/math.viewport.ts ***!
  \********************************************/
/*! exports provided: Viewport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export Viewport */\n/**\r\n * Class used to represent a viewport on screen\r\n */\r\nvar Viewport = /** @class */ (function () {\r\n    /**\r\n     * Creates a Viewport object located at (x, y) and sized (width, height)\r\n     * @param x defines viewport left coordinate\r\n     * @param y defines viewport top coordinate\r\n     * @param width defines the viewport width\r\n     * @param height defines the viewport height\r\n     */\r\n    function Viewport(\r\n    /** viewport left coordinate */\r\n    x, \r\n    /** viewport top coordinate */\r\n    y, \r\n    /**viewport width */\r\n    width, \r\n    /** viewport height */\r\n    height) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    /**\r\n     * Creates a new viewport using absolute sizing (from 0-> width, 0-> height instead of 0->1)\r\n     * @param renderWidth defines the rendering width\r\n     * @param renderHeight defines the rendering height\r\n     * @returns a new Viewport\r\n     */\r\n    Viewport.prototype.toGlobal = function (renderWidth, renderHeight) {\r\n        return new Viewport(this.x * renderWidth, this.y * renderHeight, this.width * renderWidth, this.height * renderHeight);\r\n    };\r\n    /**\r\n     * Stores absolute viewport value into a target viewport (from 0-> width, 0-> height instead of 0->1)\r\n     * @param renderWidth defines the rendering width\r\n     * @param renderHeight defines the rendering height\r\n     * @param ref defines the target viewport\r\n     * @returns the current viewport\r\n     */\r\n    Viewport.prototype.toGlobalToRef = function (renderWidth, renderHeight, ref) {\r\n        ref.x = this.x * renderWidth;\r\n        ref.y = this.y * renderHeight;\r\n        ref.width = this.width * renderWidth;\r\n        ref.height = this.height * renderHeight;\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a new Viewport copied from the current one\r\n     * @returns a new Viewport\r\n     */\r\n    Viewport.prototype.clone = function () {\r\n        return new Viewport(this.x, this.y, this.width, this.height);\r\n    };\r\n    return Viewport;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Maths/math.viewport.ts?");

/***/ }),

/***/ "./src/BABYLON/Misc/arrayTools.ts":
/*!****************************************!*\
  !*** ./src/BABYLON/Misc/arrayTools.ts ***!
  \****************************************/
/*! exports provided: ArrayTools */
/*! exports used: ArrayTools */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ArrayTools; });\n/**\r\n * Class containing a set of static utilities functions for arrays.\r\n */\r\nvar ArrayTools = /** @class */ (function () {\r\n    function ArrayTools() {\r\n    }\r\n    /**\r\n     * Returns an array of the given size filled with element built from the given constructor and the paramters\r\n     * @param size the number of element to construct and put in the array\r\n     * @param itemBuilder a callback responsible for creating new instance of item. Called once per array entry.\r\n     * @returns a new array filled with new objects\r\n     */\r\n    ArrayTools.BuildArray = function (size, itemBuilder) {\r\n        var a = [];\r\n        for (var i = 0; i < size; ++i) {\r\n            a.push(itemBuilder());\r\n        }\r\n        return a;\r\n    };\r\n    return ArrayTools;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Misc/arrayTools.ts?");

/***/ }),

/***/ "./src/BABYLON/Misc/logger.ts":
/*!************************************!*\
  !*** ./src/BABYLON/Misc/logger.ts ***!
  \************************************/
/*! exports provided: Logger */
/*! exports used: Logger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Logger; });\n/**\r\n * Logger used througouht the application to allow configuration of\r\n * the log level required for the messages.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Logger._AddLogEntry = function (entry) {\r\n        Logger._LogCache = entry + Logger._LogCache;\r\n        if (Logger.OnNewCacheEntry) {\r\n            Logger.OnNewCacheEntry(entry);\r\n        }\r\n    };\r\n    Logger._FormatMessage = function (message) {\r\n        var padStr = function (i) { return (i < 10) ? \"0\" + i : \"\" + i; };\r\n        var date = new Date();\r\n        return \"[\" + padStr(date.getHours()) + \":\" + padStr(date.getMinutes()) + \":\" + padStr(date.getSeconds()) + \"]: \" + message;\r\n    };\r\n    Logger._LogDisabled = function (message) {\r\n        // nothing to do\r\n    };\r\n    Logger._LogEnabled = function (message) {\r\n        var formattedMessage = Logger._FormatMessage(message);\r\n        console.log(\"BJS - \" + formattedMessage);\r\n        var entry = \"<div style='color:white'>\" + formattedMessage + \"</div><br>\";\r\n        Logger._AddLogEntry(entry);\r\n    };\r\n    Logger._WarnDisabled = function (message) {\r\n        // nothing to do\r\n    };\r\n    Logger._WarnEnabled = function (message) {\r\n        var formattedMessage = Logger._FormatMessage(message);\r\n        console.warn(\"BJS - \" + formattedMessage);\r\n        var entry = \"<div style='color:orange'>\" + formattedMessage + \"</div><br>\";\r\n        Logger._AddLogEntry(entry);\r\n    };\r\n    Logger._ErrorDisabled = function (message) {\r\n        // nothing to do\r\n    };\r\n    Logger._ErrorEnabled = function (message) {\r\n        Logger.errorsCount++;\r\n        var formattedMessage = Logger._FormatMessage(message);\r\n        console.error(\"BJS - \" + formattedMessage);\r\n        var entry = \"<div style='color:red'>\" + formattedMessage + \"</div><br>\";\r\n        Logger._AddLogEntry(entry);\r\n    };\r\n    Object.defineProperty(Logger, \"LogCache\", {\r\n        /**\r\n         * Gets current log cache (list of logs)\r\n         */\r\n        get: function () {\r\n            return Logger._LogCache;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clears the log cache\r\n     */\r\n    Logger.ClearLogCache = function () {\r\n        Logger._LogCache = \"\";\r\n        Logger.errorsCount = 0;\r\n    };\r\n    Object.defineProperty(Logger, \"LogLevels\", {\r\n        /**\r\n         * Sets the current log level (MessageLogLevel / WarningLogLevel / ErrorLogLevel)\r\n         */\r\n        set: function (level) {\r\n            if ((level & Logger.MessageLogLevel) === Logger.MessageLogLevel) {\r\n                Logger.Log = Logger._LogEnabled;\r\n            }\r\n            else {\r\n                Logger.Log = Logger._LogDisabled;\r\n            }\r\n            if ((level & Logger.WarningLogLevel) === Logger.WarningLogLevel) {\r\n                Logger.Warn = Logger._WarnEnabled;\r\n            }\r\n            else {\r\n                Logger.Warn = Logger._WarnDisabled;\r\n            }\r\n            if ((level & Logger.ErrorLogLevel) === Logger.ErrorLogLevel) {\r\n                Logger.Error = Logger._ErrorEnabled;\r\n            }\r\n            else {\r\n                Logger.Error = Logger._ErrorDisabled;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * No log\r\n     */\r\n    Logger.NoneLogLevel = 0;\r\n    /**\r\n     * Only message logs\r\n     */\r\n    Logger.MessageLogLevel = 1;\r\n    /**\r\n     * Only warning logs\r\n     */\r\n    Logger.WarningLogLevel = 2;\r\n    /**\r\n     * Only error logs\r\n     */\r\n    Logger.ErrorLogLevel = 4;\r\n    /**\r\n     * All logs\r\n     */\r\n    Logger.AllLogLevel = 7;\r\n    Logger._LogCache = \"\";\r\n    /**\r\n     * Gets a value indicating the number of loading errors\r\n     * @ignorenaming\r\n     */\r\n    Logger.errorsCount = 0;\r\n    /**\r\n     * Log a message to the console\r\n     */\r\n    Logger.Log = Logger._LogEnabled;\r\n    /**\r\n     * Write a warning message to the console\r\n     */\r\n    Logger.Warn = Logger._WarnEnabled;\r\n    /**\r\n     * Write an error message to the console\r\n     */\r\n    Logger.Error = Logger._ErrorEnabled;\r\n    return Logger;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Misc/logger.ts?");

/***/ }),

/***/ "./src/BABYLON/Misc/observable.ts":
/*!****************************************!*\
  !*** ./src/BABYLON/Misc/observable.ts ***!
  \****************************************/
/*! exports provided: EventState, Observer, MultiObserver, Observable */
/*! exports used: Observable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export EventState */\n/* unused harmony export Observer */\n/* unused harmony export MultiObserver */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Observable; });\n/**\r\n * A class serves as a medium between the observable and its observers\r\n */\r\nvar EventState = /** @class */ (function () {\r\n    /**\r\n     * Create a new EventState\r\n     * @param mask defines the mask associated with this state\r\n     * @param skipNextObservers defines a flag which will instruct the observable to skip following observers when set to true\r\n     * @param target defines the original target of the state\r\n     * @param currentTarget defines the current target of the state\r\n     */\r\n    function EventState(mask, skipNextObservers, target, currentTarget) {\r\n        if (skipNextObservers === void 0) { skipNextObservers = false; }\r\n        this.initalize(mask, skipNextObservers, target, currentTarget);\r\n    }\r\n    /**\r\n     * Initialize the current event state\r\n     * @param mask defines the mask associated with this state\r\n     * @param skipNextObservers defines a flag which will instruct the observable to skip following observers when set to true\r\n     * @param target defines the original target of the state\r\n     * @param currentTarget defines the current target of the state\r\n     * @returns the current event state\r\n     */\r\n    EventState.prototype.initalize = function (mask, skipNextObservers, target, currentTarget) {\r\n        if (skipNextObservers === void 0) { skipNextObservers = false; }\r\n        this.mask = mask;\r\n        this.skipNextObservers = skipNextObservers;\r\n        this.target = target;\r\n        this.currentTarget = currentTarget;\r\n        return this;\r\n    };\r\n    return EventState;\r\n}());\r\n\r\n/**\r\n * Represent an Observer registered to a given Observable object.\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    /**\r\n     * Creates a new observer\r\n     * @param callback defines the callback to call when the observer is notified\r\n     * @param mask defines the mask of the observer (used to filter notifications)\r\n     * @param scope defines the current scope used to restore the JS context\r\n     */\r\n    function Observer(\r\n    /**\r\n     * Defines the callback to call when the observer is notified\r\n     */\r\n    callback, \r\n    /**\r\n     * Defines the mask of the observer (used to filter notifications)\r\n     */\r\n    mask, \r\n    /**\r\n     * Defines the current scope used to restore the JS context\r\n     */\r\n    scope) {\r\n        if (scope === void 0) { scope = null; }\r\n        this.callback = callback;\r\n        this.mask = mask;\r\n        this.scope = scope;\r\n        /** @hidden */\r\n        this._willBeUnregistered = false;\r\n        /**\r\n         * Gets or sets a property defining that the observer as to be unregistered after the next notification\r\n         */\r\n        this.unregisterOnNextCall = false;\r\n    }\r\n    return Observer;\r\n}());\r\n\r\n/**\r\n * Represent a list of observers registered to multiple Observables object.\r\n */\r\nvar MultiObserver = /** @class */ (function () {\r\n    function MultiObserver() {\r\n    }\r\n    /**\r\n     * Release associated resources\r\n     */\r\n    MultiObserver.prototype.dispose = function () {\r\n        if (this._observers && this._observables) {\r\n            for (var index = 0; index < this._observers.length; index++) {\r\n                this._observables[index].remove(this._observers[index]);\r\n            }\r\n        }\r\n        this._observers = null;\r\n        this._observables = null;\r\n    };\r\n    /**\r\n     * Raise a callback when one of the observable will notify\r\n     * @param observables defines a list of observables to watch\r\n     * @param callback defines the callback to call on notification\r\n     * @param mask defines the mask used to filter notifications\r\n     * @param scope defines the current scope used to restore the JS context\r\n     * @returns the new MultiObserver\r\n     */\r\n    MultiObserver.Watch = function (observables, callback, mask, scope) {\r\n        if (mask === void 0) { mask = -1; }\r\n        if (scope === void 0) { scope = null; }\r\n        var result = new MultiObserver();\r\n        result._observers = new Array();\r\n        result._observables = observables;\r\n        for (var _i = 0, observables_1 = observables; _i < observables_1.length; _i++) {\r\n            var observable = observables_1[_i];\r\n            var observer = observable.add(callback, mask, false, scope);\r\n            if (observer) {\r\n                result._observers.push(observer);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    return MultiObserver;\r\n}());\r\n\r\n/**\r\n * The Observable class is a simple implementation of the Observable pattern.\r\n *\r\n * There's one slight particularity though: a given Observable can notify its observer using a particular mask value, only the Observers registered with this mask value will be notified.\r\n * This enable a more fine grained execution without having to rely on multiple different Observable objects.\r\n * For instance you may have a given Observable that have four different types of notifications: Move (mask = 0x01), Stop (mask = 0x02), Turn Right (mask = 0X04), Turn Left (mask = 0X08).\r\n * A given observer can register itself with only Move and Stop (mask = 0x03), then it will only be notified when one of these two occurs and will never be for Turn Left/Right.\r\n */\r\nvar Observable = /** @class */ (function () {\r\n    /**\r\n     * Creates a new observable\r\n     * @param onObserverAdded defines a callback to call when a new observer is added\r\n     */\r\n    function Observable(onObserverAdded) {\r\n        this._observers = new Array();\r\n        this._eventState = new EventState(0);\r\n        if (onObserverAdded) {\r\n            this._onObserverAdded = onObserverAdded;\r\n        }\r\n    }\r\n    Object.defineProperty(Observable.prototype, \"observers\", {\r\n        /**\r\n         * Gets the list of observers\r\n         */\r\n        get: function () {\r\n            return this._observers;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Create a new Observer with the specified callback\r\n     * @param callback the callback that will be executed for that Observer\r\n     * @param mask the mask used to filter observers\r\n     * @param insertFirst if true the callback will be inserted at the first position, hence executed before the others ones. If false (default behavior) the callback will be inserted at the last position, executed after all the others already present.\r\n     * @param scope optional scope for the callback to be called from\r\n     * @param unregisterOnFirstCall defines if the observer as to be unregistered after the next notification\r\n     * @returns the new observer created for the callback\r\n     */\r\n    Observable.prototype.add = function (callback, mask, insertFirst, scope, unregisterOnFirstCall) {\r\n        if (mask === void 0) { mask = -1; }\r\n        if (insertFirst === void 0) { insertFirst = false; }\r\n        if (scope === void 0) { scope = null; }\r\n        if (unregisterOnFirstCall === void 0) { unregisterOnFirstCall = false; }\r\n        if (!callback) {\r\n            return null;\r\n        }\r\n        var observer = new Observer(callback, mask, scope);\r\n        observer.unregisterOnNextCall = unregisterOnFirstCall;\r\n        if (insertFirst) {\r\n            this._observers.unshift(observer);\r\n        }\r\n        else {\r\n            this._observers.push(observer);\r\n        }\r\n        if (this._onObserverAdded) {\r\n            this._onObserverAdded(observer);\r\n        }\r\n        return observer;\r\n    };\r\n    /**\r\n     * Create a new Observer with the specified callback and unregisters after the next notification\r\n     * @param callback the callback that will be executed for that Observer\r\n     * @returns the new observer created for the callback\r\n     */\r\n    Observable.prototype.addOnce = function (callback) {\r\n        return this.add(callback, undefined, undefined, undefined, true);\r\n    };\r\n    /**\r\n     * Remove an Observer from the Observable object\r\n     * @param observer the instance of the Observer to remove\r\n     * @returns false if it doesn't belong to this Observable\r\n     */\r\n    Observable.prototype.remove = function (observer) {\r\n        if (!observer) {\r\n            return false;\r\n        }\r\n        var index = this._observers.indexOf(observer);\r\n        if (index !== -1) {\r\n            this._deferUnregister(observer);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Remove a callback from the Observable object\r\n     * @param callback the callback to remove\r\n     * @param scope optional scope. If used only the callbacks with this scope will be removed\r\n     * @returns false if it doesn't belong to this Observable\r\n    */\r\n    Observable.prototype.removeCallback = function (callback, scope) {\r\n        for (var index = 0; index < this._observers.length; index++) {\r\n            var observer = this._observers[index];\r\n            if (observer._willBeUnregistered) {\r\n                continue;\r\n            }\r\n            if (observer.callback === callback && (!scope || scope === observer.scope)) {\r\n                this._deferUnregister(observer);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Observable.prototype._deferUnregister = function (observer) {\r\n        var _this = this;\r\n        observer.unregisterOnNextCall = false;\r\n        observer._willBeUnregistered = true;\r\n        // PI_BEGIN - 20200513 - 延时操作调整,优化 setTimeout 使用\r\n        // setTimeout(() => {\r\n        //     this._remove(observer);\r\n        // }, 0);\r\n        // ///////////////////////////////////////\r\n        Promise.resolve().then(function () {\r\n            _this._remove(observer);\r\n        });\r\n        // PI_END\r\n    };\r\n    // This should only be called when not iterating over _observers to avoid callback skipping.\r\n    // Removes an observer from the _observer Array.\r\n    Observable.prototype._remove = function (observer) {\r\n        if (!observer) {\r\n            return false;\r\n        }\r\n        var index = this._observers.indexOf(observer);\r\n        if (index !== -1) {\r\n            this._observers.splice(index, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Moves the observable to the top of the observer list making it get called first when notified\r\n     * @param observer the observer to move\r\n     */\r\n    Observable.prototype.makeObserverTopPriority = function (observer) {\r\n        this._remove(observer);\r\n        this._observers.unshift(observer);\r\n    };\r\n    /**\r\n     * Moves the observable to the bottom of the observer list making it get called last when notified\r\n     * @param observer the observer to move\r\n     */\r\n    Observable.prototype.makeObserverBottomPriority = function (observer) {\r\n        this._remove(observer);\r\n        this._observers.push(observer);\r\n    };\r\n    /**\r\n     * Notify all Observers by calling their respective callback with the given data\r\n     * Will return true if all observers were executed, false if an observer set skipNextObservers to true, then prevent the subsequent ones to execute\r\n     * @param eventData defines the data to send to all observers\r\n     * @param mask defines the mask of the current notification (observers with incompatible mask (ie mask & observer.mask === 0) will not be notified)\r\n     * @param target defines the original target of the state\r\n     * @param currentTarget defines the current target of the state\r\n     * @param userInfo defines any user info to send to observers\r\n     * @returns false if the complete observer chain was not processed (because one observer set the skipNextObservers to true)\r\n     */\r\n    Observable.prototype.notifyObservers = function (eventData, mask, target, currentTarget, userInfo) {\r\n        if (mask === void 0) { mask = -1; }\r\n        if (!this._observers.length) {\r\n            return true;\r\n        }\r\n        var state = this._eventState;\r\n        state.mask = mask;\r\n        state.target = target;\r\n        state.currentTarget = currentTarget;\r\n        state.skipNextObservers = false;\r\n        state.lastReturnValue = eventData;\r\n        state.userInfo = userInfo;\r\n        for (var _i = 0, _a = this._observers; _i < _a.length; _i++) {\r\n            var obs = _a[_i];\r\n            if (obs._willBeUnregistered) {\r\n                continue;\r\n            }\r\n            if (obs.mask & mask) {\r\n                if (obs.scope) {\r\n                    state.lastReturnValue = obs.callback.apply(obs.scope, [eventData, state]);\r\n                }\r\n                else {\r\n                    state.lastReturnValue = obs.callback(eventData, state);\r\n                }\r\n                if (obs.unregisterOnNextCall) {\r\n                    this._deferUnregister(obs);\r\n                }\r\n            }\r\n            if (state.skipNextObservers) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Calling this will execute each callback, expecting it to be a promise or return a value.\r\n     * If at any point in the chain one function fails, the promise will fail and the execution will not continue.\r\n     * This is useful when a chain of events (sometimes async events) is needed to initialize a certain object\r\n     * and it is crucial that all callbacks will be executed.\r\n     * The order of the callbacks is kept, callbacks are not executed parallel.\r\n     *\r\n     * @param eventData The data to be sent to each callback\r\n     * @param mask is used to filter observers defaults to -1\r\n     * @param target defines the callback target (see EventState)\r\n     * @param currentTarget defines he current object in the bubbling phase\r\n     * @param userInfo defines any user info to send to observers\r\n     * @returns {Promise<T>} will return a Promise than resolves when all callbacks executed successfully.\r\n     */\r\n    Observable.prototype.notifyObserversWithPromise = function (eventData, mask, target, currentTarget, userInfo) {\r\n        var _this = this;\r\n        if (mask === void 0) { mask = -1; }\r\n        // create an empty promise\r\n        var p = Promise.resolve(eventData);\r\n        // no observers? return this promise.\r\n        if (!this._observers.length) {\r\n            return p;\r\n        }\r\n        var state = this._eventState;\r\n        state.mask = mask;\r\n        state.target = target;\r\n        state.currentTarget = currentTarget;\r\n        state.skipNextObservers = false;\r\n        state.userInfo = userInfo;\r\n        // execute one callback after another (not using Promise.all, the order is important)\r\n        this._observers.forEach(function (obs) {\r\n            if (state.skipNextObservers) {\r\n                return;\r\n            }\r\n            if (obs._willBeUnregistered) {\r\n                return;\r\n            }\r\n            if (obs.mask & mask) {\r\n                if (obs.scope) {\r\n                    p = p.then(function (lastReturnedValue) {\r\n                        state.lastReturnValue = lastReturnedValue;\r\n                        return obs.callback.apply(obs.scope, [eventData, state]);\r\n                    });\r\n                }\r\n                else {\r\n                    p = p.then(function (lastReturnedValue) {\r\n                        state.lastReturnValue = lastReturnedValue;\r\n                        return obs.callback(eventData, state);\r\n                    });\r\n                }\r\n                if (obs.unregisterOnNextCall) {\r\n                    _this._deferUnregister(obs);\r\n                }\r\n            }\r\n        });\r\n        // return the eventData\r\n        return p.then(function () { return eventData; });\r\n    };\r\n    /**\r\n     * Notify a specific observer\r\n     * @param observer defines the observer to notify\r\n     * @param eventData defines the data to be sent to each callback\r\n     * @param mask is used to filter observers defaults to -1\r\n     */\r\n    Observable.prototype.notifyObserver = function (observer, eventData, mask) {\r\n        if (mask === void 0) { mask = -1; }\r\n        var state = this._eventState;\r\n        state.mask = mask;\r\n        state.skipNextObservers = false;\r\n        observer.callback(eventData, state);\r\n    };\r\n    /**\r\n     * Gets a boolean indicating if the observable has at least one observer\r\n     * @returns true is the Observable has at least one Observer registered\r\n     */\r\n    Observable.prototype.hasObservers = function () {\r\n        return this._observers.length > 0;\r\n    };\r\n    /**\r\n    * Clear the list of observers\r\n    */\r\n    Observable.prototype.clear = function () {\r\n        this._observers = new Array();\r\n        this._onObserverAdded = null;\r\n    };\r\n    /**\r\n     * Clone the current observable\r\n     * @returns a new observable\r\n     */\r\n    Observable.prototype.clone = function () {\r\n        var result = new Observable();\r\n        result._observers = this._observers.slice(0);\r\n        return result;\r\n    };\r\n    /**\r\n     * Does this observable handles observer registered with a given mask\r\n     * @param mask defines the mask to be tested\r\n     * @return whether or not one observer registered with the given mask is handeled\r\n    **/\r\n    Observable.prototype.hasSpecificMask = function (mask) {\r\n        if (mask === void 0) { mask = -1; }\r\n        for (var _i = 0, _a = this._observers; _i < _a.length; _i++) {\r\n            var obs = _a[_i];\r\n            if (obs.mask & mask || obs.mask === mask) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return Observable;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Misc/observable.ts?");

/***/ }),

/***/ "./src/BABYLON/Misc/typeStore.ts":
/*!***************************************!*\
  !*** ./src/BABYLON/Misc/typeStore.ts ***!
  \***************************************/
/*! exports provided: _TypeStore */
/*! exports used: _TypeStore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return _TypeStore; });\n/** @hidden */\r\nvar _TypeStore = /** @class */ (function () {\r\n    function _TypeStore() {\r\n    }\r\n    /** @hidden */\r\n    _TypeStore.GetClass = function (fqdn) {\r\n        if (this.RegisteredTypes && this.RegisteredTypes[fqdn]) {\r\n            return this.RegisteredTypes[fqdn];\r\n        }\r\n        return null;\r\n    };\r\n    /** @hidden */\r\n    _TypeStore.RegisteredTypes = {};\r\n    return _TypeStore;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Misc/typeStore.ts?");

/***/ }),

/***/ "./src/BABYLON/Navigation/INavigationEngine.ts":
/*!*****************************************************!*\
  !*** ./src/BABYLON/Navigation/INavigationEngine.ts ***!
  \*****************************************************/
/*! no static exports found */
/*! exports used: RecastJSPlugin, Scene, TransformNode */
/***/ (function(module, exports) {

eval("\n\n//# sourceURL=webpack:///./src/BABYLON/Navigation/INavigationEngine.ts?");

/***/ }),

/***/ "./src/BABYLON/Navigation/Plugins/index.ts":
/*!*************************************************!*\
  !*** ./src/BABYLON/Navigation/Plugins/index.ts ***!
  \*************************************************/
/*! exports provided: Scene, TransformNode, RecastJSPlugin, RecastJSCrowd */
/*! exports used: RecastJSPlugin, Scene, TransformNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var _recastJSPlugin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./recastJSPlugin */ \"./src/BABYLON/Navigation/Plugins/recastJSPlugin.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return _recastJSPlugin__WEBPACK_IMPORTED_MODULE_0__[\"a\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return _recastJSPlugin__WEBPACK_IMPORTED_MODULE_0__[\"b\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return _recastJSPlugin__WEBPACK_IMPORTED_MODULE_0__[\"c\"]; });\n\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Navigation/Plugins/index.ts?");

/***/ }),

/***/ "./src/BABYLON/Navigation/Plugins/recastJSPlugin.ts":
/*!**********************************************************!*\
  !*** ./src/BABYLON/Navigation/Plugins/recastJSPlugin.ts ***!
  \**********************************************************/
/*! exports provided: Scene, TransformNode, RecastJSPlugin, RecastJSCrowd */
/*! exports used: RecastJSPlugin, Scene, TransformNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Scene; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return TransformNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RecastJSPlugin; });\n/* unused harmony export RecastJSCrowd */\n/* harmony import */ var _Misc_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Misc/logger */ \"./src/BABYLON/Misc/logger.ts\");\n/* harmony import */ var _Maths_math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../Maths/math */ \"./src/BABYLON/Maths/math.ts\");\n/* harmony import */ var _Misc_observable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Misc/observable */ \"./src/BABYLON/Misc/observable.ts\");\n\r\n// import { VertexData } from \"../../Meshes/mesh.vertexData\";\r\n// import { Mesh } from \"../../Meshes/mesh\";\r\n// import { Scene } from \"../../scene\";\r\n\r\n// import { TransformNode } from \"../../Meshes/transformNode\";\r\n\r\n// import { VertexBuffer } from \"../../Meshes/buffer\";\r\nvar Scene = /** @class */ (function () {\r\n    function Scene() {\r\n        this.onBeforeAnimationsObservable = new _Misc_observable__WEBPACK_IMPORTED_MODULE_2__[/* Observable */ \"a\"]();\r\n        this.getDeltaTime = function () {\r\n            return 16;\r\n        };\r\n    }\r\n    return Scene;\r\n}());\r\n\r\nvar TransformNode = /** @class */ (function () {\r\n    function TransformNode() {\r\n        this.position = _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"].Zero();\r\n        this.rotation = _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"].Zero();\r\n        this.scaling = _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"].One();\r\n    }\r\n    return TransformNode;\r\n}());\r\n\r\n/**\r\n * RecastJS navigation plugin\r\n */\r\nvar RecastJSPlugin = /** @class */ (function () {\r\n    /**\r\n     * Initializes the recastJS plugin\r\n     * @param recastInjection can be used to inject your own recast reference\r\n     */\r\n    function RecastJSPlugin(recastInjection) {\r\n        if (recastInjection === void 0) { recastInjection = Recast; }\r\n        /**\r\n         * Reference to the Recast library\r\n         */\r\n        this.bjsRECAST = {};\r\n        /**\r\n         * plugin name\r\n         */\r\n        this.name = \"RecastJSPlugin\";\r\n        this._maximumSubStepCount = 10;\r\n        this._timeStep = 1 / 60;\r\n        if (typeof recastInjection === \"function\") {\r\n            recastInjection(this.bjsRECAST);\r\n        }\r\n        else {\r\n            this.bjsRECAST = recastInjection;\r\n        }\r\n        if (!this.isSupported()) {\r\n            _Misc_logger__WEBPACK_IMPORTED_MODULE_0__[/* Logger */ \"a\"].Error(\"RecastJS is not available. Please make sure you included the js file.\");\r\n            return;\r\n        }\r\n        this.setTimeStep();\r\n    }\r\n    /**\r\n     * Set the time step of the navigation tick update.\r\n     * Default is 1/60.\r\n     * A value of 0 will disable fixed time update\r\n     * @param newTimeStep the new timestep to apply to this world.\r\n     */\r\n    RecastJSPlugin.prototype.setTimeStep = function (newTimeStep) {\r\n        if (newTimeStep === void 0) { newTimeStep = 1 / 60; }\r\n        this._timeStep = newTimeStep;\r\n    };\r\n    /**\r\n     * Get the time step of the navigation tick update.\r\n     * @returns the current time step\r\n     */\r\n    RecastJSPlugin.prototype.getTimeStep = function () {\r\n        return this._timeStep;\r\n    };\r\n    /**\r\n     * If delta time in navigation tick update is greater than the time step\r\n     * a number of sub iterations are done. If more iterations are need to reach deltatime\r\n     * they will be discarded.\r\n     * A value of 0 will set to no maximum and update will use as many substeps as needed\r\n     * @param newStepCount the maximum number of iterations\r\n     */\r\n    RecastJSPlugin.prototype.setMaximumSubStepCount = function (newStepCount) {\r\n        if (newStepCount === void 0) { newStepCount = 10; }\r\n        this._maximumSubStepCount = newStepCount;\r\n    };\r\n    /**\r\n     * Get the maximum number of iterations per navigation tick update\r\n     * @returns the maximum number of iterations\r\n     */\r\n    RecastJSPlugin.prototype.getMaximumSubStepCount = function () {\r\n        return this._maximumSubStepCount;\r\n    };\r\n    // /**\r\n    //  * Creates a navigation mesh\r\n    //  * @param meshes array of all the geometry used to compute the navigatio mesh\r\n    //  * @param parameters bunch of parameters used to filter geometry\r\n    //  */\r\n    // createNavMesh(meshes: Array<Mesh>, parameters: INavMeshParameters): void {\r\n    //     const rc = new this.bjsRECAST.rcConfig();\r\n    //     rc.cs = parameters.cs;\r\n    //     rc.ch = parameters.ch;\r\n    //     rc.borderSize = 0;\r\n    //     rc.tileSize = 0;\r\n    //     rc.walkableSlopeAngle = parameters.walkableSlopeAngle;\r\n    //     rc.walkableHeight = parameters.walkableHeight;\r\n    //     rc.walkableClimb = parameters.walkableClimb;\r\n    //     rc.walkableRadius = parameters.walkableRadius;\r\n    //     rc.maxEdgeLen = parameters.maxEdgeLen;\r\n    //     rc.maxSimplificationError = parameters.maxSimplificationError;\r\n    //     rc.minRegionArea = parameters.minRegionArea;\r\n    //     rc.mergeRegionArea = parameters.mergeRegionArea;\r\n    //     rc.maxVertsPerPoly = parameters.maxVertsPerPoly;\r\n    //     rc.detailSampleDist = parameters.detailSampleDist;\r\n    //     rc.detailSampleMaxError = parameters.detailSampleMaxError;\r\n    //     this.navMesh = new this.bjsRECAST.NavMesh();\r\n    //     var index: number;\r\n    //     var tri: number;\r\n    //     var pt: number;\r\n    //     var indices = [];\r\n    //     var positions = [];\r\n    //     var offset = 0;\r\n    //     for (index = 0; index < meshes.length; index++) {\r\n    //         if (meshes[index]) {\r\n    //             var mesh = meshes[index];\r\n    //             const meshIndices = mesh.getIndices();\r\n    //             if (!meshIndices) {\r\n    //                 continue;\r\n    //             }\r\n    //             const meshPositions = mesh.getVerticesData(VertexBuffer.PositionKind, false, false);\r\n    //             if (!meshPositions) {\r\n    //                 continue;\r\n    //             }\r\n    //             const wm = mesh.computeWorldMatrix(true);\r\n    //             for (tri = 0; tri < meshIndices.length; tri++) {\r\n    //                 indices.push(meshIndices[tri] + offset);\r\n    //             }\r\n    //             var transformed = Vector3.Zero();\r\n    //             var position = Vector3.Zero();\r\n    //             for (pt = 0; pt < meshPositions.length; pt += 3) {\r\n    //                 Vector3.FromArrayToRef(meshPositions, pt, position);\r\n    //                 Vector3.TransformCoordinatesToRef(position, wm, transformed);\r\n    //                 positions.push(transformed.x, transformed.y, transformed.z);\r\n    //             }\r\n    //             offset += meshPositions.length / 3;\r\n    //         }\r\n    //     }\r\n    //     this.navMesh.build(positions, offset, indices, indices.length, rc);\r\n    // }\r\n    // /**\r\n    //  * Create a navigation mesh debug mesh\r\n    //  * @param scene is where the mesh will be added\r\n    //  * @returns debug display mesh\r\n    //  */\r\n    // createDebugNavMesh(scene: Scene): Mesh {\r\n    //     var tri: number;\r\n    //     var pt: number;\r\n    //     var debugNavMesh = this.navMesh.getDebugNavMesh();\r\n    //     let triangleCount = debugNavMesh.getTriangleCount();\r\n    //     var indices = [];\r\n    //     var positions = [];\r\n    //     for (tri = 0; tri < triangleCount * 3; tri++)\r\n    //     {\r\n    //         indices.push(tri);\r\n    //     }\r\n    //     for (tri = 0; tri < triangleCount; tri++)\r\n    //     {\r\n    //         for (pt = 0; pt < 3 ; pt++)\r\n    //         {\r\n    //             let point = debugNavMesh.getTriangle(tri).getPoint(pt);\r\n    //             positions.push(point.x, point.y, point.z);\r\n    //         }\r\n    //     }\r\n    //     var mesh = new Mesh(\"NavMeshDebug\", scene);\r\n    //     var vertexData = new VertexData();\r\n    //     vertexData.indices = indices;\r\n    //     vertexData.positions = positions;\r\n    //     vertexData.applyToMesh(mesh, false);\r\n    //     return mesh;\r\n    // }\r\n    /**\r\n     * Get a navigation mesh constrained position, closest to the parameter position\r\n     * @param position world position\r\n     * @returns the closest point to position constrained by the navigation mesh\r\n     */\r\n    RecastJSPlugin.prototype.getClosestPoint = function (position) {\r\n        var p = new this.bjsRECAST.Vec3(position.x, position.y, position.z);\r\n        var ret = this.navMesh.getClosestPoint(p);\r\n        var pr = new _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"](ret.x, ret.y, ret.z);\r\n        return pr;\r\n    };\r\n    /**\r\n     * Get a navigation mesh constrained position, closest to the parameter position\r\n     * @param position world position\r\n     * @param result output the closest point to position constrained by the navigation mesh\r\n     */\r\n    RecastJSPlugin.prototype.getClosestPointToRef = function (position, result) {\r\n        var p = new this.bjsRECAST.Vec3(position.x, position.y, position.z);\r\n        var ret = this.navMesh.getClosestPoint(p);\r\n        result.set(ret.x, ret.y, ret.z);\r\n    };\r\n    /**\r\n     * Get a navigation mesh constrained position, within a particular radius\r\n     * @param position world position\r\n     * @param maxRadius the maximum distance to the constrained world position\r\n     * @returns the closest point to position constrained by the navigation mesh\r\n     */\r\n    RecastJSPlugin.prototype.getRandomPointAround = function (position, maxRadius) {\r\n        var p = new this.bjsRECAST.Vec3(position.x, position.y, position.z);\r\n        var ret = this.navMesh.getRandomPointAround(p, maxRadius);\r\n        var pr = new _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"](ret.x, ret.y, ret.z);\r\n        return pr;\r\n    };\r\n    /**\r\n     * Get a navigation mesh constrained position, within a particular radius\r\n     * @param position world position\r\n     * @param maxRadius the maximum distance to the constrained world position\r\n     * @param result output the closest point to position constrained by the navigation mesh\r\n     */\r\n    RecastJSPlugin.prototype.getRandomPointAroundToRef = function (position, maxRadius, result) {\r\n        var p = new this.bjsRECAST.Vec3(position.x, position.y, position.z);\r\n        var ret = this.navMesh.getRandomPointAround(p, maxRadius);\r\n        result.set(ret.x, ret.y, ret.z);\r\n    };\r\n    /**\r\n     * Compute the final position from a segment made of destination-position\r\n     * @param position world position\r\n     * @param destination world position\r\n     * @returns the resulting point along the navmesh\r\n     */\r\n    RecastJSPlugin.prototype.moveAlong = function (position, destination) {\r\n        var p = new this.bjsRECAST.Vec3(position.x, position.y, position.z);\r\n        var d = new this.bjsRECAST.Vec3(destination.x, destination.y, destination.z);\r\n        var ret = this.navMesh.moveAlong(p, d);\r\n        var pr = new _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"](ret.x, ret.y, ret.z);\r\n        return pr;\r\n    };\r\n    /**\r\n     * Compute the final position from a segment made of destination-position\r\n     * @param position world position\r\n     * @param destination world position\r\n     * @param result output the resulting point along the navmesh\r\n     */\r\n    RecastJSPlugin.prototype.moveAlongToRef = function (position, destination, result) {\r\n        var p = new this.bjsRECAST.Vec3(position.x, position.y, position.z);\r\n        var d = new this.bjsRECAST.Vec3(destination.x, destination.y, destination.z);\r\n        var ret = this.navMesh.moveAlong(p, d);\r\n        result.set(ret.x, ret.y, ret.z);\r\n    };\r\n    /**\r\n     * Compute a navigation path from start to end. Returns an empty array if no path can be computed\r\n     * @param start world position\r\n     * @param end world position\r\n     * @returns array containing world position composing the path\r\n     */\r\n    RecastJSPlugin.prototype.computePath = function (start, end) {\r\n        var pt;\r\n        var startPos = new this.bjsRECAST.Vec3(start.x, start.y, start.z);\r\n        var endPos = new this.bjsRECAST.Vec3(end.x, end.y, end.z);\r\n        var navPath = this.navMesh.computePath(startPos, endPos);\r\n        var pointCount = navPath.getPointCount();\r\n        var positions = [];\r\n        for (pt = 0; pt < pointCount; pt++) {\r\n            var p = navPath.getPoint(pt);\r\n            positions.push(new _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"](p.x, p.y, p.z));\r\n        }\r\n        return positions;\r\n    };\r\n    /**\r\n     * Create a new Crowd so you can add agents\r\n     * @param maxAgents the maximum agent count in the crowd\r\n     * @param maxAgentRadius the maximum radius an agent can have\r\n     * @param scene to attach the crowd to\r\n     * @returns the crowd you can add agents to\r\n     */\r\n    RecastJSPlugin.prototype.createCrowd = function (maxAgents, maxAgentRadius, scene) {\r\n        var crowd = new RecastJSCrowd(this, maxAgents, maxAgentRadius, scene);\r\n        return crowd;\r\n    };\r\n    /**\r\n     * Set the Bounding box extent for doing spatial queries (getClosestPoint, getRandomPointAround, ...)\r\n     * The queries will try to find a solution within those bounds\r\n     * default is (1,1,1)\r\n     * @param extent x,y,z value that define the extent around the queries point of reference\r\n     */\r\n    RecastJSPlugin.prototype.setDefaultQueryExtent = function (extent) {\r\n        var ext = new this.bjsRECAST.Vec3(extent.x, extent.y, extent.z);\r\n        this.navMesh.setDefaultQueryExtent(ext);\r\n    };\r\n    /**\r\n     * Get the Bounding box extent specified by setDefaultQueryExtent\r\n     * @returns the box extent values\r\n     */\r\n    RecastJSPlugin.prototype.getDefaultQueryExtent = function () {\r\n        var p = this.navMesh.getDefaultQueryExtent();\r\n        return new _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"](p.x, p.y, p.z);\r\n    };\r\n    /**\r\n     * build the navmesh from a previously saved state using getNavmeshData\r\n     * @param data the Uint8Array returned by getNavmeshData\r\n     */\r\n    RecastJSPlugin.prototype.buildFromNavmeshData = function (data) {\r\n        var nDataBytes = data.length * data.BYTES_PER_ELEMENT;\r\n        var dataPtr = this.bjsRECAST._malloc(nDataBytes);\r\n        var dataHeap = new Uint8Array(this.bjsRECAST.HEAPU8.buffer, dataPtr, nDataBytes);\r\n        dataHeap.set(data);\r\n        var buf = new this.bjsRECAST.NavmeshData();\r\n        buf.dataPointer = dataHeap.byteOffset;\r\n        buf.size = data.length;\r\n        this.navMesh = new this.bjsRECAST.NavMesh();\r\n        this.navMesh.buildFromNavmeshData(buf);\r\n        // Free memory\r\n        this.bjsRECAST._free(dataHeap.byteOffset);\r\n    };\r\n    /**\r\n     * returns the navmesh data that can be used later. The navmesh must be built before retrieving the data\r\n     * @returns data the Uint8Array that can be saved and reused\r\n     */\r\n    RecastJSPlugin.prototype.getNavmeshData = function () {\r\n        var navmeshData = this.navMesh.getNavmeshData();\r\n        var arrView = new Uint8Array(this.bjsRECAST.HEAPU8.buffer, navmeshData.dataPointer, navmeshData.size);\r\n        var ret = new Uint8Array(navmeshData.size);\r\n        ret.set(arrView);\r\n        this.navMesh.freeNavmeshData(navmeshData);\r\n        return ret;\r\n    };\r\n    /**\r\n     * Get the Bounding box extent result specified by setDefaultQueryExtent\r\n     * @param result output the box extent values\r\n     */\r\n    RecastJSPlugin.prototype.getDefaultQueryExtentToRef = function (result) {\r\n        var p = this.navMesh.getDefaultQueryExtent();\r\n        result.set(p.x, p.y, p.z);\r\n    };\r\n    /**\r\n     * Disposes\r\n     */\r\n    RecastJSPlugin.prototype.dispose = function () {\r\n    };\r\n    /**\r\n     * If this plugin is supported\r\n     * @returns true if plugin is supported\r\n     */\r\n    RecastJSPlugin.prototype.isSupported = function () {\r\n        return this.bjsRECAST !== undefined;\r\n    };\r\n    return RecastJSPlugin;\r\n}());\r\n\r\n/**\r\n * Recast detour crowd implementation\r\n */\r\nvar RecastJSCrowd = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     * @param plugin recastJS plugin\r\n     * @param maxAgents the maximum agent count in the crowd\r\n     * @param maxAgentRadius the maximum radius an agent can have\r\n     * @param scene to attach the crowd to\r\n     * @returns the crowd you can add agents to\r\n     */\r\n    function RecastJSCrowd(plugin, maxAgents, maxAgentRadius, scene) {\r\n        var _this = this;\r\n        /**\r\n         * Link to the detour crowd\r\n         */\r\n        this.recastCrowd = {};\r\n        /**\r\n         * One transform per agent\r\n         */\r\n        this.transforms = new Array();\r\n        /**\r\n         * All agents created\r\n         */\r\n        this.agents = new Array();\r\n        /**\r\n         * Observer for crowd updates\r\n         */\r\n        this._onBeforeAnimationsObserver = null;\r\n        this.bjsRECASTPlugin = plugin;\r\n        this.recastCrowd = new this.bjsRECASTPlugin.bjsRECAST.Crowd(maxAgents, maxAgentRadius, this.bjsRECASTPlugin.navMesh.getNavMesh());\r\n        this._scene = scene;\r\n        this._onBeforeAnimationsObserver = scene.onBeforeAnimationsObservable.add(function () {\r\n            _this.update(scene.getDeltaTime() * 0.001);\r\n        });\r\n    }\r\n    /**\r\n     * Add a new agent to the crowd with the specified parameter a corresponding transformNode.\r\n     * You can attach anything to that node. The node position is updated in the scene update tick.\r\n     * @param pos world position that will be constrained by the navigation mesh\r\n     * @param parameters agent parameters\r\n     * @param transform hooked to the agent that will be update by the scene\r\n     * @returns agent index\r\n     */\r\n    RecastJSCrowd.prototype.addAgent = function (pos, parameters, transform) {\r\n        var agentParams = new this.bjsRECASTPlugin.bjsRECAST.dtCrowdAgentParams();\r\n        agentParams.radius = parameters.radius;\r\n        agentParams.height = parameters.height;\r\n        agentParams.maxAcceleration = parameters.maxAcceleration;\r\n        agentParams.maxSpeed = parameters.maxSpeed;\r\n        agentParams.collisionQueryRange = parameters.collisionQueryRange;\r\n        agentParams.pathOptimizationRange = parameters.pathOptimizationRange;\r\n        agentParams.separationWeight = parameters.separationWeight;\r\n        agentParams.updateFlags = 7;\r\n        agentParams.obstacleAvoidanceType = 0;\r\n        agentParams.queryFilterType = 0;\r\n        agentParams.userData = 0;\r\n        var agentIndex = this.recastCrowd.addAgent(new this.bjsRECASTPlugin.bjsRECAST.Vec3(pos.x, pos.y, pos.z), agentParams);\r\n        this.transforms.push(transform);\r\n        this.agents.push(agentIndex);\r\n        return agentIndex;\r\n    };\r\n    /**\r\n     * Returns the agent position in world space\r\n     * @param index agent index returned by addAgent\r\n     * @returns world space position\r\n     */\r\n    RecastJSCrowd.prototype.getAgentPosition = function (index) {\r\n        var agentPos = this.recastCrowd.getAgentPosition(index);\r\n        return new _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"](agentPos.x, agentPos.y, agentPos.z);\r\n    };\r\n    /**\r\n     * Returns the agent position result in world space\r\n     * @param index agent index returned by addAgent\r\n     * @param result output world space position\r\n     */\r\n    RecastJSCrowd.prototype.getAgentPositionToRef = function (index, result) {\r\n        var agentPos = this.recastCrowd.getAgentPosition(index);\r\n        result.set(agentPos.x, agentPos.y, agentPos.z);\r\n    };\r\n    /**\r\n     * Returns the agent velocity in world space\r\n     * @param index agent index returned by addAgent\r\n     * @returns world space velocity\r\n     */\r\n    RecastJSCrowd.prototype.getAgentVelocity = function (index) {\r\n        var agentVel = this.recastCrowd.getAgentVelocity(index);\r\n        return new _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"](agentVel.x, agentVel.y, agentVel.z);\r\n    };\r\n    /**\r\n     * Returns the agent velocity result in world space\r\n     * @param index agent index returned by addAgent\r\n     * @param result output world space velocity\r\n     */\r\n    RecastJSCrowd.prototype.getAgentVelocityToRef = function (index, result) {\r\n        var agentVel = this.recastCrowd.getAgentVelocity(index);\r\n        result.set(agentVel.x, agentVel.y, agentVel.z);\r\n    };\r\n    /**\r\n     * Returns the agent next target point on the path\r\n     * @param index agent index returned by addAgent\r\n     * @returns world space position\r\n     */\r\n    RecastJSCrowd.prototype.getAgentNextTargetPath = function (index) {\r\n        var pathTargetPos = this.recastCrowd.getAgentNextTargetPath(index);\r\n        return new _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"](pathTargetPos.x, pathTargetPos.y, pathTargetPos.z);\r\n    };\r\n    /**\r\n     * Returns the agent next target point on the path\r\n     * @param index agent index returned by addAgent\r\n     * @param result output world space position\r\n     */\r\n    RecastJSCrowd.prototype.getAgentNextTargetPathToRef = function (index, result) {\r\n        var pathTargetPos = this.recastCrowd.getAgentNextTargetPath(index);\r\n        result.set(pathTargetPos.x, pathTargetPos.y, pathTargetPos.z);\r\n    };\r\n    /**\r\n     * Gets the agent state\r\n     * @param index agent index returned by addAgent\r\n     * @returns agent state\r\n     */\r\n    RecastJSCrowd.prototype.getAgentState = function (index) {\r\n        return this.recastCrowd.getAgentState(index);\r\n    };\r\n    /**\r\n     * returns true if the agent in over an off mesh link connection\r\n     * @param index agent index returned by addAgent\r\n     * @returns true if over an off mesh link connection\r\n     */\r\n    RecastJSCrowd.prototype.overOffmeshConnection = function (index) {\r\n        return this.recastCrowd.overOffmeshConnection(index);\r\n    };\r\n    /**\r\n     * Asks a particular agent to go to a destination. That destination is constrained by the navigation mesh\r\n     * @param index agent index returned by addAgent\r\n     * @param destination targeted world position\r\n     */\r\n    RecastJSCrowd.prototype.agentGoto = function (index, destination) {\r\n        this.recastCrowd.agentGoto(index, new this.bjsRECASTPlugin.bjsRECAST.Vec3(destination.x, destination.y, destination.z));\r\n    };\r\n    /**\r\n     * Teleport the agent to a new position\r\n     * @param index agent index returned by addAgent\r\n     * @param destination targeted world position\r\n     */\r\n    RecastJSCrowd.prototype.agentTeleport = function (index, destination) {\r\n        this.recastCrowd.agentTeleport(index, new this.bjsRECASTPlugin.bjsRECAST.Vec3(destination.x, destination.y, destination.z));\r\n    };\r\n    /**\r\n     * Update agent parameters\r\n     * @param index agent index returned by addAgent\r\n     * @param parameters agent parameters\r\n     */\r\n    RecastJSCrowd.prototype.updateAgentParameters = function (index, parameters) {\r\n        var agentParams = this.recastCrowd.getAgentParameters(index);\r\n        if (parameters.radius !== undefined) {\r\n            agentParams.radius = parameters.radius;\r\n        }\r\n        if (parameters.height !== undefined) {\r\n            agentParams.height = parameters.height;\r\n        }\r\n        if (parameters.maxAcceleration !== undefined) {\r\n            agentParams.maxAcceleration = parameters.maxAcceleration;\r\n        }\r\n        if (parameters.maxSpeed !== undefined) {\r\n            agentParams.maxSpeed = parameters.maxSpeed;\r\n        }\r\n        if (parameters.collisionQueryRange !== undefined) {\r\n            agentParams.collisionQueryRange = parameters.collisionQueryRange;\r\n        }\r\n        if (parameters.pathOptimizationRange !== undefined) {\r\n            agentParams.pathOptimizationRange = parameters.pathOptimizationRange;\r\n        }\r\n        if (parameters.separationWeight !== undefined) {\r\n            agentParams.separationWeight = parameters.separationWeight;\r\n        }\r\n        this.recastCrowd.setAgentParameters(index, agentParams);\r\n    };\r\n    /**\r\n     * remove a particular agent previously created\r\n     * @param index agent index returned by addAgent\r\n     */\r\n    RecastJSCrowd.prototype.removeAgent = function (index) {\r\n        this.recastCrowd.removeAgent(index);\r\n        var item = this.agents.indexOf(index);\r\n        if (item > -1) {\r\n            this.agents.splice(item, 1);\r\n            this.transforms.splice(item, 1);\r\n        }\r\n    };\r\n    /**\r\n     * get the list of all agents attached to this crowd\r\n     * @returns list of agent indices\r\n     */\r\n    RecastJSCrowd.prototype.getAgents = function () {\r\n        return this.agents;\r\n    };\r\n    /**\r\n     * Tick update done by the Scene. Agent position/velocity/acceleration is updated by this function\r\n     * @param deltaTime in seconds\r\n     */\r\n    RecastJSCrowd.prototype.update = function (deltaTime) {\r\n        // update crowd\r\n        var timeStep = this.bjsRECASTPlugin.getTimeStep();\r\n        var maxStepCount = this.bjsRECASTPlugin.getMaximumSubStepCount();\r\n        if (timeStep <= _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Epsilon */ \"a\"]) {\r\n            this.recastCrowd.update(deltaTime);\r\n        }\r\n        else {\r\n            var iterationCount = deltaTime / timeStep;\r\n            if (maxStepCount && iterationCount > maxStepCount) {\r\n                iterationCount = maxStepCount;\r\n            }\r\n            if (iterationCount < 1) {\r\n                iterationCount = 1;\r\n            }\r\n            for (var i = 0; i < iterationCount; i++) {\r\n                this.recastCrowd.update(timeStep);\r\n            }\r\n        }\r\n        // update transforms\r\n        for (var index = 0; index < this.agents.length; index++) {\r\n            this.transforms[index].position = this.getAgentPosition(this.agents[index]);\r\n        }\r\n    };\r\n    /**\r\n     * Set the Bounding box extent for doing spatial queries (getClosestPoint, getRandomPointAround, ...)\r\n     * The queries will try to find a solution within those bounds\r\n     * default is (1,1,1)\r\n     * @param extent x,y,z value that define the extent around the queries point of reference\r\n     */\r\n    RecastJSCrowd.prototype.setDefaultQueryExtent = function (extent) {\r\n        var ext = new this.bjsRECASTPlugin.bjsRECAST.Vec3(extent.x, extent.y, extent.z);\r\n        this.recastCrowd.setDefaultQueryExtent(ext);\r\n    };\r\n    /**\r\n     * Get the Bounding box extent specified by setDefaultQueryExtent\r\n     * @returns the box extent values\r\n     */\r\n    RecastJSCrowd.prototype.getDefaultQueryExtent = function () {\r\n        var p = this.recastCrowd.getDefaultQueryExtent();\r\n        return new _Maths_math__WEBPACK_IMPORTED_MODULE_1__[/* Vector3 */ \"b\"](p.x, p.y, p.z);\r\n    };\r\n    /**\r\n     * Get the Bounding box extent result specified by setDefaultQueryExtent\r\n     * @param result output the box extent values\r\n     */\r\n    RecastJSCrowd.prototype.getDefaultQueryExtentToRef = function (result) {\r\n        var p = this.recastCrowd.getDefaultQueryExtent();\r\n        result.set(p.x, p.y, p.z);\r\n    };\r\n    /**\r\n     * Release all resources\r\n     */\r\n    RecastJSCrowd.prototype.dispose = function () {\r\n        this.recastCrowd.destroy();\r\n        this._scene.onBeforeAnimationsObservable.remove(this._onBeforeAnimationsObserver);\r\n        this._onBeforeAnimationsObserver = null;\r\n    };\r\n    return RecastJSCrowd;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Navigation/Plugins/recastJSPlugin.ts?");

/***/ }),

/***/ "./src/BABYLON/Navigation/index.ts":
/*!*****************************************!*\
  !*** ./src/BABYLON/Navigation/index.ts ***!
  \*****************************************/
/*! no static exports found */
/*! exports used: RecastJSPlugin, Scene, TransformNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var _INavigationEngine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./INavigationEngine */ \"./src/BABYLON/Navigation/INavigationEngine.ts\");\n/* harmony import */ var _INavigationEngine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_INavigationEngine__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (checked) */ if(__webpack_require__.o(_INavigationEngine__WEBPACK_IMPORTED_MODULE_0__, \"RecastJSPlugin\")) __webpack_require__.d(__webpack_exports__, \"RecastJSPlugin\", function() { return _INavigationEngine__WEBPACK_IMPORTED_MODULE_0__[\"RecastJSPlugin\"]; });\n\n/* harmony reexport (checked) */ if(__webpack_require__.o(_INavigationEngine__WEBPACK_IMPORTED_MODULE_0__, \"Scene\")) __webpack_require__.d(__webpack_exports__, \"Scene\", function() { return _INavigationEngine__WEBPACK_IMPORTED_MODULE_0__[\"Scene\"]; });\n\n/* harmony reexport (checked) */ if(__webpack_require__.o(_INavigationEngine__WEBPACK_IMPORTED_MODULE_0__, \"TransformNode\")) __webpack_require__.d(__webpack_exports__, \"TransformNode\", function() { return _INavigationEngine__WEBPACK_IMPORTED_MODULE_0__[\"TransformNode\"]; });\n\n/* harmony import */ var _Plugins_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Plugins/index */ \"./src/BABYLON/Navigation/Plugins/index.ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RecastJSPlugin\", function() { return _Plugins_index__WEBPACK_IMPORTED_MODULE_1__[\"a\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Scene\", function() { return _Plugins_index__WEBPACK_IMPORTED_MODULE_1__[\"b\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TransformNode\", function() { return _Plugins_index__WEBPACK_IMPORTED_MODULE_1__[\"c\"]; });\n\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/BABYLON/Navigation/index.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _BABYLON_Maths_math_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BABYLON/Maths/math.vector */ \"./src/BABYLON/Maths/math.vector.ts\");\n/* harmony import */ var _BABYLON_Navigation_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BABYLON/Navigation/index */ \"./src/BABYLON/Navigation/index.ts\");\n/* harmony import */ var _recast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./recast */ \"./src/recast.js\");\n/* harmony import */ var _recast__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_recast__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _testdata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./testdata */ \"./src/testdata.ts\");\n\r\n\r\n\r\n\r\n_recast__WEBPACK_IMPORTED_MODULE_2__().then(function (recast) {\r\n    var navigationPlugin = new _BABYLON_Navigation_index__WEBPACK_IMPORTED_MODULE_1__[\"RecastJSPlugin\"](recast);\r\n    navigationPlugin.buildFromNavmeshData(_testdata__WEBPACK_IMPORTED_MODULE_3__[/* data */ \"a\"]);\r\n    var scene = new _BABYLON_Navigation_index__WEBPACK_IMPORTED_MODULE_1__[\"Scene\"]();\r\n    var crowd = navigationPlugin.createCrowd(10, 0.1, scene);\r\n    var agentParams = {\r\n        radius: 0.1,\r\n        height: 0.2,\r\n        maxAcceleration: 4.0,\r\n        maxSpeed: 1.0,\r\n        collisionQueryRange: 0.5,\r\n        pathOptimizationRange: 0.0,\r\n        separationWeight: 1.0\r\n    };\r\n    var agentInfos = [];\r\n    // 随机一个起点\r\n    var testStartPos = navigationPlugin.getRandomPointAround(new _BABYLON_Maths_math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"](-2.0, 0.1, -1.8), 0.5);\r\n    // 随机一个终点\r\n    var testEndPos = new _BABYLON_Maths_math_vector__WEBPACK_IMPORTED_MODULE_0__[/* Vector3 */ \"d\"](4.4002206448242775, 1.385240415559657, 15.584022078598117);\r\n    // 创建一个操作目标节点\r\n    var transform = new _BABYLON_Navigation_index__WEBPACK_IMPORTED_MODULE_1__[\"TransformNode\"]();\r\n    // 计算出路径\r\n    var path01 = path(navigationPlugin, crowd, agentParams, transform, testStartPos, testEndPos);\r\n    console.log(\"Path:\");\r\n    console.log(path01);\r\n    // 操作节点记录到数组\r\n    agentInfos.push({\r\n        index: path01.index,\r\n        transform: transform,\r\n    });\r\n    function path(navigationPlugin, crowd, agentParams, transform, start, end) {\r\n        var agentIndex = crowd.addAgent(start, agentParams, transform);\r\n        crowd.agentGoto(agentIndex, navigationPlugin.getClosestPoint(end));\r\n        var paths = navigationPlugin.computePath(crowd.getAgentPosition(agentIndex), navigationPlugin.getClosestPoint(end));\r\n        return {\r\n            index: agentIndex,\r\n            paths: paths,\r\n        };\r\n    }\r\n    // function frame(crowd: ICrowd, agentInfos: TestInfo[]) {\r\n    //     for (let i = 0; i < agentInfos.length; i++) {\r\n    //         let info = agentInfos[i];\r\n    //         let agentIndex = info.index;\r\n    //         let transform = info.transform;\r\n    //         let position = crowd.getAgentPosition(agentIndex);\r\n    //         let vel = crowd.getAgentVelocity(agentIndex);\r\n    //         transform.position.copyFrom(position);\r\n    //         if (vel.length() > 0.2) {\r\n    //             vel.normalize();\r\n    //             var desiredRotation = Math.atan2(vel.x, vel.z);\r\n    //             transform.rotation.y = transform.rotation.y + (desiredRotation - transform.rotation.y) * 0.05;\r\n    //         }\r\n    //     }\r\n    // }\r\n    function run() {\r\n        // // scene 动画触发\r\n        // scene.onBeforeAnimationsObservable.notifyObservers(scene);\r\n        // 手动调用 - 固定 16 ms\r\n        crowd.update(16 / 1000);\r\n        // update 只更新 transform.position\r\n        for (var i = 0; i < agentInfos.length; i++) {\r\n            var info = agentInfos[i];\r\n            var agentIndex = info.index;\r\n            var transform_1 = info.transform;\r\n            var vel = crowd.getAgentVelocity(agentIndex);\r\n            if (vel.length() > 0.2) {\r\n                vel.normalize();\r\n                var desiredRotation = Math.atan2(vel.x, vel.z);\r\n                transform_1.rotation.y = transform_1.rotation.y + (desiredRotation - transform_1.rotation.y) * 0.05;\r\n            }\r\n            console.log(\"Position: \" + transform_1.position.x + \", \" + transform_1.position.y + \", \" + transform_1.position.z + \", Rotation: \" + transform_1.rotation.x + \", \" + transform_1.rotation.y + \", \" + transform_1.rotation.z);\r\n        }\r\n        requestAnimationFrame(run);\r\n    }\r\n    requestAnimationFrame(run);\r\n});\r\n\n\n//# sourceURL=webpack:///./src/main.ts?");

/***/ }),

/***/ "./src/recast.js":
/*!***********************!*\
  !*** ./src/recast.js ***!
  \***********************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(__filename, setImmediate, process, __dirname, Buffer) {\r\nvar Recast = (function() {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (true) _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(Recast) {\r\n  Recast = Recast || {};\r\n\r\nvar Module=typeof Recast!==\"undefined\"?Recast:{};var Promise=function(){function noop(){}function bind(fn,thisArg){return function(){fn.apply(thisArg,arguments)}}function Promise(fn){if(!(this instanceof Promise))throw new TypeError(\"Promises must be constructed via new\");if(typeof fn!==\"function\")throw new TypeError(\"not a function\");this._state=0;this._handled=false;this._value=undefined;this._deferreds=[];doResolve(fn,this)}function handle(self,deferred){while(self._state===3){self=self._value}if(self._state===0){self._deferreds.push(deferred);return}self._handled=true;Promise._immediateFn(function(){var cb=self._state===1?deferred.onFulfilled:deferred.onRejected;if(cb===null){(self._state===1?resolve:reject)(deferred.promise,self._value);return}var ret;try{ret=cb(self._value)}catch(e){reject(deferred.promise,e);return}resolve(deferred.promise,ret)})}function resolve(self,newValue){try{if(newValue===self)throw new TypeError(\"A promise cannot be resolved with itself.\");if(newValue&&(typeof newValue===\"object\"||typeof newValue===\"function\")){var then=newValue.then;if(newValue instanceof Promise){self._state=3;self._value=newValue;finale(self);return}else if(typeof then===\"function\"){doResolve(bind(then,newValue),self);return}}self._state=1;self._value=newValue;finale(self)}catch(e){reject(self,e)}}function reject(self,newValue){self._state=2;self._value=newValue;finale(self)}function finale(self){if(self._state===2&&self._deferreds.length===0){Promise._immediateFn(function(){if(!self._handled){Promise._unhandledRejectionFn(self._value)}})}for(var i=0,len=self._deferreds.length;i<len;i++){handle(self,self._deferreds[i])}self._deferreds=null}function Handler(onFulfilled,onRejected,promise){this.onFulfilled=typeof onFulfilled===\"function\"?onFulfilled:null;this.onRejected=typeof onRejected===\"function\"?onRejected:null;this.promise=promise}function doResolve(fn,self){var done=false;try{fn(function(value){if(done)return;done=true;resolve(self,value)},function(reason){if(done)return;done=true;reject(self,reason)})}catch(ex){if(done)return;done=true;reject(self,ex)}}Promise.prototype[\"catch\"]=function(onRejected){return this.then(null,onRejected)};Promise.prototype.then=function(onFulfilled,onRejected){var prom=new this.constructor(noop);handle(this,new Handler(onFulfilled,onRejected,prom));return prom};Promise.all=function(arr){return new Promise(function(resolve,reject){if(!Array.isArray(arr)){return reject(new TypeError(\"Promise.all accepts an array\"))}var args=Array.prototype.slice.call(arr);if(args.length===0)return resolve([]);var remaining=args.length;function res(i,val){try{if(val&&(typeof val===\"object\"||typeof val===\"function\")){var then=val.then;if(typeof then===\"function\"){then.call(val,function(val){res(i,val)},reject);return}}args[i]=val;if(--remaining===0){resolve(args)}}catch(ex){reject(ex)}}for(var i=0;i<args.length;i++){res(i,args[i])}})};Promise.resolve=function(value){if(value&&typeof value===\"object\"&&value.constructor===Promise){return value}return new Promise(function(resolve){resolve(value)})};Promise.reject=function(value){return new Promise(function(resolve,reject){reject(value)})};Promise.race=function(arr){return new Promise(function(resolve,reject){if(!Array.isArray(arr)){return reject(new TypeError(\"Promise.race accepts an array\"))}for(var i=0,len=arr.length;i<len;i++){Promise.resolve(arr[i]).then(resolve,reject)}})};Promise._immediateFn=typeof setImmediate===\"function\"&&function(fn){setImmediate(fn)}||function(fn){setTimeout(fn,0)};Promise._unhandledRejectionFn=function _unhandledRejectionFn(err){if(typeof console!==\"undefined\"&&console){console.warn(\"Possible Unhandled Promise Rejection:\",err)}};return Promise}();var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=__webpack_require__(/*! path */ 0).dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){var ret=tryParseAsDataURI(filename);if(ret){return binary?ret:ret.toString()}if(!nodeFS)nodeFS=__webpack_require__(/*! fs */ 1);if(!nodePath)nodePath=__webpack_require__(/*! path */ 0);filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};readAsync=function readAsync(filename,onload,onerror){var ret=tryParseAsDataURI(filename);if(ret){onload(ret)}if(!nodeFS)nodeFS=__webpack_require__(/*! fs */ 1);if(!nodePath)nodePath=__webpack_require__(/*! path */ 0);filename=nodePath[\"normalize\"](filename);nodeFS[\"readFile\"](filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status,toThrow){if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function addFunctionWasm(func,sig){if(!functionsInTableMap){functionsInTableMap=new WeakMap;for(var i=0;i<wasmTable.length;i++){var item=wasmTable.get(i);if(item){functionsInTableMap.set(item,i)}}}if(functionsInTableMap.has(func)){return functionsInTableMap.get(func)}var ret=getEmptyTableSlot();try{wasmTable.set(ret,func)}catch(err){if(!(err instanceof TypeError)){throw err}var wrapped=convertJsFunctionToWasm(func,sig);wasmTable.set(ret,wrapped)}functionsInTableMap.set(func,ret);return ret}function addFunction(func,sig){return addFunctionWasm(func,sig)}var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||671088640;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}if(!Math.imul||Math.imul(4294967295,5)!==-5)Math.imul=function imul(a,b){var ah=a>>>16;var al=a&65535;var bh=b>>>16;var bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};if(!Math.fround){var froundBuffer=new Float32Array(1);Math.fround=function(x){froundBuffer[0]=x;return froundBuffer[0]}}if(!Math.clz32)Math.clz32=function(x){var n=32;var y=x>>16;if(y){n-=16;x=y}y=x>>8;if(y){n-=8;x=y}y=x>>4;if(y){n-=4;x=y}y=x>>2;if(y){n-=2;x=y}y=x>>1;if(y)return n-2;return n-x};if(!Math.trunc)Math.trunc=function(x){return x<0?Math.ceil(x):Math.floor(x)};var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"data:application/octet-stream;base64,\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"m\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"Jb\"];addOnInit(Module[\"asm\"][\"n\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync().catch(readyPromiseReject);return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function _abort(){abort()}var _emscripten_memcpy_big=Uint8Array.prototype.copyWithin?function(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}:function(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)};function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize)}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator===\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},get64:function(low,high){return low}};function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAP32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAP32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAP32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){return 0}function _fd_read(fd,iov,iovcnt,pnum){var stream=SYSCALLS.getStreamFromFD(fd);var num=SYSCALLS.doReadv(stream,iov,iovcnt);HEAP32[pnum>>2]=num;return 0}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){}function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(fd,HEAPU8[ptr+j])}num+=len}HEAP32[pnum>>2]=num;return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value===\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}else{return\"PM\"}},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?\"01\":\"00\"},\"%V\":function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return\"53\"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return\"01\"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?\"01\":\"00\"},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE===\"boolean\"&&ENVIRONMENT_IS_NODE){var buf=Buffer.from(s,\"base64\");return new Uint8Array(buf[\"buffer\"],buf[\"byteOffset\"],buf[\"byteLength\"])}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var asmLibraryArg={\"l\":___cxa_allocate_exception,\"k\":___cxa_throw,\"b\":_abort,\"j\":_emscripten_memcpy_big,\"a\":_emscripten_resize_heap,\"d\":_environ_get,\"e\":_environ_sizes_get,\"f\":_fd_close,\"h\":_fd_read,\"i\":_fd_seek,\"g\":_fd_write,\"c\":_strftime_l};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"n\"]).apply(null,arguments)};var _emscripten_bind_VoidPtr___destroy___0=Module[\"_emscripten_bind_VoidPtr___destroy___0\"]=function(){return(_emscripten_bind_VoidPtr___destroy___0=Module[\"_emscripten_bind_VoidPtr___destroy___0\"]=Module[\"asm\"][\"o\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_rcConfig_0=Module[\"_emscripten_bind_rcConfig_rcConfig_0\"]=function(){return(_emscripten_bind_rcConfig_rcConfig_0=Module[\"_emscripten_bind_rcConfig_rcConfig_0\"]=Module[\"asm\"][\"p\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_width_0=Module[\"_emscripten_bind_rcConfig_get_width_0\"]=function(){return(_emscripten_bind_rcConfig_get_width_0=Module[\"_emscripten_bind_rcConfig_get_width_0\"]=Module[\"asm\"][\"q\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_width_1=Module[\"_emscripten_bind_rcConfig_set_width_1\"]=function(){return(_emscripten_bind_rcConfig_set_width_1=Module[\"_emscripten_bind_rcConfig_set_width_1\"]=Module[\"asm\"][\"r\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_height_0=Module[\"_emscripten_bind_rcConfig_get_height_0\"]=function(){return(_emscripten_bind_rcConfig_get_height_0=Module[\"_emscripten_bind_rcConfig_get_height_0\"]=Module[\"asm\"][\"s\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_height_1=Module[\"_emscripten_bind_rcConfig_set_height_1\"]=function(){return(_emscripten_bind_rcConfig_set_height_1=Module[\"_emscripten_bind_rcConfig_set_height_1\"]=Module[\"asm\"][\"t\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_tileSize_0=Module[\"_emscripten_bind_rcConfig_get_tileSize_0\"]=function(){return(_emscripten_bind_rcConfig_get_tileSize_0=Module[\"_emscripten_bind_rcConfig_get_tileSize_0\"]=Module[\"asm\"][\"u\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_tileSize_1=Module[\"_emscripten_bind_rcConfig_set_tileSize_1\"]=function(){return(_emscripten_bind_rcConfig_set_tileSize_1=Module[\"_emscripten_bind_rcConfig_set_tileSize_1\"]=Module[\"asm\"][\"v\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_borderSize_0=Module[\"_emscripten_bind_rcConfig_get_borderSize_0\"]=function(){return(_emscripten_bind_rcConfig_get_borderSize_0=Module[\"_emscripten_bind_rcConfig_get_borderSize_0\"]=Module[\"asm\"][\"w\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_borderSize_1=Module[\"_emscripten_bind_rcConfig_set_borderSize_1\"]=function(){return(_emscripten_bind_rcConfig_set_borderSize_1=Module[\"_emscripten_bind_rcConfig_set_borderSize_1\"]=Module[\"asm\"][\"x\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_cs_0=Module[\"_emscripten_bind_rcConfig_get_cs_0\"]=function(){return(_emscripten_bind_rcConfig_get_cs_0=Module[\"_emscripten_bind_rcConfig_get_cs_0\"]=Module[\"asm\"][\"y\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_cs_1=Module[\"_emscripten_bind_rcConfig_set_cs_1\"]=function(){return(_emscripten_bind_rcConfig_set_cs_1=Module[\"_emscripten_bind_rcConfig_set_cs_1\"]=Module[\"asm\"][\"z\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_ch_0=Module[\"_emscripten_bind_rcConfig_get_ch_0\"]=function(){return(_emscripten_bind_rcConfig_get_ch_0=Module[\"_emscripten_bind_rcConfig_get_ch_0\"]=Module[\"asm\"][\"A\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_ch_1=Module[\"_emscripten_bind_rcConfig_set_ch_1\"]=function(){return(_emscripten_bind_rcConfig_set_ch_1=Module[\"_emscripten_bind_rcConfig_set_ch_1\"]=Module[\"asm\"][\"B\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_bmin_1=Module[\"_emscripten_bind_rcConfig_get_bmin_1\"]=function(){return(_emscripten_bind_rcConfig_get_bmin_1=Module[\"_emscripten_bind_rcConfig_get_bmin_1\"]=Module[\"asm\"][\"C\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_bmin_2=Module[\"_emscripten_bind_rcConfig_set_bmin_2\"]=function(){return(_emscripten_bind_rcConfig_set_bmin_2=Module[\"_emscripten_bind_rcConfig_set_bmin_2\"]=Module[\"asm\"][\"D\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_bmax_1=Module[\"_emscripten_bind_rcConfig_get_bmax_1\"]=function(){return(_emscripten_bind_rcConfig_get_bmax_1=Module[\"_emscripten_bind_rcConfig_get_bmax_1\"]=Module[\"asm\"][\"E\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_bmax_2=Module[\"_emscripten_bind_rcConfig_set_bmax_2\"]=function(){return(_emscripten_bind_rcConfig_set_bmax_2=Module[\"_emscripten_bind_rcConfig_set_bmax_2\"]=Module[\"asm\"][\"F\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_walkableSlopeAngle_0=Module[\"_emscripten_bind_rcConfig_get_walkableSlopeAngle_0\"]=function(){return(_emscripten_bind_rcConfig_get_walkableSlopeAngle_0=Module[\"_emscripten_bind_rcConfig_get_walkableSlopeAngle_0\"]=Module[\"asm\"][\"G\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_walkableSlopeAngle_1=Module[\"_emscripten_bind_rcConfig_set_walkableSlopeAngle_1\"]=function(){return(_emscripten_bind_rcConfig_set_walkableSlopeAngle_1=Module[\"_emscripten_bind_rcConfig_set_walkableSlopeAngle_1\"]=Module[\"asm\"][\"H\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_walkableHeight_0=Module[\"_emscripten_bind_rcConfig_get_walkableHeight_0\"]=function(){return(_emscripten_bind_rcConfig_get_walkableHeight_0=Module[\"_emscripten_bind_rcConfig_get_walkableHeight_0\"]=Module[\"asm\"][\"I\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_walkableHeight_1=Module[\"_emscripten_bind_rcConfig_set_walkableHeight_1\"]=function(){return(_emscripten_bind_rcConfig_set_walkableHeight_1=Module[\"_emscripten_bind_rcConfig_set_walkableHeight_1\"]=Module[\"asm\"][\"J\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_walkableClimb_0=Module[\"_emscripten_bind_rcConfig_get_walkableClimb_0\"]=function(){return(_emscripten_bind_rcConfig_get_walkableClimb_0=Module[\"_emscripten_bind_rcConfig_get_walkableClimb_0\"]=Module[\"asm\"][\"K\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_walkableClimb_1=Module[\"_emscripten_bind_rcConfig_set_walkableClimb_1\"]=function(){return(_emscripten_bind_rcConfig_set_walkableClimb_1=Module[\"_emscripten_bind_rcConfig_set_walkableClimb_1\"]=Module[\"asm\"][\"L\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_walkableRadius_0=Module[\"_emscripten_bind_rcConfig_get_walkableRadius_0\"]=function(){return(_emscripten_bind_rcConfig_get_walkableRadius_0=Module[\"_emscripten_bind_rcConfig_get_walkableRadius_0\"]=Module[\"asm\"][\"M\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_walkableRadius_1=Module[\"_emscripten_bind_rcConfig_set_walkableRadius_1\"]=function(){return(_emscripten_bind_rcConfig_set_walkableRadius_1=Module[\"_emscripten_bind_rcConfig_set_walkableRadius_1\"]=Module[\"asm\"][\"N\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_maxEdgeLen_0=Module[\"_emscripten_bind_rcConfig_get_maxEdgeLen_0\"]=function(){return(_emscripten_bind_rcConfig_get_maxEdgeLen_0=Module[\"_emscripten_bind_rcConfig_get_maxEdgeLen_0\"]=Module[\"asm\"][\"O\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_maxEdgeLen_1=Module[\"_emscripten_bind_rcConfig_set_maxEdgeLen_1\"]=function(){return(_emscripten_bind_rcConfig_set_maxEdgeLen_1=Module[\"_emscripten_bind_rcConfig_set_maxEdgeLen_1\"]=Module[\"asm\"][\"P\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_maxSimplificationError_0=Module[\"_emscripten_bind_rcConfig_get_maxSimplificationError_0\"]=function(){return(_emscripten_bind_rcConfig_get_maxSimplificationError_0=Module[\"_emscripten_bind_rcConfig_get_maxSimplificationError_0\"]=Module[\"asm\"][\"Q\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_maxSimplificationError_1=Module[\"_emscripten_bind_rcConfig_set_maxSimplificationError_1\"]=function(){return(_emscripten_bind_rcConfig_set_maxSimplificationError_1=Module[\"_emscripten_bind_rcConfig_set_maxSimplificationError_1\"]=Module[\"asm\"][\"R\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_minRegionArea_0=Module[\"_emscripten_bind_rcConfig_get_minRegionArea_0\"]=function(){return(_emscripten_bind_rcConfig_get_minRegionArea_0=Module[\"_emscripten_bind_rcConfig_get_minRegionArea_0\"]=Module[\"asm\"][\"S\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_minRegionArea_1=Module[\"_emscripten_bind_rcConfig_set_minRegionArea_1\"]=function(){return(_emscripten_bind_rcConfig_set_minRegionArea_1=Module[\"_emscripten_bind_rcConfig_set_minRegionArea_1\"]=Module[\"asm\"][\"T\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_mergeRegionArea_0=Module[\"_emscripten_bind_rcConfig_get_mergeRegionArea_0\"]=function(){return(_emscripten_bind_rcConfig_get_mergeRegionArea_0=Module[\"_emscripten_bind_rcConfig_get_mergeRegionArea_0\"]=Module[\"asm\"][\"U\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_mergeRegionArea_1=Module[\"_emscripten_bind_rcConfig_set_mergeRegionArea_1\"]=function(){return(_emscripten_bind_rcConfig_set_mergeRegionArea_1=Module[\"_emscripten_bind_rcConfig_set_mergeRegionArea_1\"]=Module[\"asm\"][\"V\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_maxVertsPerPoly_0=Module[\"_emscripten_bind_rcConfig_get_maxVertsPerPoly_0\"]=function(){return(_emscripten_bind_rcConfig_get_maxVertsPerPoly_0=Module[\"_emscripten_bind_rcConfig_get_maxVertsPerPoly_0\"]=Module[\"asm\"][\"W\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_maxVertsPerPoly_1=Module[\"_emscripten_bind_rcConfig_set_maxVertsPerPoly_1\"]=function(){return(_emscripten_bind_rcConfig_set_maxVertsPerPoly_1=Module[\"_emscripten_bind_rcConfig_set_maxVertsPerPoly_1\"]=Module[\"asm\"][\"X\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_detailSampleDist_0=Module[\"_emscripten_bind_rcConfig_get_detailSampleDist_0\"]=function(){return(_emscripten_bind_rcConfig_get_detailSampleDist_0=Module[\"_emscripten_bind_rcConfig_get_detailSampleDist_0\"]=Module[\"asm\"][\"Y\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_detailSampleDist_1=Module[\"_emscripten_bind_rcConfig_set_detailSampleDist_1\"]=function(){return(_emscripten_bind_rcConfig_set_detailSampleDist_1=Module[\"_emscripten_bind_rcConfig_set_detailSampleDist_1\"]=Module[\"asm\"][\"Z\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_get_detailSampleMaxError_0=Module[\"_emscripten_bind_rcConfig_get_detailSampleMaxError_0\"]=function(){return(_emscripten_bind_rcConfig_get_detailSampleMaxError_0=Module[\"_emscripten_bind_rcConfig_get_detailSampleMaxError_0\"]=Module[\"asm\"][\"_\"]).apply(null,arguments)};var _emscripten_bind_rcConfig_set_detailSampleMaxError_1=Module[\"_emscripten_bind_rcConfig_set_detailSampleMaxError_1\"]=function(){return(_emscripten_bind_rcConfig_set_detailSampleMaxError_1=Module[\"_emscripten_bind_rcConfig_set_detailSampleMaxError_1\"]=Module[\"asm\"][\"$\"]).apply(null,arguments)};var _emscripten_bind_rcConfig___destroy___0=Module[\"_emscripten_bind_rcConfig___destroy___0\"]=function(){return(_emscripten_bind_rcConfig___destroy___0=Module[\"_emscripten_bind_rcConfig___destroy___0\"]=Module[\"asm\"][\"aa\"]).apply(null,arguments)};var _emscripten_bind_Vec3_Vec3_0=Module[\"_emscripten_bind_Vec3_Vec3_0\"]=function(){return(_emscripten_bind_Vec3_Vec3_0=Module[\"_emscripten_bind_Vec3_Vec3_0\"]=Module[\"asm\"][\"ba\"]).apply(null,arguments)};var _emscripten_bind_Vec3_Vec3_3=Module[\"_emscripten_bind_Vec3_Vec3_3\"]=function(){return(_emscripten_bind_Vec3_Vec3_3=Module[\"_emscripten_bind_Vec3_Vec3_3\"]=Module[\"asm\"][\"ca\"]).apply(null,arguments)};var _emscripten_bind_Vec3_get_x_0=Module[\"_emscripten_bind_Vec3_get_x_0\"]=function(){return(_emscripten_bind_Vec3_get_x_0=Module[\"_emscripten_bind_Vec3_get_x_0\"]=Module[\"asm\"][\"da\"]).apply(null,arguments)};var _emscripten_bind_Vec3_set_x_1=Module[\"_emscripten_bind_Vec3_set_x_1\"]=function(){return(_emscripten_bind_Vec3_set_x_1=Module[\"_emscripten_bind_Vec3_set_x_1\"]=Module[\"asm\"][\"ea\"]).apply(null,arguments)};var _emscripten_bind_Vec3_get_y_0=Module[\"_emscripten_bind_Vec3_get_y_0\"]=function(){return(_emscripten_bind_Vec3_get_y_0=Module[\"_emscripten_bind_Vec3_get_y_0\"]=Module[\"asm\"][\"fa\"]).apply(null,arguments)};var _emscripten_bind_Vec3_set_y_1=Module[\"_emscripten_bind_Vec3_set_y_1\"]=function(){return(_emscripten_bind_Vec3_set_y_1=Module[\"_emscripten_bind_Vec3_set_y_1\"]=Module[\"asm\"][\"ga\"]).apply(null,arguments)};var _emscripten_bind_Vec3_get_z_0=Module[\"_emscripten_bind_Vec3_get_z_0\"]=function(){return(_emscripten_bind_Vec3_get_z_0=Module[\"_emscripten_bind_Vec3_get_z_0\"]=Module[\"asm\"][\"ha\"]).apply(null,arguments)};var _emscripten_bind_Vec3_set_z_1=Module[\"_emscripten_bind_Vec3_set_z_1\"]=function(){return(_emscripten_bind_Vec3_set_z_1=Module[\"_emscripten_bind_Vec3_set_z_1\"]=Module[\"asm\"][\"ia\"]).apply(null,arguments)};var _emscripten_bind_Vec3___destroy___0=Module[\"_emscripten_bind_Vec3___destroy___0\"]=function(){return(_emscripten_bind_Vec3___destroy___0=Module[\"_emscripten_bind_Vec3___destroy___0\"]=Module[\"asm\"][\"ja\"]).apply(null,arguments)};var _emscripten_bind_Triangle_Triangle_0=Module[\"_emscripten_bind_Triangle_Triangle_0\"]=function(){return(_emscripten_bind_Triangle_Triangle_0=Module[\"_emscripten_bind_Triangle_Triangle_0\"]=Module[\"asm\"][\"ka\"]).apply(null,arguments)};var _emscripten_bind_Triangle_getPoint_1=Module[\"_emscripten_bind_Triangle_getPoint_1\"]=function(){return(_emscripten_bind_Triangle_getPoint_1=Module[\"_emscripten_bind_Triangle_getPoint_1\"]=Module[\"asm\"][\"la\"]).apply(null,arguments)};var _emscripten_bind_Triangle___destroy___0=Module[\"_emscripten_bind_Triangle___destroy___0\"]=function(){return(_emscripten_bind_Triangle___destroy___0=Module[\"_emscripten_bind_Triangle___destroy___0\"]=Module[\"asm\"][\"ma\"]).apply(null,arguments)};var _emscripten_bind_DebugNavMesh_DebugNavMesh_0=Module[\"_emscripten_bind_DebugNavMesh_DebugNavMesh_0\"]=function(){return(_emscripten_bind_DebugNavMesh_DebugNavMesh_0=Module[\"_emscripten_bind_DebugNavMesh_DebugNavMesh_0\"]=Module[\"asm\"][\"na\"]).apply(null,arguments)};var _emscripten_bind_DebugNavMesh_getTriangleCount_0=Module[\"_emscripten_bind_DebugNavMesh_getTriangleCount_0\"]=function(){return(_emscripten_bind_DebugNavMesh_getTriangleCount_0=Module[\"_emscripten_bind_DebugNavMesh_getTriangleCount_0\"]=Module[\"asm\"][\"oa\"]).apply(null,arguments)};var _emscripten_bind_DebugNavMesh_getTriangle_1=Module[\"_emscripten_bind_DebugNavMesh_getTriangle_1\"]=function(){return(_emscripten_bind_DebugNavMesh_getTriangle_1=Module[\"_emscripten_bind_DebugNavMesh_getTriangle_1\"]=Module[\"asm\"][\"pa\"]).apply(null,arguments)};var _emscripten_bind_DebugNavMesh___destroy___0=Module[\"_emscripten_bind_DebugNavMesh___destroy___0\"]=function(){return(_emscripten_bind_DebugNavMesh___destroy___0=Module[\"_emscripten_bind_DebugNavMesh___destroy___0\"]=Module[\"asm\"][\"qa\"]).apply(null,arguments)};var _emscripten_bind_dtNavMesh___destroy___0=Module[\"_emscripten_bind_dtNavMesh___destroy___0\"]=function(){return(_emscripten_bind_dtNavMesh___destroy___0=Module[\"_emscripten_bind_dtNavMesh___destroy___0\"]=Module[\"asm\"][\"ra\"]).apply(null,arguments)};var _emscripten_bind_NavmeshData_NavmeshData_0=Module[\"_emscripten_bind_NavmeshData_NavmeshData_0\"]=function(){return(_emscripten_bind_NavmeshData_NavmeshData_0=Module[\"_emscripten_bind_NavmeshData_NavmeshData_0\"]=Module[\"asm\"][\"sa\"]).apply(null,arguments)};var _emscripten_bind_NavmeshData_get_dataPointer_0=Module[\"_emscripten_bind_NavmeshData_get_dataPointer_0\"]=function(){return(_emscripten_bind_NavmeshData_get_dataPointer_0=Module[\"_emscripten_bind_NavmeshData_get_dataPointer_0\"]=Module[\"asm\"][\"ta\"]).apply(null,arguments)};var _emscripten_bind_NavmeshData_set_dataPointer_1=Module[\"_emscripten_bind_NavmeshData_set_dataPointer_1\"]=function(){return(_emscripten_bind_NavmeshData_set_dataPointer_1=Module[\"_emscripten_bind_NavmeshData_set_dataPointer_1\"]=Module[\"asm\"][\"ua\"]).apply(null,arguments)};var _emscripten_bind_NavmeshData_get_size_0=Module[\"_emscripten_bind_NavmeshData_get_size_0\"]=function(){return(_emscripten_bind_NavmeshData_get_size_0=Module[\"_emscripten_bind_NavmeshData_get_size_0\"]=Module[\"asm\"][\"va\"]).apply(null,arguments)};var _emscripten_bind_NavmeshData_set_size_1=Module[\"_emscripten_bind_NavmeshData_set_size_1\"]=function(){return(_emscripten_bind_NavmeshData_set_size_1=Module[\"_emscripten_bind_NavmeshData_set_size_1\"]=Module[\"asm\"][\"wa\"]).apply(null,arguments)};var _emscripten_bind_NavmeshData___destroy___0=Module[\"_emscripten_bind_NavmeshData___destroy___0\"]=function(){return(_emscripten_bind_NavmeshData___destroy___0=Module[\"_emscripten_bind_NavmeshData___destroy___0\"]=Module[\"asm\"][\"xa\"]).apply(null,arguments)};var _emscripten_bind_NavPath_getPointCount_0=Module[\"_emscripten_bind_NavPath_getPointCount_0\"]=function(){return(_emscripten_bind_NavPath_getPointCount_0=Module[\"_emscripten_bind_NavPath_getPointCount_0\"]=Module[\"asm\"][\"ya\"]).apply(null,arguments)};var _emscripten_bind_NavPath_getPoint_1=Module[\"_emscripten_bind_NavPath_getPoint_1\"]=function(){return(_emscripten_bind_NavPath_getPoint_1=Module[\"_emscripten_bind_NavPath_getPoint_1\"]=Module[\"asm\"][\"za\"]).apply(null,arguments)};var _emscripten_bind_NavPath___destroy___0=Module[\"_emscripten_bind_NavPath___destroy___0\"]=function(){return(_emscripten_bind_NavPath___destroy___0=Module[\"_emscripten_bind_NavPath___destroy___0\"]=Module[\"asm\"][\"Aa\"]).apply(null,arguments)};var _emscripten_bind_dtObstacleRef___destroy___0=Module[\"_emscripten_bind_dtObstacleRef___destroy___0\"]=function(){return(_emscripten_bind_dtObstacleRef___destroy___0=Module[\"_emscripten_bind_dtObstacleRef___destroy___0\"]=Module[\"asm\"][\"Ba\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_dtCrowdAgentParams_0=Module[\"_emscripten_bind_dtCrowdAgentParams_dtCrowdAgentParams_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_dtCrowdAgentParams_0=Module[\"_emscripten_bind_dtCrowdAgentParams_dtCrowdAgentParams_0\"]=Module[\"asm\"][\"Ca\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_get_radius_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_radius_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_get_radius_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_radius_0\"]=Module[\"asm\"][\"Da\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_set_radius_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_radius_1\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_set_radius_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_radius_1\"]=Module[\"asm\"][\"Ea\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_get_height_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_height_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_get_height_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_height_0\"]=Module[\"asm\"][\"Fa\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_set_height_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_height_1\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_set_height_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_height_1\"]=Module[\"asm\"][\"Ga\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_get_maxAcceleration_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_maxAcceleration_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_get_maxAcceleration_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_maxAcceleration_0\"]=Module[\"asm\"][\"Ha\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_set_maxAcceleration_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_maxAcceleration_1\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_set_maxAcceleration_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_maxAcceleration_1\"]=Module[\"asm\"][\"Ia\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_get_maxSpeed_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_maxSpeed_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_get_maxSpeed_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_maxSpeed_0\"]=Module[\"asm\"][\"Ja\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_set_maxSpeed_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_maxSpeed_1\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_set_maxSpeed_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_maxSpeed_1\"]=Module[\"asm\"][\"Ka\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_get_collisionQueryRange_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_collisionQueryRange_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_get_collisionQueryRange_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_collisionQueryRange_0\"]=Module[\"asm\"][\"La\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_set_collisionQueryRange_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_collisionQueryRange_1\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_set_collisionQueryRange_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_collisionQueryRange_1\"]=Module[\"asm\"][\"Ma\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_get_pathOptimizationRange_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_pathOptimizationRange_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_get_pathOptimizationRange_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_pathOptimizationRange_0\"]=Module[\"asm\"][\"Na\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_set_pathOptimizationRange_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_pathOptimizationRange_1\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_set_pathOptimizationRange_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_pathOptimizationRange_1\"]=Module[\"asm\"][\"Oa\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_get_separationWeight_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_separationWeight_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_get_separationWeight_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_separationWeight_0\"]=Module[\"asm\"][\"Pa\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_set_separationWeight_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_separationWeight_1\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_set_separationWeight_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_separationWeight_1\"]=Module[\"asm\"][\"Qa\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_get_updateFlags_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_updateFlags_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_get_updateFlags_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_updateFlags_0\"]=Module[\"asm\"][\"Ra\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_set_updateFlags_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_updateFlags_1\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_set_updateFlags_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_updateFlags_1\"]=Module[\"asm\"][\"Sa\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_get_obstacleAvoidanceType_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_obstacleAvoidanceType_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_get_obstacleAvoidanceType_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_obstacleAvoidanceType_0\"]=Module[\"asm\"][\"Ta\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_set_obstacleAvoidanceType_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_obstacleAvoidanceType_1\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_set_obstacleAvoidanceType_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_obstacleAvoidanceType_1\"]=Module[\"asm\"][\"Ua\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_get_queryFilterType_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_queryFilterType_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_get_queryFilterType_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_queryFilterType_0\"]=Module[\"asm\"][\"Va\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_set_queryFilterType_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_queryFilterType_1\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_set_queryFilterType_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_queryFilterType_1\"]=Module[\"asm\"][\"Wa\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_get_userData_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_userData_0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_get_userData_0=Module[\"_emscripten_bind_dtCrowdAgentParams_get_userData_0\"]=Module[\"asm\"][\"Xa\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams_set_userData_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_userData_1\"]=function(){return(_emscripten_bind_dtCrowdAgentParams_set_userData_1=Module[\"_emscripten_bind_dtCrowdAgentParams_set_userData_1\"]=Module[\"asm\"][\"Ya\"]).apply(null,arguments)};var _emscripten_bind_dtCrowdAgentParams___destroy___0=Module[\"_emscripten_bind_dtCrowdAgentParams___destroy___0\"]=function(){return(_emscripten_bind_dtCrowdAgentParams___destroy___0=Module[\"_emscripten_bind_dtCrowdAgentParams___destroy___0\"]=Module[\"asm\"][\"Za\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_NavMesh_0=Module[\"_emscripten_bind_NavMesh_NavMesh_0\"]=function(){return(_emscripten_bind_NavMesh_NavMesh_0=Module[\"_emscripten_bind_NavMesh_NavMesh_0\"]=Module[\"asm\"][\"_a\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_destroy_0=Module[\"_emscripten_bind_NavMesh_destroy_0\"]=function(){return(_emscripten_bind_NavMesh_destroy_0=Module[\"_emscripten_bind_NavMesh_destroy_0\"]=Module[\"asm\"][\"$a\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_build_5=Module[\"_emscripten_bind_NavMesh_build_5\"]=function(){return(_emscripten_bind_NavMesh_build_5=Module[\"_emscripten_bind_NavMesh_build_5\"]=Module[\"asm\"][\"ab\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_buildFromNavmeshData_1=Module[\"_emscripten_bind_NavMesh_buildFromNavmeshData_1\"]=function(){return(_emscripten_bind_NavMesh_buildFromNavmeshData_1=Module[\"_emscripten_bind_NavMesh_buildFromNavmeshData_1\"]=Module[\"asm\"][\"bb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_getNavmeshData_0=Module[\"_emscripten_bind_NavMesh_getNavmeshData_0\"]=function(){return(_emscripten_bind_NavMesh_getNavmeshData_0=Module[\"_emscripten_bind_NavMesh_getNavmeshData_0\"]=Module[\"asm\"][\"cb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_freeNavmeshData_1=Module[\"_emscripten_bind_NavMesh_freeNavmeshData_1\"]=function(){return(_emscripten_bind_NavMesh_freeNavmeshData_1=Module[\"_emscripten_bind_NavMesh_freeNavmeshData_1\"]=Module[\"asm\"][\"db\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_getDebugNavMesh_0=Module[\"_emscripten_bind_NavMesh_getDebugNavMesh_0\"]=function(){return(_emscripten_bind_NavMesh_getDebugNavMesh_0=Module[\"_emscripten_bind_NavMesh_getDebugNavMesh_0\"]=Module[\"asm\"][\"eb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_getClosestPoint_1=Module[\"_emscripten_bind_NavMesh_getClosestPoint_1\"]=function(){return(_emscripten_bind_NavMesh_getClosestPoint_1=Module[\"_emscripten_bind_NavMesh_getClosestPoint_1\"]=Module[\"asm\"][\"fb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_getRandomPointAround_2=Module[\"_emscripten_bind_NavMesh_getRandomPointAround_2\"]=function(){return(_emscripten_bind_NavMesh_getRandomPointAround_2=Module[\"_emscripten_bind_NavMesh_getRandomPointAround_2\"]=Module[\"asm\"][\"gb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_moveAlong_2=Module[\"_emscripten_bind_NavMesh_moveAlong_2\"]=function(){return(_emscripten_bind_NavMesh_moveAlong_2=Module[\"_emscripten_bind_NavMesh_moveAlong_2\"]=Module[\"asm\"][\"hb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_getNavMesh_0=Module[\"_emscripten_bind_NavMesh_getNavMesh_0\"]=function(){return(_emscripten_bind_NavMesh_getNavMesh_0=Module[\"_emscripten_bind_NavMesh_getNavMesh_0\"]=Module[\"asm\"][\"ib\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_computePath_2=Module[\"_emscripten_bind_NavMesh_computePath_2\"]=function(){return(_emscripten_bind_NavMesh_computePath_2=Module[\"_emscripten_bind_NavMesh_computePath_2\"]=Module[\"asm\"][\"jb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_setDefaultQueryExtent_1=Module[\"_emscripten_bind_NavMesh_setDefaultQueryExtent_1\"]=function(){return(_emscripten_bind_NavMesh_setDefaultQueryExtent_1=Module[\"_emscripten_bind_NavMesh_setDefaultQueryExtent_1\"]=Module[\"asm\"][\"kb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_getDefaultQueryExtent_0=Module[\"_emscripten_bind_NavMesh_getDefaultQueryExtent_0\"]=function(){return(_emscripten_bind_NavMesh_getDefaultQueryExtent_0=Module[\"_emscripten_bind_NavMesh_getDefaultQueryExtent_0\"]=Module[\"asm\"][\"lb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_addCylinderObstacle_3=Module[\"_emscripten_bind_NavMesh_addCylinderObstacle_3\"]=function(){return(_emscripten_bind_NavMesh_addCylinderObstacle_3=Module[\"_emscripten_bind_NavMesh_addCylinderObstacle_3\"]=Module[\"asm\"][\"mb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_addBoxObstacle_3=Module[\"_emscripten_bind_NavMesh_addBoxObstacle_3\"]=function(){return(_emscripten_bind_NavMesh_addBoxObstacle_3=Module[\"_emscripten_bind_NavMesh_addBoxObstacle_3\"]=Module[\"asm\"][\"nb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_removeObstacle_1=Module[\"_emscripten_bind_NavMesh_removeObstacle_1\"]=function(){return(_emscripten_bind_NavMesh_removeObstacle_1=Module[\"_emscripten_bind_NavMesh_removeObstacle_1\"]=Module[\"asm\"][\"ob\"]).apply(null,arguments)};var _emscripten_bind_NavMesh_update_0=Module[\"_emscripten_bind_NavMesh_update_0\"]=function(){return(_emscripten_bind_NavMesh_update_0=Module[\"_emscripten_bind_NavMesh_update_0\"]=Module[\"asm\"][\"pb\"]).apply(null,arguments)};var _emscripten_bind_NavMesh___destroy___0=Module[\"_emscripten_bind_NavMesh___destroy___0\"]=function(){return(_emscripten_bind_NavMesh___destroy___0=Module[\"_emscripten_bind_NavMesh___destroy___0\"]=Module[\"asm\"][\"qb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_Crowd_3=Module[\"_emscripten_bind_Crowd_Crowd_3\"]=function(){return(_emscripten_bind_Crowd_Crowd_3=Module[\"_emscripten_bind_Crowd_Crowd_3\"]=Module[\"asm\"][\"rb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_destroy_0=Module[\"_emscripten_bind_Crowd_destroy_0\"]=function(){return(_emscripten_bind_Crowd_destroy_0=Module[\"_emscripten_bind_Crowd_destroy_0\"]=Module[\"asm\"][\"sb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_addAgent_2=Module[\"_emscripten_bind_Crowd_addAgent_2\"]=function(){return(_emscripten_bind_Crowd_addAgent_2=Module[\"_emscripten_bind_Crowd_addAgent_2\"]=Module[\"asm\"][\"tb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_removeAgent_1=Module[\"_emscripten_bind_Crowd_removeAgent_1\"]=function(){return(_emscripten_bind_Crowd_removeAgent_1=Module[\"_emscripten_bind_Crowd_removeAgent_1\"]=Module[\"asm\"][\"ub\"]).apply(null,arguments)};var _emscripten_bind_Crowd_update_1=Module[\"_emscripten_bind_Crowd_update_1\"]=function(){return(_emscripten_bind_Crowd_update_1=Module[\"_emscripten_bind_Crowd_update_1\"]=Module[\"asm\"][\"vb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_getAgentPosition_1=Module[\"_emscripten_bind_Crowd_getAgentPosition_1\"]=function(){return(_emscripten_bind_Crowd_getAgentPosition_1=Module[\"_emscripten_bind_Crowd_getAgentPosition_1\"]=Module[\"asm\"][\"wb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_getAgentVelocity_1=Module[\"_emscripten_bind_Crowd_getAgentVelocity_1\"]=function(){return(_emscripten_bind_Crowd_getAgentVelocity_1=Module[\"_emscripten_bind_Crowd_getAgentVelocity_1\"]=Module[\"asm\"][\"xb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_getAgentNextTargetPath_1=Module[\"_emscripten_bind_Crowd_getAgentNextTargetPath_1\"]=function(){return(_emscripten_bind_Crowd_getAgentNextTargetPath_1=Module[\"_emscripten_bind_Crowd_getAgentNextTargetPath_1\"]=Module[\"asm\"][\"yb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_getAgentState_1=Module[\"_emscripten_bind_Crowd_getAgentState_1\"]=function(){return(_emscripten_bind_Crowd_getAgentState_1=Module[\"_emscripten_bind_Crowd_getAgentState_1\"]=Module[\"asm\"][\"zb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_overOffmeshConnection_1=Module[\"_emscripten_bind_Crowd_overOffmeshConnection_1\"]=function(){return(_emscripten_bind_Crowd_overOffmeshConnection_1=Module[\"_emscripten_bind_Crowd_overOffmeshConnection_1\"]=Module[\"asm\"][\"Ab\"]).apply(null,arguments)};var _emscripten_bind_Crowd_agentGoto_2=Module[\"_emscripten_bind_Crowd_agentGoto_2\"]=function(){return(_emscripten_bind_Crowd_agentGoto_2=Module[\"_emscripten_bind_Crowd_agentGoto_2\"]=Module[\"asm\"][\"Bb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_agentTeleport_2=Module[\"_emscripten_bind_Crowd_agentTeleport_2\"]=function(){return(_emscripten_bind_Crowd_agentTeleport_2=Module[\"_emscripten_bind_Crowd_agentTeleport_2\"]=Module[\"asm\"][\"Cb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_getAgentParameters_1=Module[\"_emscripten_bind_Crowd_getAgentParameters_1\"]=function(){return(_emscripten_bind_Crowd_getAgentParameters_1=Module[\"_emscripten_bind_Crowd_getAgentParameters_1\"]=Module[\"asm\"][\"Db\"]).apply(null,arguments)};var _emscripten_bind_Crowd_setAgentParameters_2=Module[\"_emscripten_bind_Crowd_setAgentParameters_2\"]=function(){return(_emscripten_bind_Crowd_setAgentParameters_2=Module[\"_emscripten_bind_Crowd_setAgentParameters_2\"]=Module[\"asm\"][\"Eb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_setDefaultQueryExtent_1=Module[\"_emscripten_bind_Crowd_setDefaultQueryExtent_1\"]=function(){return(_emscripten_bind_Crowd_setDefaultQueryExtent_1=Module[\"_emscripten_bind_Crowd_setDefaultQueryExtent_1\"]=Module[\"asm\"][\"Fb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_getDefaultQueryExtent_0=Module[\"_emscripten_bind_Crowd_getDefaultQueryExtent_0\"]=function(){return(_emscripten_bind_Crowd_getDefaultQueryExtent_0=Module[\"_emscripten_bind_Crowd_getDefaultQueryExtent_0\"]=Module[\"asm\"][\"Gb\"]).apply(null,arguments)};var _emscripten_bind_Crowd_getCorners_1=Module[\"_emscripten_bind_Crowd_getCorners_1\"]=function(){return(_emscripten_bind_Crowd_getCorners_1=Module[\"_emscripten_bind_Crowd_getCorners_1\"]=Module[\"asm\"][\"Hb\"]).apply(null,arguments)};var _emscripten_bind_Crowd___destroy___0=Module[\"_emscripten_bind_Crowd___destroy___0\"]=function(){return(_emscripten_bind_Crowd___destroy___0=Module[\"_emscripten_bind_Crowd___destroy___0\"]=Module[\"asm\"][\"Ib\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"Kb\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"Lb\"]).apply(null,arguments)};Module[\"UTF8ToString\"]=UTF8ToString;Module[\"addFunction\"]=addFunction;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();function WrapperObject(){}WrapperObject.prototype=Object.create(WrapperObject.prototype);WrapperObject.prototype.constructor=WrapperObject;WrapperObject.prototype.__class__=WrapperObject;WrapperObject.__cache__={};Module[\"WrapperObject\"]=WrapperObject;function getCache(__class__){return(__class__||WrapperObject).__cache__}Module[\"getCache\"]=getCache;function wrapPointer(ptr,__class__){var cache=getCache(__class__);var ret=cache[ptr];if(ret)return ret;ret=Object.create((__class__||WrapperObject).prototype);ret.ptr=ptr;return cache[ptr]=ret}Module[\"wrapPointer\"]=wrapPointer;function castObject(obj,__class__){return wrapPointer(obj.ptr,__class__)}Module[\"castObject\"]=castObject;Module[\"NULL\"]=wrapPointer(0);function destroy(obj){if(!obj[\"__destroy__\"])throw\"Error: Cannot destroy object. (Did you create it yourself?)\";obj[\"__destroy__\"]();delete getCache(obj.__class__)[obj.ptr]}Module[\"destroy\"]=destroy;function compare(obj1,obj2){return obj1.ptr===obj2.ptr}Module[\"compare\"]=compare;function getPointer(obj){return obj.ptr}Module[\"getPointer\"]=getPointer;function getClass(obj){return obj.__class__}Module[\"getClass\"]=getClass;var ensureCache={buffer:0,size:0,pos:0,temps:[],needed:0,prepare:function(){if(ensureCache.needed){for(var i=0;i<ensureCache.temps.length;i++){Module[\"_free\"](ensureCache.temps[i])}ensureCache.temps.length=0;Module[\"_free\"](ensureCache.buffer);ensureCache.buffer=0;ensureCache.size+=ensureCache.needed;ensureCache.needed=0}if(!ensureCache.buffer){ensureCache.size+=128;ensureCache.buffer=Module[\"_malloc\"](ensureCache.size);assert(ensureCache.buffer)}ensureCache.pos=0},alloc:function(array,view){assert(ensureCache.buffer);var bytes=view.BYTES_PER_ELEMENT;var len=array.length*bytes;len=len+7&-8;var ret;if(ensureCache.pos+len>=ensureCache.size){assert(len>0);ensureCache.needed+=len;ret=Module[\"_malloc\"](len);ensureCache.temps.push(ret)}else{ret=ensureCache.buffer+ensureCache.pos;ensureCache.pos+=len}return ret},copy:function(array,view,offset){offset>>>=0;var bytes=view.BYTES_PER_ELEMENT;switch(bytes){case 2:offset>>>=1;break;case 4:offset>>>=2;break;case 8:offset>>>=3;break}for(var i=0;i<array.length;i++){view[offset+i]=array[i]}}};function ensureInt32(value){if(typeof value===\"object\"){var offset=ensureCache.alloc(value,HEAP32);ensureCache.copy(value,HEAP32,offset);return offset}return value}function ensureFloat32(value){if(typeof value===\"object\"){var offset=ensureCache.alloc(value,HEAPF32);ensureCache.copy(value,HEAPF32,offset);return offset}return value}function VoidPtr(){throw\"cannot construct a VoidPtr, no constructor in IDL\"}VoidPtr.prototype=Object.create(WrapperObject.prototype);VoidPtr.prototype.constructor=VoidPtr;VoidPtr.prototype.__class__=VoidPtr;VoidPtr.__cache__={};Module[\"VoidPtr\"]=VoidPtr;VoidPtr.prototype[\"__destroy__\"]=VoidPtr.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_VoidPtr___destroy___0(self)};function rcConfig(){this.ptr=_emscripten_bind_rcConfig_rcConfig_0();getCache(rcConfig)[this.ptr]=this}rcConfig.prototype=Object.create(WrapperObject.prototype);rcConfig.prototype.constructor=rcConfig;rcConfig.prototype.__class__=rcConfig;rcConfig.__cache__={};Module[\"rcConfig\"]=rcConfig;rcConfig.prototype[\"get_width\"]=rcConfig.prototype.get_width=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_width_0(self)};rcConfig.prototype[\"set_width\"]=rcConfig.prototype.set_width=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_width_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"width\",{get:rcConfig.prototype.get_width,set:rcConfig.prototype.set_width});rcConfig.prototype[\"get_height\"]=rcConfig.prototype.get_height=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_height_0(self)};rcConfig.prototype[\"set_height\"]=rcConfig.prototype.set_height=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_height_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"height\",{get:rcConfig.prototype.get_height,set:rcConfig.prototype.set_height});rcConfig.prototype[\"get_tileSize\"]=rcConfig.prototype.get_tileSize=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_tileSize_0(self)};rcConfig.prototype[\"set_tileSize\"]=rcConfig.prototype.set_tileSize=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_tileSize_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"tileSize\",{get:rcConfig.prototype.get_tileSize,set:rcConfig.prototype.set_tileSize});rcConfig.prototype[\"get_borderSize\"]=rcConfig.prototype.get_borderSize=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_borderSize_0(self)};rcConfig.prototype[\"set_borderSize\"]=rcConfig.prototype.set_borderSize=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_borderSize_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"borderSize\",{get:rcConfig.prototype.get_borderSize,set:rcConfig.prototype.set_borderSize});rcConfig.prototype[\"get_cs\"]=rcConfig.prototype.get_cs=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_cs_0(self)};rcConfig.prototype[\"set_cs\"]=rcConfig.prototype.set_cs=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_cs_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"cs\",{get:rcConfig.prototype.get_cs,set:rcConfig.prototype.set_cs});rcConfig.prototype[\"get_ch\"]=rcConfig.prototype.get_ch=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_ch_0(self)};rcConfig.prototype[\"set_ch\"]=rcConfig.prototype.set_ch=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_ch_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"ch\",{get:rcConfig.prototype.get_ch,set:rcConfig.prototype.set_ch});rcConfig.prototype[\"get_bmin\"]=rcConfig.prototype.get_bmin=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;return _emscripten_bind_rcConfig_get_bmin_1(self,arg0)};rcConfig.prototype[\"set_bmin\"]=rcConfig.prototype.set_bmin=function(arg0,arg1){var self=this.ptr;ensureCache.prepare();if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;if(arg1&&typeof arg1===\"object\")arg1=arg1.ptr;_emscripten_bind_rcConfig_set_bmin_2(self,arg0,arg1)};Object.defineProperty(rcConfig.prototype,\"bmin\",{get:rcConfig.prototype.get_bmin,set:rcConfig.prototype.set_bmin});rcConfig.prototype[\"get_bmax\"]=rcConfig.prototype.get_bmax=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;return _emscripten_bind_rcConfig_get_bmax_1(self,arg0)};rcConfig.prototype[\"set_bmax\"]=rcConfig.prototype.set_bmax=function(arg0,arg1){var self=this.ptr;ensureCache.prepare();if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;if(arg1&&typeof arg1===\"object\")arg1=arg1.ptr;_emscripten_bind_rcConfig_set_bmax_2(self,arg0,arg1)};Object.defineProperty(rcConfig.prototype,\"bmax\",{get:rcConfig.prototype.get_bmax,set:rcConfig.prototype.set_bmax});rcConfig.prototype[\"get_walkableSlopeAngle\"]=rcConfig.prototype.get_walkableSlopeAngle=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_walkableSlopeAngle_0(self)};rcConfig.prototype[\"set_walkableSlopeAngle\"]=rcConfig.prototype.set_walkableSlopeAngle=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_walkableSlopeAngle_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"walkableSlopeAngle\",{get:rcConfig.prototype.get_walkableSlopeAngle,set:rcConfig.prototype.set_walkableSlopeAngle});rcConfig.prototype[\"get_walkableHeight\"]=rcConfig.prototype.get_walkableHeight=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_walkableHeight_0(self)};rcConfig.prototype[\"set_walkableHeight\"]=rcConfig.prototype.set_walkableHeight=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_walkableHeight_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"walkableHeight\",{get:rcConfig.prototype.get_walkableHeight,set:rcConfig.prototype.set_walkableHeight});rcConfig.prototype[\"get_walkableClimb\"]=rcConfig.prototype.get_walkableClimb=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_walkableClimb_0(self)};rcConfig.prototype[\"set_walkableClimb\"]=rcConfig.prototype.set_walkableClimb=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_walkableClimb_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"walkableClimb\",{get:rcConfig.prototype.get_walkableClimb,set:rcConfig.prototype.set_walkableClimb});rcConfig.prototype[\"get_walkableRadius\"]=rcConfig.prototype.get_walkableRadius=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_walkableRadius_0(self)};rcConfig.prototype[\"set_walkableRadius\"]=rcConfig.prototype.set_walkableRadius=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_walkableRadius_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"walkableRadius\",{get:rcConfig.prototype.get_walkableRadius,set:rcConfig.prototype.set_walkableRadius});rcConfig.prototype[\"get_maxEdgeLen\"]=rcConfig.prototype.get_maxEdgeLen=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_maxEdgeLen_0(self)};rcConfig.prototype[\"set_maxEdgeLen\"]=rcConfig.prototype.set_maxEdgeLen=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_maxEdgeLen_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"maxEdgeLen\",{get:rcConfig.prototype.get_maxEdgeLen,set:rcConfig.prototype.set_maxEdgeLen});rcConfig.prototype[\"get_maxSimplificationError\"]=rcConfig.prototype.get_maxSimplificationError=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_maxSimplificationError_0(self)};rcConfig.prototype[\"set_maxSimplificationError\"]=rcConfig.prototype.set_maxSimplificationError=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_maxSimplificationError_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"maxSimplificationError\",{get:rcConfig.prototype.get_maxSimplificationError,set:rcConfig.prototype.set_maxSimplificationError});rcConfig.prototype[\"get_minRegionArea\"]=rcConfig.prototype.get_minRegionArea=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_minRegionArea_0(self)};rcConfig.prototype[\"set_minRegionArea\"]=rcConfig.prototype.set_minRegionArea=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_minRegionArea_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"minRegionArea\",{get:rcConfig.prototype.get_minRegionArea,set:rcConfig.prototype.set_minRegionArea});rcConfig.prototype[\"get_mergeRegionArea\"]=rcConfig.prototype.get_mergeRegionArea=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_mergeRegionArea_0(self)};rcConfig.prototype[\"set_mergeRegionArea\"]=rcConfig.prototype.set_mergeRegionArea=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_mergeRegionArea_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"mergeRegionArea\",{get:rcConfig.prototype.get_mergeRegionArea,set:rcConfig.prototype.set_mergeRegionArea});rcConfig.prototype[\"get_maxVertsPerPoly\"]=rcConfig.prototype.get_maxVertsPerPoly=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_maxVertsPerPoly_0(self)};rcConfig.prototype[\"set_maxVertsPerPoly\"]=rcConfig.prototype.set_maxVertsPerPoly=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_maxVertsPerPoly_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"maxVertsPerPoly\",{get:rcConfig.prototype.get_maxVertsPerPoly,set:rcConfig.prototype.set_maxVertsPerPoly});rcConfig.prototype[\"get_detailSampleDist\"]=rcConfig.prototype.get_detailSampleDist=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_detailSampleDist_0(self)};rcConfig.prototype[\"set_detailSampleDist\"]=rcConfig.prototype.set_detailSampleDist=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_detailSampleDist_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"detailSampleDist\",{get:rcConfig.prototype.get_detailSampleDist,set:rcConfig.prototype.set_detailSampleDist});rcConfig.prototype[\"get_detailSampleMaxError\"]=rcConfig.prototype.get_detailSampleMaxError=function(){var self=this.ptr;return _emscripten_bind_rcConfig_get_detailSampleMaxError_0(self)};rcConfig.prototype[\"set_detailSampleMaxError\"]=rcConfig.prototype.set_detailSampleMaxError=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_rcConfig_set_detailSampleMaxError_1(self,arg0)};Object.defineProperty(rcConfig.prototype,\"detailSampleMaxError\",{get:rcConfig.prototype.get_detailSampleMaxError,set:rcConfig.prototype.set_detailSampleMaxError});rcConfig.prototype[\"__destroy__\"]=rcConfig.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_rcConfig___destroy___0(self)};function Vec3(x,y,z){if(x&&typeof x===\"object\")x=x.ptr;if(y&&typeof y===\"object\")y=y.ptr;if(z&&typeof z===\"object\")z=z.ptr;if(x===undefined){this.ptr=_emscripten_bind_Vec3_Vec3_0();getCache(Vec3)[this.ptr]=this;return}if(y===undefined){this.ptr=_emscripten_bind_Vec3_Vec3_1(x);getCache(Vec3)[this.ptr]=this;return}if(z===undefined){this.ptr=_emscripten_bind_Vec3_Vec3_2(x,y);getCache(Vec3)[this.ptr]=this;return}this.ptr=_emscripten_bind_Vec3_Vec3_3(x,y,z);getCache(Vec3)[this.ptr]=this}Vec3.prototype=Object.create(WrapperObject.prototype);Vec3.prototype.constructor=Vec3;Vec3.prototype.__class__=Vec3;Vec3.__cache__={};Module[\"Vec3\"]=Vec3;Vec3.prototype[\"get_x\"]=Vec3.prototype.get_x=function(){var self=this.ptr;return _emscripten_bind_Vec3_get_x_0(self)};Vec3.prototype[\"set_x\"]=Vec3.prototype.set_x=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_Vec3_set_x_1(self,arg0)};Object.defineProperty(Vec3.prototype,\"x\",{get:Vec3.prototype.get_x,set:Vec3.prototype.set_x});Vec3.prototype[\"get_y\"]=Vec3.prototype.get_y=function(){var self=this.ptr;return _emscripten_bind_Vec3_get_y_0(self)};Vec3.prototype[\"set_y\"]=Vec3.prototype.set_y=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_Vec3_set_y_1(self,arg0)};Object.defineProperty(Vec3.prototype,\"y\",{get:Vec3.prototype.get_y,set:Vec3.prototype.set_y});Vec3.prototype[\"get_z\"]=Vec3.prototype.get_z=function(){var self=this.ptr;return _emscripten_bind_Vec3_get_z_0(self)};Vec3.prototype[\"set_z\"]=Vec3.prototype.set_z=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_Vec3_set_z_1(self,arg0)};Object.defineProperty(Vec3.prototype,\"z\",{get:Vec3.prototype.get_z,set:Vec3.prototype.set_z});Vec3.prototype[\"__destroy__\"]=Vec3.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_Vec3___destroy___0(self)};function Triangle(){this.ptr=_emscripten_bind_Triangle_Triangle_0();getCache(Triangle)[this.ptr]=this}Triangle.prototype=Object.create(WrapperObject.prototype);Triangle.prototype.constructor=Triangle;Triangle.prototype.__class__=Triangle;Triangle.__cache__={};Module[\"Triangle\"]=Triangle;Triangle.prototype[\"getPoint\"]=Triangle.prototype.getPoint=function(n){var self=this.ptr;if(n&&typeof n===\"object\")n=n.ptr;return wrapPointer(_emscripten_bind_Triangle_getPoint_1(self,n),Vec3)};Triangle.prototype[\"__destroy__\"]=Triangle.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_Triangle___destroy___0(self)};function DebugNavMesh(){this.ptr=_emscripten_bind_DebugNavMesh_DebugNavMesh_0();getCache(DebugNavMesh)[this.ptr]=this}DebugNavMesh.prototype=Object.create(WrapperObject.prototype);DebugNavMesh.prototype.constructor=DebugNavMesh;DebugNavMesh.prototype.__class__=DebugNavMesh;DebugNavMesh.__cache__={};Module[\"DebugNavMesh\"]=DebugNavMesh;DebugNavMesh.prototype[\"getTriangleCount\"]=DebugNavMesh.prototype.getTriangleCount=function(){var self=this.ptr;return _emscripten_bind_DebugNavMesh_getTriangleCount_0(self)};DebugNavMesh.prototype[\"getTriangle\"]=DebugNavMesh.prototype.getTriangle=function(n){var self=this.ptr;if(n&&typeof n===\"object\")n=n.ptr;return wrapPointer(_emscripten_bind_DebugNavMesh_getTriangle_1(self,n),Triangle)};DebugNavMesh.prototype[\"__destroy__\"]=DebugNavMesh.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_DebugNavMesh___destroy___0(self)};function dtNavMesh(){throw\"cannot construct a dtNavMesh, no constructor in IDL\"}dtNavMesh.prototype=Object.create(WrapperObject.prototype);dtNavMesh.prototype.constructor=dtNavMesh;dtNavMesh.prototype.__class__=dtNavMesh;dtNavMesh.__cache__={};Module[\"dtNavMesh\"]=dtNavMesh;dtNavMesh.prototype[\"__destroy__\"]=dtNavMesh.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_dtNavMesh___destroy___0(self)};function NavmeshData(){this.ptr=_emscripten_bind_NavmeshData_NavmeshData_0();getCache(NavmeshData)[this.ptr]=this}NavmeshData.prototype=Object.create(WrapperObject.prototype);NavmeshData.prototype.constructor=NavmeshData;NavmeshData.prototype.__class__=NavmeshData;NavmeshData.__cache__={};Module[\"NavmeshData\"]=NavmeshData;NavmeshData.prototype[\"get_dataPointer\"]=NavmeshData.prototype.get_dataPointer=function(){var self=this.ptr;return _emscripten_bind_NavmeshData_get_dataPointer_0(self)};NavmeshData.prototype[\"set_dataPointer\"]=NavmeshData.prototype.set_dataPointer=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_NavmeshData_set_dataPointer_1(self,arg0)};Object.defineProperty(NavmeshData.prototype,\"dataPointer\",{get:NavmeshData.prototype.get_dataPointer,set:NavmeshData.prototype.set_dataPointer});NavmeshData.prototype[\"get_size\"]=NavmeshData.prototype.get_size=function(){var self=this.ptr;return _emscripten_bind_NavmeshData_get_size_0(self)};NavmeshData.prototype[\"set_size\"]=NavmeshData.prototype.set_size=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_NavmeshData_set_size_1(self,arg0)};Object.defineProperty(NavmeshData.prototype,\"size\",{get:NavmeshData.prototype.get_size,set:NavmeshData.prototype.set_size});NavmeshData.prototype[\"__destroy__\"]=NavmeshData.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_NavmeshData___destroy___0(self)};function NavPath(){throw\"cannot construct a NavPath, no constructor in IDL\"}NavPath.prototype=Object.create(WrapperObject.prototype);NavPath.prototype.constructor=NavPath;NavPath.prototype.__class__=NavPath;NavPath.__cache__={};Module[\"NavPath\"]=NavPath;NavPath.prototype[\"getPointCount\"]=NavPath.prototype.getPointCount=function(){var self=this.ptr;return _emscripten_bind_NavPath_getPointCount_0(self)};NavPath.prototype[\"getPoint\"]=NavPath.prototype.getPoint=function(n){var self=this.ptr;if(n&&typeof n===\"object\")n=n.ptr;return wrapPointer(_emscripten_bind_NavPath_getPoint_1(self,n),Vec3)};NavPath.prototype[\"__destroy__\"]=NavPath.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_NavPath___destroy___0(self)};function dtObstacleRef(){throw\"cannot construct a dtObstacleRef, no constructor in IDL\"}dtObstacleRef.prototype=Object.create(WrapperObject.prototype);dtObstacleRef.prototype.constructor=dtObstacleRef;dtObstacleRef.prototype.__class__=dtObstacleRef;dtObstacleRef.__cache__={};Module[\"dtObstacleRef\"]=dtObstacleRef;dtObstacleRef.prototype[\"__destroy__\"]=dtObstacleRef.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_dtObstacleRef___destroy___0(self)};function dtCrowdAgentParams(){this.ptr=_emscripten_bind_dtCrowdAgentParams_dtCrowdAgentParams_0();getCache(dtCrowdAgentParams)[this.ptr]=this}dtCrowdAgentParams.prototype=Object.create(WrapperObject.prototype);dtCrowdAgentParams.prototype.constructor=dtCrowdAgentParams;dtCrowdAgentParams.prototype.__class__=dtCrowdAgentParams;dtCrowdAgentParams.__cache__={};Module[\"dtCrowdAgentParams\"]=dtCrowdAgentParams;dtCrowdAgentParams.prototype[\"get_radius\"]=dtCrowdAgentParams.prototype.get_radius=function(){var self=this.ptr;return _emscripten_bind_dtCrowdAgentParams_get_radius_0(self)};dtCrowdAgentParams.prototype[\"set_radius\"]=dtCrowdAgentParams.prototype.set_radius=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_dtCrowdAgentParams_set_radius_1(self,arg0)};Object.defineProperty(dtCrowdAgentParams.prototype,\"radius\",{get:dtCrowdAgentParams.prototype.get_radius,set:dtCrowdAgentParams.prototype.set_radius});dtCrowdAgentParams.prototype[\"get_height\"]=dtCrowdAgentParams.prototype.get_height=function(){var self=this.ptr;return _emscripten_bind_dtCrowdAgentParams_get_height_0(self)};dtCrowdAgentParams.prototype[\"set_height\"]=dtCrowdAgentParams.prototype.set_height=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_dtCrowdAgentParams_set_height_1(self,arg0)};Object.defineProperty(dtCrowdAgentParams.prototype,\"height\",{get:dtCrowdAgentParams.prototype.get_height,set:dtCrowdAgentParams.prototype.set_height});dtCrowdAgentParams.prototype[\"get_maxAcceleration\"]=dtCrowdAgentParams.prototype.get_maxAcceleration=function(){var self=this.ptr;return _emscripten_bind_dtCrowdAgentParams_get_maxAcceleration_0(self)};dtCrowdAgentParams.prototype[\"set_maxAcceleration\"]=dtCrowdAgentParams.prototype.set_maxAcceleration=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_dtCrowdAgentParams_set_maxAcceleration_1(self,arg0)};Object.defineProperty(dtCrowdAgentParams.prototype,\"maxAcceleration\",{get:dtCrowdAgentParams.prototype.get_maxAcceleration,set:dtCrowdAgentParams.prototype.set_maxAcceleration});dtCrowdAgentParams.prototype[\"get_maxSpeed\"]=dtCrowdAgentParams.prototype.get_maxSpeed=function(){var self=this.ptr;return _emscripten_bind_dtCrowdAgentParams_get_maxSpeed_0(self)};dtCrowdAgentParams.prototype[\"set_maxSpeed\"]=dtCrowdAgentParams.prototype.set_maxSpeed=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_dtCrowdAgentParams_set_maxSpeed_1(self,arg0)};Object.defineProperty(dtCrowdAgentParams.prototype,\"maxSpeed\",{get:dtCrowdAgentParams.prototype.get_maxSpeed,set:dtCrowdAgentParams.prototype.set_maxSpeed});dtCrowdAgentParams.prototype[\"get_collisionQueryRange\"]=dtCrowdAgentParams.prototype.get_collisionQueryRange=function(){var self=this.ptr;return _emscripten_bind_dtCrowdAgentParams_get_collisionQueryRange_0(self)};dtCrowdAgentParams.prototype[\"set_collisionQueryRange\"]=dtCrowdAgentParams.prototype.set_collisionQueryRange=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_dtCrowdAgentParams_set_collisionQueryRange_1(self,arg0)};Object.defineProperty(dtCrowdAgentParams.prototype,\"collisionQueryRange\",{get:dtCrowdAgentParams.prototype.get_collisionQueryRange,set:dtCrowdAgentParams.prototype.set_collisionQueryRange});dtCrowdAgentParams.prototype[\"get_pathOptimizationRange\"]=dtCrowdAgentParams.prototype.get_pathOptimizationRange=function(){var self=this.ptr;return _emscripten_bind_dtCrowdAgentParams_get_pathOptimizationRange_0(self)};dtCrowdAgentParams.prototype[\"set_pathOptimizationRange\"]=dtCrowdAgentParams.prototype.set_pathOptimizationRange=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_dtCrowdAgentParams_set_pathOptimizationRange_1(self,arg0)};Object.defineProperty(dtCrowdAgentParams.prototype,\"pathOptimizationRange\",{get:dtCrowdAgentParams.prototype.get_pathOptimizationRange,set:dtCrowdAgentParams.prototype.set_pathOptimizationRange});dtCrowdAgentParams.prototype[\"get_separationWeight\"]=dtCrowdAgentParams.prototype.get_separationWeight=function(){var self=this.ptr;return _emscripten_bind_dtCrowdAgentParams_get_separationWeight_0(self)};dtCrowdAgentParams.prototype[\"set_separationWeight\"]=dtCrowdAgentParams.prototype.set_separationWeight=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_dtCrowdAgentParams_set_separationWeight_1(self,arg0)};Object.defineProperty(dtCrowdAgentParams.prototype,\"separationWeight\",{get:dtCrowdAgentParams.prototype.get_separationWeight,set:dtCrowdAgentParams.prototype.set_separationWeight});dtCrowdAgentParams.prototype[\"get_updateFlags\"]=dtCrowdAgentParams.prototype.get_updateFlags=function(){var self=this.ptr;return _emscripten_bind_dtCrowdAgentParams_get_updateFlags_0(self)};dtCrowdAgentParams.prototype[\"set_updateFlags\"]=dtCrowdAgentParams.prototype.set_updateFlags=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_dtCrowdAgentParams_set_updateFlags_1(self,arg0)};Object.defineProperty(dtCrowdAgentParams.prototype,\"updateFlags\",{get:dtCrowdAgentParams.prototype.get_updateFlags,set:dtCrowdAgentParams.prototype.set_updateFlags});dtCrowdAgentParams.prototype[\"get_obstacleAvoidanceType\"]=dtCrowdAgentParams.prototype.get_obstacleAvoidanceType=function(){var self=this.ptr;return _emscripten_bind_dtCrowdAgentParams_get_obstacleAvoidanceType_0(self)};dtCrowdAgentParams.prototype[\"set_obstacleAvoidanceType\"]=dtCrowdAgentParams.prototype.set_obstacleAvoidanceType=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_dtCrowdAgentParams_set_obstacleAvoidanceType_1(self,arg0)};Object.defineProperty(dtCrowdAgentParams.prototype,\"obstacleAvoidanceType\",{get:dtCrowdAgentParams.prototype.get_obstacleAvoidanceType,set:dtCrowdAgentParams.prototype.set_obstacleAvoidanceType});dtCrowdAgentParams.prototype[\"get_queryFilterType\"]=dtCrowdAgentParams.prototype.get_queryFilterType=function(){var self=this.ptr;return _emscripten_bind_dtCrowdAgentParams_get_queryFilterType_0(self)};dtCrowdAgentParams.prototype[\"set_queryFilterType\"]=dtCrowdAgentParams.prototype.set_queryFilterType=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_dtCrowdAgentParams_set_queryFilterType_1(self,arg0)};Object.defineProperty(dtCrowdAgentParams.prototype,\"queryFilterType\",{get:dtCrowdAgentParams.prototype.get_queryFilterType,set:dtCrowdAgentParams.prototype.set_queryFilterType});dtCrowdAgentParams.prototype[\"get_userData\"]=dtCrowdAgentParams.prototype.get_userData=function(){var self=this.ptr;return wrapPointer(_emscripten_bind_dtCrowdAgentParams_get_userData_0(self),VoidPtr)};dtCrowdAgentParams.prototype[\"set_userData\"]=dtCrowdAgentParams.prototype.set_userData=function(arg0){var self=this.ptr;if(arg0&&typeof arg0===\"object\")arg0=arg0.ptr;_emscripten_bind_dtCrowdAgentParams_set_userData_1(self,arg0)};Object.defineProperty(dtCrowdAgentParams.prototype,\"userData\",{get:dtCrowdAgentParams.prototype.get_userData,set:dtCrowdAgentParams.prototype.set_userData});dtCrowdAgentParams.prototype[\"__destroy__\"]=dtCrowdAgentParams.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_dtCrowdAgentParams___destroy___0(self)};function NavMesh(){this.ptr=_emscripten_bind_NavMesh_NavMesh_0();getCache(NavMesh)[this.ptr]=this}NavMesh.prototype=Object.create(WrapperObject.prototype);NavMesh.prototype.constructor=NavMesh;NavMesh.prototype.__class__=NavMesh;NavMesh.__cache__={};Module[\"NavMesh\"]=NavMesh;NavMesh.prototype[\"destroy\"]=NavMesh.prototype.destroy=function(){var self=this.ptr;_emscripten_bind_NavMesh_destroy_0(self)};NavMesh.prototype[\"build\"]=NavMesh.prototype.build=function(positions,positionCount,indices,indexCount,config){var self=this.ptr;ensureCache.prepare();if(typeof positions==\"object\"){positions=ensureFloat32(positions)}if(positionCount&&typeof positionCount===\"object\")positionCount=positionCount.ptr;if(typeof indices==\"object\"){indices=ensureInt32(indices)}if(indexCount&&typeof indexCount===\"object\")indexCount=indexCount.ptr;if(config&&typeof config===\"object\")config=config.ptr;_emscripten_bind_NavMesh_build_5(self,positions,positionCount,indices,indexCount,config)};NavMesh.prototype[\"buildFromNavmeshData\"]=NavMesh.prototype.buildFromNavmeshData=function(data){var self=this.ptr;if(data&&typeof data===\"object\")data=data.ptr;_emscripten_bind_NavMesh_buildFromNavmeshData_1(self,data)};NavMesh.prototype[\"getNavmeshData\"]=NavMesh.prototype.getNavmeshData=function(){var self=this.ptr;return wrapPointer(_emscripten_bind_NavMesh_getNavmeshData_0(self),NavmeshData)};NavMesh.prototype[\"freeNavmeshData\"]=NavMesh.prototype.freeNavmeshData=function(data){var self=this.ptr;if(data&&typeof data===\"object\")data=data.ptr;_emscripten_bind_NavMesh_freeNavmeshData_1(self,data)};NavMesh.prototype[\"getDebugNavMesh\"]=NavMesh.prototype.getDebugNavMesh=function(){var self=this.ptr;return wrapPointer(_emscripten_bind_NavMesh_getDebugNavMesh_0(self),DebugNavMesh)};NavMesh.prototype[\"getClosestPoint\"]=NavMesh.prototype.getClosestPoint=function(position){var self=this.ptr;if(position&&typeof position===\"object\")position=position.ptr;return wrapPointer(_emscripten_bind_NavMesh_getClosestPoint_1(self,position),Vec3)};NavMesh.prototype[\"getRandomPointAround\"]=NavMesh.prototype.getRandomPointAround=function(position,maxRadius){var self=this.ptr;if(position&&typeof position===\"object\")position=position.ptr;if(maxRadius&&typeof maxRadius===\"object\")maxRadius=maxRadius.ptr;return wrapPointer(_emscripten_bind_NavMesh_getRandomPointAround_2(self,position,maxRadius),Vec3)};NavMesh.prototype[\"moveAlong\"]=NavMesh.prototype.moveAlong=function(position,destination){var self=this.ptr;if(position&&typeof position===\"object\")position=position.ptr;if(destination&&typeof destination===\"object\")destination=destination.ptr;return wrapPointer(_emscripten_bind_NavMesh_moveAlong_2(self,position,destination),Vec3)};NavMesh.prototype[\"getNavMesh\"]=NavMesh.prototype.getNavMesh=function(){var self=this.ptr;return wrapPointer(_emscripten_bind_NavMesh_getNavMesh_0(self),dtNavMesh)};NavMesh.prototype[\"computePath\"]=NavMesh.prototype.computePath=function(start,end){var self=this.ptr;if(start&&typeof start===\"object\")start=start.ptr;if(end&&typeof end===\"object\")end=end.ptr;return wrapPointer(_emscripten_bind_NavMesh_computePath_2(self,start,end),NavPath)};NavMesh.prototype[\"setDefaultQueryExtent\"]=NavMesh.prototype.setDefaultQueryExtent=function(extent){var self=this.ptr;if(extent&&typeof extent===\"object\")extent=extent.ptr;_emscripten_bind_NavMesh_setDefaultQueryExtent_1(self,extent)};NavMesh.prototype[\"getDefaultQueryExtent\"]=NavMesh.prototype.getDefaultQueryExtent=function(){var self=this.ptr;return wrapPointer(_emscripten_bind_NavMesh_getDefaultQueryExtent_0(self),Vec3)};NavMesh.prototype[\"addCylinderObstacle\"]=NavMesh.prototype.addCylinderObstacle=function(position,radius,height){var self=this.ptr;if(position&&typeof position===\"object\")position=position.ptr;if(radius&&typeof radius===\"object\")radius=radius.ptr;if(height&&typeof height===\"object\")height=height.ptr;return wrapPointer(_emscripten_bind_NavMesh_addCylinderObstacle_3(self,position,radius,height),dtObstacleRef)};NavMesh.prototype[\"addBoxObstacle\"]=NavMesh.prototype.addBoxObstacle=function(position,extent,angle){var self=this.ptr;if(position&&typeof position===\"object\")position=position.ptr;if(extent&&typeof extent===\"object\")extent=extent.ptr;if(angle&&typeof angle===\"object\")angle=angle.ptr;return wrapPointer(_emscripten_bind_NavMesh_addBoxObstacle_3(self,position,extent,angle),dtObstacleRef)};NavMesh.prototype[\"removeObstacle\"]=NavMesh.prototype.removeObstacle=function(obstacle){var self=this.ptr;if(obstacle&&typeof obstacle===\"object\")obstacle=obstacle.ptr;_emscripten_bind_NavMesh_removeObstacle_1(self,obstacle)};NavMesh.prototype[\"update\"]=NavMesh.prototype.update=function(){var self=this.ptr;_emscripten_bind_NavMesh_update_0(self)};NavMesh.prototype[\"__destroy__\"]=NavMesh.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_NavMesh___destroy___0(self)};function Crowd(maxAgents,maxAgentRadius,nav){if(maxAgents&&typeof maxAgents===\"object\")maxAgents=maxAgents.ptr;if(maxAgentRadius&&typeof maxAgentRadius===\"object\")maxAgentRadius=maxAgentRadius.ptr;if(nav&&typeof nav===\"object\")nav=nav.ptr;this.ptr=_emscripten_bind_Crowd_Crowd_3(maxAgents,maxAgentRadius,nav);getCache(Crowd)[this.ptr]=this}Crowd.prototype=Object.create(WrapperObject.prototype);Crowd.prototype.constructor=Crowd;Crowd.prototype.__class__=Crowd;Crowd.__cache__={};Module[\"Crowd\"]=Crowd;Crowd.prototype[\"destroy\"]=Crowd.prototype.destroy=function(){var self=this.ptr;_emscripten_bind_Crowd_destroy_0(self)};Crowd.prototype[\"addAgent\"]=Crowd.prototype.addAgent=function(position,params){var self=this.ptr;if(position&&typeof position===\"object\")position=position.ptr;if(params&&typeof params===\"object\")params=params.ptr;return _emscripten_bind_Crowd_addAgent_2(self,position,params)};Crowd.prototype[\"removeAgent\"]=Crowd.prototype.removeAgent=function(idx){var self=this.ptr;if(idx&&typeof idx===\"object\")idx=idx.ptr;_emscripten_bind_Crowd_removeAgent_1(self,idx)};Crowd.prototype[\"update\"]=Crowd.prototype.update=function(dt){var self=this.ptr;if(dt&&typeof dt===\"object\")dt=dt.ptr;_emscripten_bind_Crowd_update_1(self,dt)};Crowd.prototype[\"getAgentPosition\"]=Crowd.prototype.getAgentPosition=function(idx){var self=this.ptr;if(idx&&typeof idx===\"object\")idx=idx.ptr;return wrapPointer(_emscripten_bind_Crowd_getAgentPosition_1(self,idx),Vec3)};Crowd.prototype[\"getAgentVelocity\"]=Crowd.prototype.getAgentVelocity=function(idx){var self=this.ptr;if(idx&&typeof idx===\"object\")idx=idx.ptr;return wrapPointer(_emscripten_bind_Crowd_getAgentVelocity_1(self,idx),Vec3)};Crowd.prototype[\"getAgentNextTargetPath\"]=Crowd.prototype.getAgentNextTargetPath=function(idx){var self=this.ptr;if(idx&&typeof idx===\"object\")idx=idx.ptr;return wrapPointer(_emscripten_bind_Crowd_getAgentNextTargetPath_1(self,idx),Vec3)};Crowd.prototype[\"getAgentState\"]=Crowd.prototype.getAgentState=function(idx){var self=this.ptr;if(idx&&typeof idx===\"object\")idx=idx.ptr;return _emscripten_bind_Crowd_getAgentState_1(self,idx)};Crowd.prototype[\"overOffmeshConnection\"]=Crowd.prototype.overOffmeshConnection=function(idx){var self=this.ptr;if(idx&&typeof idx===\"object\")idx=idx.ptr;return!!_emscripten_bind_Crowd_overOffmeshConnection_1(self,idx)};Crowd.prototype[\"agentGoto\"]=Crowd.prototype.agentGoto=function(idx,destination){var self=this.ptr;if(idx&&typeof idx===\"object\")idx=idx.ptr;if(destination&&typeof destination===\"object\")destination=destination.ptr;_emscripten_bind_Crowd_agentGoto_2(self,idx,destination)};Crowd.prototype[\"agentTeleport\"]=Crowd.prototype.agentTeleport=function(idx,destination){var self=this.ptr;if(idx&&typeof idx===\"object\")idx=idx.ptr;if(destination&&typeof destination===\"object\")destination=destination.ptr;_emscripten_bind_Crowd_agentTeleport_2(self,idx,destination)};Crowd.prototype[\"getAgentParameters\"]=Crowd.prototype.getAgentParameters=function(idx){var self=this.ptr;if(idx&&typeof idx===\"object\")idx=idx.ptr;return wrapPointer(_emscripten_bind_Crowd_getAgentParameters_1(self,idx),dtCrowdAgentParams)};Crowd.prototype[\"setAgentParameters\"]=Crowd.prototype.setAgentParameters=function(idx,params){var self=this.ptr;if(idx&&typeof idx===\"object\")idx=idx.ptr;if(params&&typeof params===\"object\")params=params.ptr;_emscripten_bind_Crowd_setAgentParameters_2(self,idx,params)};Crowd.prototype[\"setDefaultQueryExtent\"]=Crowd.prototype.setDefaultQueryExtent=function(extent){var self=this.ptr;if(extent&&typeof extent===\"object\")extent=extent.ptr;_emscripten_bind_Crowd_setDefaultQueryExtent_1(self,extent)};Crowd.prototype[\"getDefaultQueryExtent\"]=Crowd.prototype.getDefaultQueryExtent=function(){var self=this.ptr;return wrapPointer(_emscripten_bind_Crowd_getDefaultQueryExtent_0(self),Vec3)};Crowd.prototype[\"getCorners\"]=Crowd.prototype.getCorners=function(idx){var self=this.ptr;if(idx&&typeof idx===\"object\")idx=idx.ptr;return wrapPointer(_emscripten_bind_Crowd_getCorners_1(self,idx),NavPath)};Crowd.prototype[\"__destroy__\"]=Crowd.prototype.__destroy__=function(){var self=this.ptr;_emscripten_bind_Crowd___destroy___0(self)};this[\"Recast\"]=Module;\r\n\r\n\r\n  return Recast.ready\r\n}\r\n);\r\n})();\r\nif (true)\r\n  module.exports = Recast;\r\nelse {}\r\n\n/* WEBPACK VAR INJECTION */}.call(this, \"/index.js\", __webpack_require__(/*! ./../node_modules/node-libs-browser/node_modules/timers-browserify/main.js */ \"./node_modules/node-libs-browser/node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../node_modules/process/browser.js */ \"./node_modules/process/browser.js\"), \"/\", __webpack_require__(/*! ./../node_modules/node-libs-browser/node_modules/buffer/index.js */ \"./node_modules/node-libs-browser/node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./src/recast.js?");

/***/ }),

/***/ "./src/testdata.ts":
/*!*************************!*\
  !*** ./src/testdata.ts ***!
  \*************************/
/*! exports provided: data */
/*! exports used: data */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return data; });\nvar data = new Uint8Array([84, 69, 83, 77, 1, 0, 0, 0, 1, 0, 0, 0, 87, 85, 149, 193, 11, 63, 253, 62, 87, 85, 205, 193, 87, 85, 241, 65, 172, 170, 124, 66, 1, 0, 0, 0, 33, 0, 0, 0, 64, 0, 0, 0, 168, 20, 0, 0, 86, 65, 78, 68, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 68, 0, 0, 0, 133, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 67, 0, 0, 0, 66, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 63, 0, 0, 64, 63, 87, 85, 149, 193, 11, 63, 253, 62, 87, 85, 205, 193, 0, 0, 56, 65, 22, 165, 244, 63, 0, 0, 22, 66, 85, 85, 85, 64, 236, 238, 38, 65, 236, 5, 101, 63, 122, 119, 95, 193, 236, 238, 38, 65, 236, 5, 101, 63, 20, 17, 33, 193, 84, 85, 29, 65, 236, 5, 101, 63, 20, 17, 33, 193, 0, 17, 145, 63, 41, 182, 165, 63, 225, 221, 109, 193, 0, 138, 136, 189, 41, 182, 165, 63, 225, 221, 109, 193, 0, 138, 136, 189, 41, 182, 165, 63, 36, 34, 150, 193, 186, 187, 19, 65, 236, 5, 101, 63, 122, 119, 23, 193, 208, 221, 221, 63, 236, 5, 101, 63, 71, 68, 28, 193, 64, 68, 180, 64, 236, 5, 101, 63, 122, 119, 95, 193, 208, 221, 221, 63, 41, 182, 165, 63, 71, 68, 100, 193, 12, 17, 161, 64, 41, 182, 165, 63, 36, 34, 150, 193, 12, 17, 161, 64, 41, 182, 165, 63, 71, 68, 100, 193, 0, 138, 136, 189, 11, 63, 253, 62, 0, 136, 8, 62, 0, 138, 136, 189, 11, 63, 253, 62, 122, 119, 23, 193, 0, 17, 145, 63, 236, 5, 101, 63, 122, 119, 23, 193, 186, 187, 19, 65, 11, 63, 253, 62, 0, 136, 8, 62, 48, 34, 162, 191, 195, 79, 191, 63, 36, 34, 150, 193, 180, 170, 106, 192, 41, 182, 165, 63, 225, 221, 109, 193, 180, 170, 106, 192, 195, 79, 191, 63, 189, 187, 147, 193, 225, 221, 21, 193, 246, 130, 242, 63, 87, 85, 181, 193, 20, 17, 41, 193, 246, 130, 242, 63, 189, 187, 171, 193, 225, 221, 45, 193, 246, 130, 242, 63, 36, 34, 174, 193, 122, 119, 31, 193, 246, 130, 242, 63, 36, 34, 186, 193, 122, 119, 31, 193, 246, 130, 242, 63, 87, 85, 205, 193, 87, 85, 149, 193, 246, 130, 242, 63, 36, 34, 174, 193, 87, 85, 149, 193, 246, 130, 242, 63, 87, 85, 205, 193, 160, 136, 200, 191, 195, 79, 191, 63, 138, 136, 152, 193, 142, 136, 136, 192, 195, 79, 191, 63, 36, 34, 150, 193, 160, 136, 200, 191, 195, 79, 191, 63, 87, 85, 181, 193, 20, 17, 41, 193, 195, 79, 191, 63, 36, 34, 150, 193, 122, 119, 31, 193, 11, 63, 253, 62, 224, 221, 13, 193, 241, 238, 146, 193, 11, 63, 253, 62, 224, 221, 13, 193, 241, 238, 146, 193, 11, 63, 253, 62, 71, 68, 76, 193, 225, 221, 21, 193, 11, 63, 253, 62, 71, 68, 76, 193, 225, 221, 21, 193, 11, 63, 253, 62, 71, 68, 28, 193, 225, 221, 21, 193, 11, 63, 253, 62, 0, 136, 8, 62, 225, 221, 21, 193, 11, 63, 253, 62, 70, 68, 4, 193, 20, 17, 17, 193, 11, 63, 253, 62, 122, 119, 23, 193, 12, 17, 209, 64, 41, 182, 165, 63, 119, 119, 135, 65, 64, 68, 228, 64, 41, 182, 165, 63, 221, 221, 173, 65, 72, 85, 117, 64, 41, 182, 165, 63, 221, 221, 173, 65, 176, 187, 59, 64, 195, 79, 191, 63, 17, 17, 181, 65, 24, 34, 98, 64, 195, 79, 191, 63, 119, 119, 231, 65, 0, 17, 145, 63, 246, 130, 242, 63, 119, 119, 231, 65, 176, 187, 59, 64, 195, 79, 191, 63, 17, 17, 157, 65, 128, 136, 40, 64, 195, 79, 191, 63, 119, 119, 159, 65, 96, 136, 8, 63, 246, 130, 242, 63, 221, 221, 233, 65, 0, 138, 136, 189, 195, 79, 191, 63, 221, 221, 161, 65, 128, 136, 40, 64, 41, 182, 165, 63, 134, 136, 80, 65, 64, 68, 228, 64, 41, 182, 165, 63, 186, 187, 75, 65, 0, 17, 145, 63, 246, 130, 242, 63, 34, 34, 20, 66, 0, 138, 136, 189, 246, 130, 242, 63, 34, 34, 20, 66, 216, 221, 237, 64, 236, 5, 101, 63, 238, 238, 70, 65, 64, 68, 228, 64, 41, 182, 165, 63, 169, 170, 130, 65, 84, 85, 29, 65, 236, 5, 101, 63, 164, 170, 234, 64, 134, 136, 48, 65, 236, 5, 101, 63, 164, 170, 234, 64, 32, 34, 58, 65, 236, 5, 101, 63, 67, 68, 128, 65, 216, 221, 237, 64, 236, 5, 101, 63, 134, 136, 32, 65, 168, 170, 218, 64, 236, 5, 101, 63, 238, 238, 22, 65, 186, 187, 19, 65, 236, 5, 101, 63, 116, 119, 215, 64, 216, 221, 237, 64, 236, 5, 101, 63, 134, 136, 56, 65, 0, 138, 136, 189, 11, 63, 253, 62, 238, 238, 22, 65, 225, 221, 21, 193, 11, 63, 253, 62, 238, 238, 22, 65, 0, 188, 187, 190, 246, 130, 242, 63, 67, 68, 224, 65, 160, 119, 119, 191, 195, 79, 191, 63, 221, 221, 161, 65, 28, 17, 49, 192, 246, 130, 242, 63, 136, 136, 22, 66, 132, 119, 87, 192, 246, 130, 242, 63, 17, 17, 229, 65, 160, 119, 119, 191, 246, 130, 242, 63, 17, 17, 229, 65, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 2, 0, 0, 0, 5, 0, 4, 0, 3, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 5, 0, 0, 0, 8, 0, 7, 0, 6, 0, 2, 0, 0, 0, 0, 0, 7, 0, 6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 5, 1, 7, 0, 0, 0, 11, 0, 10, 0, 5, 0, 3, 0, 9, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 7, 0, 0, 0, 1, 1, 5, 1, 9, 0, 0, 0, 14, 0, 13, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 6, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 12, 0, 0, 0, 12, 0, 15, 0, 6, 0, 7, 0, 14, 0, 0, 0, 27, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 1, 1, 5, 1, 14, 0, 0, 0, 7, 0, 8, 0, 11, 0, 9, 0, 0, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 1, 1, 4, 1, 16, 0, 0, 0, 18, 0, 17, 0, 4, 0, 5, 0, 16, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 11, 0, 0, 0, 1, 1, 5, 1, 18, 0, 0, 0, 22, 0, 21, 0, 20, 0, 19, 0, 0, 0, 0, 0, 10, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 1, 1, 4, 1, 19, 0, 0, 0, 25, 0, 24, 0, 21, 0, 22, 0, 23, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 1, 1, 5, 1, 21, 0, 0, 0, 27, 0, 18, 0, 16, 0, 26, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 12, 0, 0, 0, 0, 0, 1, 1, 4, 1, 23, 0, 0, 0, 20, 0, 29, 0, 27, 0, 26, 0, 28, 0, 19, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 9, 0, 1, 1, 6, 1, 24, 0, 0, 0, 34, 0, 33, 0, 32, 0, 31, 0, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 1, 1, 5, 1, 27, 0, 0, 0, 12, 0, 13, 0, 37, 0, 36, 0, 35, 0, 0, 0, 5, 0, 0, 0, 15, 0, 0, 0, 29, 0, 0, 0, 1, 1, 5, 1, 29, 0, 0, 0, 34, 0, 30, 0, 36, 0, 37, 0, 0, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 1, 1, 4, 1, 30, 0, 0, 0, 40, 0, 39, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 31, 0, 0, 0, 43, 0, 42, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 34, 0, 0, 0, 45, 0, 41, 0, 40, 0, 38, 0, 44, 0, 0, 0, 19, 0, 0, 0, 16, 0, 22, 0, 0, 0, 0, 0, 1, 1, 5, 1, 37, 0, 0, 0, 45, 0, 47, 0, 46, 0, 43, 0, 41, 0, 0, 0, 0, 0, 24, 0, 0, 0, 17, 0, 18, 0, 0, 0, 1, 1, 5, 1, 38, 0, 0, 0, 49, 0, 48, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 39, 0, 0, 0, 51, 0, 50, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 42, 0, 0, 0, 53, 0, 52, 0, 49, 0, 44, 0, 38, 0, 0, 0, 23, 0, 0, 0, 20, 0, 18, 0, 0, 0, 0, 0, 1, 1, 5, 1, 44, 0, 0, 0, 53, 0, 56, 0, 55, 0, 54, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 22, 0, 0, 0, 1, 1, 5, 1, 47, 0, 0, 0, 47, 0, 51, 0, 46, 0, 0, 0, 0, 0, 0, 0, 32, 0, 21, 0, 19, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 49, 0, 0, 0, 59, 0, 58, 0, 57, 0, 54, 0, 0, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 1, 1, 4, 1, 51, 0, 0, 0, 60, 0, 52, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 28, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 54, 0, 0, 0, 15, 0, 12, 0, 61, 0, 58, 0, 59, 0, 0, 0, 6, 0, 29, 0, 0, 0, 25, 0, 0, 0, 0, 0, 1, 1, 5, 1, 56, 0, 0, 0, 57, 0, 60, 0, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 25, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 58, 0, 0, 0, 12, 0, 35, 0, 62, 0, 61, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 1, 1, 4, 1, 59, 0, 0, 0, 47, 0, 64, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 60, 0, 0, 0, 67, 0, 66, 0, 65, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 1, 1, 4, 1, 63, 0, 0, 0, 47, 0, 63, 0, 51, 0, 0, 0, 0, 0, 0, 0, 30, 0, 33, 0, 24, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 65, 0, 0, 0, 63, 0, 67, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 0, 32, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 66, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 67, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 71, 0, 0, 0, 1, 0, 0, 0, 0, 255, 0, 0, 64, 0, 0, 0, 255, 255, 255, 255, 3, 255, 0, 0, 69, 0, 0, 0, 3, 0, 0, 0, 1, 255, 0, 0, 70, 0, 0, 0, 4, 0, 0, 0, 0, 255, 0, 0, 70, 0, 0, 0, 255, 255, 255, 255, 4, 255, 0, 0, 65, 0, 0, 0, 6, 0, 0, 0, 2, 255, 0, 0, 69, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 77, 0, 0, 0, 8, 0, 0, 0, 1, 255, 0, 0, 68, 0, 0, 0, 255, 255, 255, 255, 4, 255, 0, 0, 66, 0, 0, 0, 10, 0, 0, 0, 2, 255, 0, 0, 90, 0, 0, 0, 11, 0, 0, 0, 0, 255, 0, 0, 67, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 66, 0, 0, 0, 13, 0, 0, 0, 0, 255, 0, 0, 74, 0, 0, 0, 255, 255, 255, 255, 4, 255, 0, 0, 65, 0, 0, 0, 15, 0, 0, 0, 2, 255, 0, 0, 75, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 73, 0, 0, 0, 17, 0, 0, 0, 0, 255, 0, 0, 72, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 75, 0, 0, 0, 255, 255, 255, 255, 3, 255, 0, 0, 71, 0, 0, 0, 20, 0, 0, 0, 1, 255, 0, 0, 72, 0, 0, 0, 255, 255, 255, 255, 5, 255, 0, 0, 74, 0, 0, 0, 22, 0, 0, 0, 2, 255, 0, 0, 78, 0, 0, 0, 255, 255, 255, 255, 4, 255, 0, 0, 92, 0, 0, 0, 255, 255, 255, 255, 4, 255, 0, 0, 78, 0, 0, 0, 25, 0, 0, 0, 2, 255, 0, 0, 68, 0, 0, 0, 26, 0, 0, 0, 0, 255, 0, 0, 77, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 76, 0, 0, 0, 28, 0, 0, 0, 0, 255, 0, 0, 81, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 82, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 85, 0, 0, 0, 255, 255, 255, 255, 3, 255, 0, 0, 79, 0, 0, 0, 32, 0, 0, 0, 2, 255, 0, 0, 82, 0, 0, 0, 33, 0, 0, 0, 0, 255, 0, 0, 81, 0, 0, 0, 255, 255, 255, 255, 4, 255, 0, 0, 80, 0, 0, 0, 35, 0, 0, 0, 3, 255, 0, 0, 87, 0, 0, 0, 36, 0, 0, 0, 1, 255, 0, 0, 85, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 87, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 81, 0, 0, 0, 255, 255, 255, 255, 3, 255, 0, 0, 83, 0, 0, 0, 40, 0, 0, 0, 2, 255, 0, 0, 86, 0, 0, 0, 41, 0, 0, 0, 0, 255, 0, 0, 85, 0, 0, 0, 255, 255, 255, 255, 4, 255, 0, 0, 89, 0, 0, 0, 43, 0, 0, 0, 3, 255, 0, 0, 82, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 84, 0, 0, 0, 45, 0, 0, 0, 1, 255, 0, 0, 95, 0, 0, 0, 46, 0, 0, 0, 0, 255, 0, 0, 91, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 90, 0, 0, 0, 48, 0, 0, 0, 0, 255, 0, 0, 91, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 86, 0, 0, 0, 50, 0, 0, 0, 1, 255, 0, 0, 88, 0, 0, 0, 255, 255, 255, 255, 3, 255, 0, 0, 92, 0, 0, 0, 52, 0, 0, 0, 1, 255, 0, 0, 69, 0, 0, 0, 53, 0, 0, 0, 0, 255, 0, 0, 88, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 89, 0, 0, 0, 55, 0, 0, 0, 1, 255, 0, 0, 90, 0, 0, 0, 255, 255, 255, 255, 3, 255, 0, 0, 77, 0, 0, 0, 57, 0, 0, 0, 0, 255, 0, 0, 95, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 96, 0, 0, 0, 255, 255, 255, 255, 3, 255, 0, 0, 87, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 96, 0, 0, 0, 61, 0, 0, 0, 1, 255, 0, 0, 93, 0, 0, 0, 62, 0, 0, 0, 0, 255, 0, 0, 95, 0, 0, 0, 255, 255, 255, 255, 2, 255, 0, 0, 94, 0, 0, 0, 64, 0, 0, 0, 1, 255, 0, 0, 0, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 31, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 36, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 37, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 53, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 55, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 60, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 62, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 65, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 0, 1, 0, 0, 0, 1, 2, 21, 0, 1, 2, 21, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 21, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 5, 0, 2, 3, 20, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 5, 0, 2, 3, 20, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 5, 0, 2, 3, 20, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 4, 0, 4, 5, 20, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 5, 0, 2, 3, 20, 0, 1, 2, 21, 0, 1, 2, 21, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 21, 0, 1, 2, 21, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 21, 0, 1, 2, 5, 0, 2, 3, 20, 0, 1, 2, 21, 0, 1, 2, 5, 0, 2, 3, 4, 0, 3, 4, 20, 0, 1, 2, 21, 0, 1, 2, 5, 0, 2, 3, 20, 0, 1, 2, 21, 0, 1, 2, 5, 0, 2, 3, 20, 0, 1, 2, 21, 0, 1, 2, 21, 0, 0, 0, 0, 0, 0, 101, 0, 5, 0, 211, 0, 191, 255, 255, 255, 0, 0, 0, 0, 0, 0, 97, 0, 5, 0, 117, 0, 225, 255, 255, 255, 0, 0, 1, 0, 0, 0, 81, 0, 5, 0, 53, 0, 241, 255, 255, 255, 0, 0, 3, 0, 0, 0, 58, 0, 5, 0, 24, 0, 249, 255, 255, 255, 0, 0, 4, 0, 0, 0, 31, 0, 5, 0, 14, 0, 253, 255, 255, 255, 0, 0, 4, 0, 0, 0, 29, 0, 5, 0, 13, 0, 9, 0, 0, 0, 26, 0, 4, 0, 8, 0, 31, 0, 5, 0, 14, 0, 8, 0, 0, 0, 27, 0, 3, 0, 10, 0, 58, 0, 5, 0, 24, 0, 253, 255, 255, 255, 27, 0, 3, 0, 10, 0, 57, 0, 5, 0, 23, 0, 11, 0, 0, 0, 48, 0, 3, 0, 22, 0, 58, 0, 4, 0, 24, 0, 10, 0, 0, 0, 50, 0, 1, 0, 23, 0, 81, 0, 4, 0, 53, 0, 249, 255, 255, 255, 50, 0, 2, 0, 23, 0, 66, 0, 4, 0, 36, 0, 253, 255, 255, 255, 50, 0, 2, 0, 23, 0, 62, 0, 4, 0, 36, 0, 7, 0, 0, 0, 62, 0, 2, 0, 23, 0, 66, 0, 3, 0, 36, 0, 1, 0, 0, 0, 62, 0, 1, 0, 23, 0, 81, 0, 3, 0, 53, 0, 253, 255, 255, 255, 62, 0, 2, 0, 23, 0, 79, 0, 3, 0, 38, 0, 3, 0, 0, 0, 68, 0, 1, 0, 38, 0, 81, 0, 3, 0, 53, 0, 6, 0, 0, 0, 1, 0, 0, 0, 39, 0, 97, 0, 2, 0, 117, 0, 241, 255, 255, 255, 1, 0, 0, 0, 43, 0, 62, 0, 0, 0, 117, 0, 249, 255, 255, 255, 1, 0, 0, 0, 43, 0, 32, 0, 0, 0, 58, 0, 253, 255, 255, 255, 1, 0, 0, 0, 43, 0, 31, 0, 0, 0, 56, 0, 12, 0, 0, 0, 29, 0, 0, 0, 53, 0, 32, 0, 0, 0, 58, 0, 14, 0, 0, 0, 31, 0, 0, 0, 54, 0, 62, 0, 0, 0, 117, 0, 253, 255, 255, 255, 31, 0, 0, 0, 54, 0, 62, 0, 0, 0, 86, 0, 13, 0, 0, 0, 31, 0, 0, 0, 86, 0, 62, 0, 0, 0, 117, 0, 28, 0, 0, 0, 62, 0, 0, 0, 39, 0, 97, 0, 2, 0, 86, 0, 249, 255, 255, 255, 68, 0, 1, 0, 39, 0, 97, 0, 2, 0, 54, 0, 253, 255, 255, 255, 68, 0, 1, 0, 39, 0, 97, 0, 2, 0, 54, 0, 2, 0, 0, 0, 95, 0, 1, 0, 39, 0, 97, 0, 2, 0, 52, 0, 0, 0, 0, 0, 62, 0, 0, 0, 53, 0, 93, 0, 2, 0, 86, 0, 253, 255, 255, 255, 62, 0, 0, 0, 53, 0, 93, 0, 2, 0, 86, 0, 5, 0, 0, 0, 62, 0, 0, 0, 54, 0, 66, 0, 2, 0, 86, 0, 4, 0, 0, 0, 51, 0, 0, 0, 86, 0, 101, 0, 5, 0, 211, 0, 223, 255, 255, 255, 62, 0, 0, 0, 86, 0, 101, 0, 4, 0, 158, 0, 241, 255, 255, 255, 62, 0, 0, 0, 86, 0, 101, 0, 3, 0, 140, 0, 249, 255, 255, 255, 62, 0, 0, 0, 86, 0, 95, 0, 2, 0, 119, 0, 253, 255, 255, 255, 62, 0, 0, 0, 86, 0, 93, 0, 2, 0, 117, 0, 26, 0, 0, 0, 85, 0, 1, 0, 108, 0, 95, 0, 2, 0, 119, 0, 24, 0, 0, 0, 86, 0, 1, 0, 110, 0, 101, 0, 3, 0, 140, 0, 253, 255, 255, 255, 87, 0, 1, 0, 110, 0, 95, 0, 2, 0, 124, 0, 27, 0, 0, 0, 86, 0, 1, 0, 110, 0, 101, 0, 3, 0, 140, 0, 22, 0, 0, 0, 71, 0, 1, 0, 110, 0, 95, 0, 4, 0, 158, 0, 249, 255, 255, 255, 72, 0, 1, 0, 110, 0, 95, 0, 4, 0, 151, 0, 253, 255, 255, 255, 87, 0, 1, 0, 110, 0, 95, 0, 2, 0, 127, 0, 25, 0, 0, 0, 72, 0, 1, 0, 127, 0, 87, 0, 4, 0, 151, 0, 21, 0, 0, 0, 71, 0, 2, 0, 128, 0, 86, 0, 4, 0, 158, 0, 253, 255, 255, 255, 71, 0, 2, 0, 128, 0, 86, 0, 4, 0, 151, 0, 19, 0, 0, 0, 75, 0, 2, 0, 142, 0, 86, 0, 3, 0, 158, 0, 15, 0, 0, 0, 51, 0, 2, 0, 142, 0, 84, 0, 5, 0, 211, 0, 239, 255, 255, 255, 59, 0, 2, 0, 142, 0, 84, 0, 5, 0, 209, 0, 249, 255, 255, 255, 62, 0, 2, 0, 142, 0, 84, 0, 5, 0, 183, 0, 253, 255, 255, 255, 71, 0, 2, 0, 142, 0, 84, 0, 4, 0, 161, 0, 17, 0, 0, 0, 62, 0, 3, 0, 152, 0, 72, 0, 5, 0, 183, 0, 18, 0, 0, 0, 59, 0, 3, 0, 153, 0, 64, 0, 5, 0, 209, 0, 253, 255, 255, 255, 59, 0, 3, 0, 153, 0, 62, 0, 5, 0, 179, 0, 29, 0, 0, 0, 62, 0, 3, 0, 153, 0, 64, 0, 5, 0, 209, 0, 23, 0, 0, 0, 51, 0, 3, 0, 153, 0, 74, 0, 5, 0, 211, 0, 247, 255, 255, 255, 61, 0, 3, 0, 153, 0, 74, 0, 5, 0, 209, 0, 253, 255, 255, 255, 61, 0, 3, 0, 153, 0, 62, 0, 5, 0, 209, 0, 31, 0, 0, 0, 66, 0, 3, 0, 161, 0, 74, 0, 5, 0, 182, 0, 16, 0, 0, 0, 51, 0, 4, 0, 179, 0, 66, 0, 5, 0, 211, 0, 251, 255, 255, 255, 59, 0, 4, 0, 179, 0, 62, 0, 5, 0, 209, 0, 32, 0, 0, 0, 51, 0, 4, 0, 181, 0, 66, 0, 5, 0, 211, 0, 253, 255, 255, 255, 51, 0, 4, 0, 181, 0, 62, 0, 5, 0, 211, 0, 30, 0, 0, 0, 62, 0, 4, 0, 183, 0, 66, 0, 5, 0, 209, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n\n\n//# sourceURL=webpack:///./src/testdata.ts?");

/***/ }),

/***/ 0:
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///path_(ignored)?");

/***/ }),

/***/ 1:
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///fs_(ignored)?");

/***/ })

/******/ });